*****************************************************************************
*           CTC++, Test Coverage Analyzer for C/C++, Version 8.2            *
*                                                                           *
*                         EXECUTION PROFILE LISTING                         *
*                                                                           *
*                    Copyright (c) 1993-2013 Testwell Oy                    *
*             Copyright (c) 2013-2017 Verifysoft Technology GmbH            *
*****************************************************************************


Symbol file(s) used   : MON.sym (Sat Jun 29 15:01:52 2019)
Data file(s) used     : MON.dat (Sat Jun 29 15:02:34 2019)
Listing produced at   : Sat Jun 29 15:02:35 2019
Coverage view         : Reduced to MC/DC coverage



MONITORED SOURCE FILE : E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\sin\cos.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         8                  2 FUNCTION cos()
         8                  4   return ( _Sinx ( x , 1 , 0 ) )
                            5 }

***TER 100 % (  2/  2) of FUNCTION cos()
       100 % (  1/  1) statement
-----------------------------------------------------------------------------


***TER 100 % (  2/  2) of FILE E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\sin\cos.c
       100 % (  1/  1) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\sin\errno.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================


***TER 100 % (  0/  0) of FILE E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\sin\errno.c
       100 % (  0/  0) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\sin\fegetenv.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         2                  2 FUNCTION fegetenv()
         2                  7   return ( 0 )
                            8 }

***TER 100 % (  2/  2) of FUNCTION fegetenv()
       100 % (  2/  2) statement
-----------------------------------------------------------------------------


***TER 100 % (  2/  2) of FILE E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\sin\fegetenv.c
       100 % (  2/  2) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\sin\feraiseexcept.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         2                  3 FUNCTION feraiseexcept()
         2          0 -     5   if (( except &= ( 0x02 | 0x10 | 0x01 | 0x04 | 0x08 ) ) != 0)
         0          2 -    20     if (( except &= ( env >> 8 ) ) != 0)
                           21     }+
                           22   }+
         2                 23   return ( 0 )
                           24 }

***TER  67 % (  4/  6) of FUNCTION feraiseexcept()
        88 % (  7/  8) statement
-----------------------------------------------------------------------------


***TER  67 % (  4/  6) of FILE E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\sin\feraiseexcept.c
        88 % (  7/  8) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\sin\fesetenv.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         0            -    12 FUNCTION _Force_raise()
         0          0 -    21   for (;i < sizeof ( table ) / sizeof ( table [ 0 ] );)
         0          0 -    22     if (( except & table [ i ] . except ) != 0)
                           23     }-
                           23   }-
         0            -    24   return ( ans )
                           25 }

***TER   0 % (  0/  6) of FUNCTION _Force_raise()
         0 % (  0/  8) statement
-----------------------------------------------------------------------------

         2                 28 FUNCTION fesetenv()
         2                 32   return ( 0 )
                           33 }

***TER 100 % (  2/  2) of FUNCTION fesetenv()
       100 % (  1/  1) statement
-----------------------------------------------------------------------------


***TER  25 % (  2/  8) of FILE E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\sin\fesetenv.c
        11 % (  1/  9) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\sin\fmod.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         0            -     2 FUNCTION fmod()
         0          0 -     6   if (0 <= errx || 0 <= erry)
         0                  6     1: T || _
         0                  6     2: F || T
                    0       6     3: F || F
                      -     6     MC/DC (cond 1): 1 - 3
                      -     6     MC/DC (cond 2): 2 - 3
         0          0 -     8     if (errx == 2)
         0            -     9       return ( x )
                            9     }-
         0          0 -    10     else if (erry == 2)
         0            -    11       return ( y )
                           11     }-
         0          0 -    12     else if (errx == 1 || erry == 0)
         0                 12       1: T || _
         0                 12       2: F || T
                    0      12       3: F || F
                      -    12       MC/DC (cond 1): 1 - 3
                      -    12       MC/DC (cond 2): 2 - 3
         0            -    15       return ( _Nan . _Double )
                           16     }-
                           17     else
         0            -    18       return ( x )
                           18     }-
                           19   }-
                           20   else
         0          0 -    26     if (x < 0.0)
                           30     }-
                           31     else
                           32     }-
         0            -    33     const-for (;;)
         0          0 -    38       if (n < 0 || _Dunscale ( & xchar , & t ) == 0 || ( n = ( long ) xchar - ychar ) < 0)
         0                 38         1: T || _ || _
         0                 38         2: F || T || _
         0                 38         3: F || F || T
                    0      38         4: F || F || F
                      -    38         MC/DC (cond 1): 1 - 4
                      -    38         MC/DC (cond 2): 2 - 4
                      -    38         MC/DC (cond 3): 3 - 4
         0          0 -    40         if (neg)
                           41         }-
         0            -    42         return ( x )
                           43       }-
         0          0 -    44       for (;0 <= n;)
         0          0 -    47         if (x < t)
                           48         }-
         0          0 -    49         else if (x == t)
         0            -    50           return ( 0.0 )
                           50         }-
                           51         else
                           57         }-
                           58       }-
                           59     }-
                           60   }-
                           61 }

***TER   0 % (  0/ 35) of FUNCTION fmod()
         0 % (  0/ 40) statement
-----------------------------------------------------------------------------


***TER   0 % (  0/ 35) of FILE E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\sin\fmod.c
         0 % (  0/ 40) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\sin\ldexp.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         0            -     2 FUNCTION ldexp()
         0          0 -     4   if (xexp != 0 && _Dtest ( & x ) < 0)
         0                  4     1: T && T
                    0       4     2: T && F
                    0       4     3: F && _
                      -     4     MC/DC (cond 1): 1 - 3
                      -     4     MC/DC (cond 2): 1 - 2
                            5     switch (_Dscalex ( & x , xexp , 1 ))
         0            -     7     case 0:
         0            -     9       break
         0            -    10     case 1:
                           12     }-
                           12   }-
         0            -    13   return ( x )
                           14 }

***TER   0 % (  0/  9) of FUNCTION ldexp()
         0 % (  0/  6) statement
-----------------------------------------------------------------------------


***TER   0 % (  0/  9) of FILE E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\sin\ldexp.c
         0 % (  0/  6) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\sin\main.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         8                 15 FUNCTION my_atof()
         1          7      16   if (strcmp ( s , "NAN" ) == 0)
         1                 17     return __builtin_nanf ( "" )
                           18   }+
         0          7 -    19   if (strcmp ( s , "DENORM" ) == 0 || strcmp ( s , "DEN" ) == 0)
         0                 19     1: T || _
         0                 19     2: F || T
                    7      19     3: F || F
                      -    19     MC/DC (cond 1): 1 - 3
                      -    19     MC/DC (cond 2): 2 - 3
         0          0 -    21     while (d / 2 > 0)
                           23     }-
         0            -    24     return d
                           25   }+
         0          7 -    26   if (strcmp ( s , "-DENORM" ) == 0 || strcmp ( s , "-DEN" ) == 0)
         0                 26     1: T || _
         0                 26     2: F || T
                    7      26     3: F || F
                      -    26     MC/DC (cond 1): 1 - 3
                      -    26     MC/DC (cond 2): 2 - 3
         0          0 -    28     while (d / 2 < 0)
                           30     }-
         0            -    31     return d
                           32   }+
         1          6      33   if (strcmp ( s , "INF" ) == 0 || strcmp ( s , "INFINITY" ) == 0)
         1                 33     1: T || _
         0                 33     2: F || T
                    6      33     3: F || F
                           33     MC/DC (cond 1): 1 + 3
                      -    33     MC/DC (cond 2): 2 - 3
         1                 34     return ( ( double ) __builtin_inff ( ) )
                           35   }+
         0          6 -    36   if (strcmp ( s , "-INF" ) == 0 || strcmp ( s , "-INFINITY" ) == 0)
         0                 36     1: T || _
         0                 36     2: F || T
                    6      36     3: F || F
                      -    36     MC/DC (cond 1): 1 - 3
                      -    36     MC/DC (cond 2): 2 - 3
         0            -    37     return - ( ( double ) __builtin_inff ( ) )
                           38   }+
         0          6 -    39   if (strncmp ( s , "0x" , 2 ) == 0)
         0            -    43     return hv . val
                           44   }+
         6                 45   return atof ( s )
                           46 }

***TER  41 % ( 13/ 32) of FUNCTION my_atof()
        43 % (  9/ 21) statement
-----------------------------------------------------------------------------

         8                 48 FUNCTION main()
         0          8 -    50   if (argc != 2)
         0            -    52     return - 1
                           53   }+
         8                 61   return 0
                           62 }

***TER  60 % (  3/  5) of FUNCTION main()
        80 % (  8/ 10) statement
-----------------------------------------------------------------------------


***TER  43 % ( 16/ 37) of FILE E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\sin\main.c
        55 % ( 17/ 31) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\sin\memcpy.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

        12                  3 FUNCTION memcpy_HighTecARMImpl()
       576         12       7   for (;0 < n;)
                            8   }+
        12                  9   return ( s1 )
                           10 }

***TER 100 % (  4/  4) of FUNCTION memcpy_HighTecARMImpl()
       100 % (  7/  7) statement
-----------------------------------------------------------------------------


***TER 100 % (  4/  4) of FILE E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\sin\memcpy.c
       100 % (  7/  7) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\sin\sin.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         8                  2 FUNCTION sin()
         8                  4   return ( _Sinx ( x , 0 , 0 ) )
                            5 }

***TER 100 % (  2/  2) of FUNCTION sin()
       100 % (  1/  1) statement
-----------------------------------------------------------------------------


***TER 100 % (  2/  2) of FILE E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\sin\sin.c
       100 % (  1/  1) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\sin\sqrt.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         0            -     2 FUNCTION sqrt()
                            6   switch (_Dunscale ( & xexp , & x ))
         0            -     8   case 2:
         0            -     9   case 0:
         0            -    10     return ( x )
         0            -    11   case 1:
         0          0 -    12     if (! ( ( * _Pmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) ))
         0            -    13       return ( x )
                           13     }-
         0            -    14   default:
         0          0 -    15     if (( ( * _Pmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) ))
         0            -    18       return ( _Nan . _Double )
                           19     }-
         0          0 -    20     if (( unsigned int ) xexp & 1)
                           21     }-
         0            -    28     return ( y )
                           29   }-
                           30 }

***TER   0 % (  0/ 15) of FUNCTION sqrt()
         0 % (  0/ 17) statement
-----------------------------------------------------------------------------


***TER   0 % (  0/ 15) of FILE E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\sin\sqrt.c
         0 % (  0/ 17) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\sin\xdint.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

       354                 60 FUNCTION _Dint()
         0        354 -    65   if (xchar == ( ( unsigned short ) ( ( 1 << ( 15 - 4 ) ) - 1 ) ))
         0          0 -    68     ternary-?: ( ps -> _Sh [ 3 ] & ( ( unsigned short ) ( ( 1 << 4 ) - 1 ) ) ) == 0 && ps -> _Sh [ 2 ] == 0 && ps -> _Sh [ 1 ] == 0 && ps -> _Sh [ 0 ] == 0
         0            -    68     return ( ( ps -> _Sh [ 3 ] & ( ( unsigned short ) ( ( 1 << 4 ) - 1 ) ) ) == 0 && ps -> _Sh [ 2 ] == 0 && ps -> _Sh [ 1 ] == 0 && ps -> _Sh [ 0 ] == 0 ? 1 : 2 )
                           68   }+
         0        354 -    70   else if (( ps -> _Sh [ 3 ] & ~ ( ( unsigned short ) 0x8000 ) ) == 0 && ps -> _Sh [ 2 ] == 0 && ps -> _Sh [ 1 ] == 0 && ps -> _Sh [ 0 ] == 0)
         0                 70     1: T && T && T && T
                    0      70     2: T && T && T && F
                    0      70     3: T && T && F && _
                    0      70     4: T && F && _ && _
                  354      70     5: F && _ && _ && _
                      -    70     MC/DC (cond 1): 1 - 5
                      -    70     MC/DC (cond 2): 1 - 4
                      -    70     MC/DC (cond 3): 1 - 3
                      -    70     MC/DC (cond 4): 1 - 2
         0            -    71     return ( 0 )
                           71   }+
         0        354 -    73   if (xchar <= 0)
         0            -    74     return ( 0 )
                           74   }+
         0        354 -    75   else if (( 48 + 4 + 1 ) <= xchar)
         0            -    81     return ( ( - 1 ) )
                           82   }+
                           83   else
                           95     switch (xchar)
        36                 97     case 3:
        42                 99     case 2:
       276                101     case 1:
                          103     }+
       144        210     104     ternary-?: frac != 0
       354                104     return ( frac != 0 ? ( - 1 ) : 0 )
                          105   }-
                          106 }

***TER  44 % ( 11/ 25) of FUNCTION _Dint()
        70 % ( 19/ 27) statement
-----------------------------------------------------------------------------


***TER  44 % ( 11/ 25) of FILE E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\sin\xdint.c
        70 % ( 19/ 27) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\sin\xdnorm.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

       140                  3 FUNCTION _Dnorm()
         0        140 -    10   if (( ps -> _Sh [ 3 ] &= ( ( unsigned short ) ( ( 1 << 4 ) - 1 ) ) ) != 0 || ps -> _Sh [ 2 ] || ps -> _Sh [ 1 ] || ps -> _Sh [ 0 ])
         0                 10     1: T || _ || _ || _
         0                 10     2: F || T || _ || _
         0                 10     3: F || F || T || _
         0                 10     4: F || F || F || T
                  140      10     5: F || F || F || F
                      -    10     MC/DC (cond 1): 1 - 5
                      -    10     MC/DC (cond 2): 2 - 5
                      -    10     MC/DC (cond 3): 3 - 5
                      -    10     MC/DC (cond 4): 4 - 5
         0          0 -    12     for (;ps -> _Sh [ 3 ] == 0;)
                           16     }-
         0          0 -    17     for (;ps -> _Sh [ 3 ] < 1 << 4;)
                           26     }-
         0          0 -    27     for (;1 << ( 4 + 1 ) <= ps -> _Sh [ 3 ];)
                           36     }-
                           38   }+
       140                 40   return ( xchar )
                           41 }

***TER  21 % (  3/ 14) of FUNCTION _Dnorm()
        23 % (  6/ 26) statement
-----------------------------------------------------------------------------


***TER  21 % (  3/ 14) of FILE E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\sin\xdnorm.c
        23 % (  6/ 26) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\sin\xdscale.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

       342                  3 FUNCTION _Dscale()
       342                  5   return ( _Dscalex ( px , lexp , 4 ) )
                            6 }

***TER 100 % (  2/  2) of FUNCTION _Dscale()
       100 % (  1/  1) statement
-----------------------------------------------------------------------------

       342                  8 FUNCTION _Dscalex()
         0        342 -    13   if (xchar == ( ( unsigned short ) ( ( 1 << ( 15 - 4 ) ) - 1 ) ))
         0          0 -    15     ternary-?: ( ps -> _Sh [ 3 ] & ( ( unsigned short ) ( ( 1 << 4 ) - 1 ) ) ) != 0 || ps -> _Sh [ 2 ] != 0 || ps -> _Sh [ 1 ] != 0 || ps -> _Sh [ 0 ] != 0
         0            -    15     return ( ( short ) ( ( ps -> _Sh [ 3 ] & ( ( unsigned short ) ( ( 1 << 4 ) - 1 ) ) ) != 0 || ps -> _Sh [ 2 ] != 0 || ps -> _Sh [ 1 ] != 0 || ps -> _Sh [ 0 ] != 0 ? 2 : 1 ) )
                           15   }+
         0        342 -    16   else if (xchar == 0 && 0 < ( xchar = _Dnorm ( ps ) ))
         0                 16     1: T && T
                    0      16     2: T && F
                  342      16     3: F && _
                      -    16     MC/DC (cond 1): 1 - 3
                      -    16     MC/DC (cond 2): 1 - 2
         0            -    17     return ( 0 )
                           17   }+
         0        342 -    19   if (0 < lexp && ( ( unsigned short ) ( ( 1 << ( 15 - 4 ) ) - 1 ) ) - xchar <= lexp)
         0                 19     1: T && T
                   24      19     2: T && F
                  318      19     3: F && _
                      -    19     MC/DC (cond 1): 1 - 3
                      -    19     MC/DC (cond 2): 1 - 2
         0          0 -    21     ternary-?: ps -> _Sh [ 3 ] & ( ( unsigned short ) 0x8000 )
         0            -    22     return ( 1 )
                           23   }+
       342          0 -    24   else if (- xchar < lexp)
       342                 28     return ( ( - 1 ) )
                           29   }-
                           30   else
         0          0 -    36     if (lexp < - ( 48 + 1 + 4 ) || 0 <= lexp)
         0                 36       1: T || _
         0                 36       2: F || T
                    0      36       3: F || F
                      -    36       MC/DC (cond 1): 1 - 3
                      -    36       MC/DC (cond 2): 2 - 3
         0            -    42       return ( 0 )
                           43     }-
                           44     else
         0          0 -    49       for (;xexp <= - 16;)
         0          0 -    51         ternary-?: psx != 0
                           56       }-
         0          0 -    57       if (( xexp = ( short ) - xexp ) != 0)
         0          0 -    59         ternary-?: psx != 0
                           67       }-
         0          0 -    70       if (psx != 0)
         0          0 -    74         if (round_mode == 4)
                           75         }-
                           77         switch (round_mode)
         0            -    79         case 0:
         0            -    80           break
         0            -    82         case 2:
         0          0 -    83           if (! sign)
                           84           }-
         0            -    85           break
         0            -    87         case 3:
         0          0 -    88           if (sign)
                           89           }-
         0            -    90           break
         0            -    92         default:
         0          0 -    94           if (( 0x8000 < psx || ( 0x8000 == psx && ( ps -> _Sh [ 0 ] & 0x0001 ) != 0 ) ))
         0                 94             1: (T || (_ && _))
         0                 94             2: (F || (T && T))
                    0      94             3: (F || (T && F))
                    0      94             4: (F || (F && _))
                      -    94             MC/DC (cond 1): 1 - 3, 1 - 4
                      -    94             MC/DC (cond 2): 2 - 4
                      -    94             MC/DC (cond 3): 2 - 3
                           95           }-
         0            -    96           break
                           97         }-
         0          0 -   102         if (roundup && ( ++ ps -> _Sh [ 0 ] & 0xffff ) == 0 && ( ++ ps -> _Sh [ 1 ] & 0xffff ) == 0 && ( ++ ps -> _Sh [ 2 ] & 0xffff ) == 0)
         0                102           1: T && T && T && T
                    0     102           2: T && T && T && F
                    0     102           3: T && T && F && _
                    0     102           4: T && F && _ && _
                    0     102           5: F && _ && _ && _
                      -   102           MC/DC (cond 1): 1 - 5
                      -   102           MC/DC (cond 2): 1 - 4
                      -   102           MC/DC (cond 3): 1 - 3
                      -   102           MC/DC (cond 4): 1 - 2
                          103         }-
                          104       }-
         0          0 -   109       if (ps -> _Sh [ 3 ] == sign && ps -> _Sh [ 2 ] == 0 && ps -> _Sh [ 1 ] == 0 && ps -> _Sh [ 0 ] == 0)
         0                109         1: T && T && T && T
                    0     109         2: T && T && T && F
                    0     109         3: T && T && F && _
                    0     109         4: T && F && _ && _
                    0     109         5: F && _ && _ && _
                      -   109         MC/DC (cond 1): 1 - 5
                      -   109         MC/DC (cond 2): 1 - 4
                      -   109         MC/DC (cond 3): 1 - 3
                      -   109         MC/DC (cond 4): 1 - 2
         0            -   110         return ( 0 )
                          110       }-
                          111       else
         0            -   112         return ( ( - 1 ) )
                          112       }-
                          113     }-
                          114   }-
                          115 }

***TER   9 % (  6/ 69) of FUNCTION _Dscalex()
        14 % (  8/ 58) statement
-----------------------------------------------------------------------------


***TER  11 % (  8/ 71) of FILE E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\sin\xdscale.c
        15 % (  9/ 59) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\sin\xdtest.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

        28                  4 FUNCTION _Dtest()
         4         24       8   if (( ps -> _Sh [ 3 ] & ( ( unsigned short ) ( 0x7fff & ~ ( ( unsigned short ) ( ( 1 << 4 ) - 1 ) ) ) ) ) == ( ( unsigned short ) ( ( 1 << ( 15 - 4 ) ) - 1 ) ) << 4)
         2          2      10     ternary-?: ( ps -> _Sh [ 3 ] & ( ( unsigned short ) ( ( 1 << 4 ) - 1 ) ) ) != 0 || ps -> _Sh [ 2 ] != 0 || ps -> _Sh [ 1 ] != 0 || ps -> _Sh [ 0 ] != 0
         4                 10     return ( ( short ) ( ( ps -> _Sh [ 3 ] & ( ( unsigned short ) ( ( 1 << 4 ) - 1 ) ) ) != 0 || ps -> _Sh [ 2 ] != 0 || ps -> _Sh [ 1 ] != 0 || ps -> _Sh [ 0 ] != 0 ? 2 : 1 ) )
                           10   }+
        24          0 -    12   else if (( ps -> _Sh [ 3 ] & ~ ( ( unsigned short ) 0x8000 ) ) != 0 || ps -> _Sh [ 2 ] != 0 || ps -> _Sh [ 1 ] != 0 || ps -> _Sh [ 0 ] != 0)
        24                 12     1: T || _ || _ || _
         0                 12     2: F || T || _ || _
         0                 12     3: F || F || T || _
         0                 12     4: F || F || F || T
                    0      12     5: F || F || F || F
                      -    12     MC/DC (cond 1): 1 - 5
                      -    12     MC/DC (cond 2): 2 - 5
                      -    12     MC/DC (cond 3): 3 - 5
                      -    12     MC/DC (cond 4): 4 - 5
         0         24 -    13     ternary-?: ( ps -> _Sh [ 3 ] & ( ( unsigned short ) ( 0x7fff & ~ ( ( unsigned short ) ( ( 1 << 4 ) - 1 ) ) ) ) ) == 0
        24                 13     return ( ( ps -> _Sh [ 3 ] & ( ( unsigned short ) ( 0x7fff & ~ ( ( unsigned short ) ( ( 1 << 4 ) - 1 ) ) ) ) ) == 0 ? ( - 2 ) : ( - 1 ) )
                           13   }-
                           14   else
         0            -    15     return ( 0 )
                           15   }-
                           16 }

***TER  56 % (  9/ 16) of FUNCTION _Dtest()
        83 % (  5/  6) statement
-----------------------------------------------------------------------------

         0            -    18 FUNCTION _Plsw()
         0            -    20   return ( & ( ( _Dval * ) ( char * ) px ) -> _Sh [ 0 ] )
                           21 }

***TER   0 % (  0/  2) of FUNCTION _Plsw()
         0 % (  0/  1) statement
-----------------------------------------------------------------------------

         4                 23 FUNCTION _Pmsw()
         4                 25   return ( & ( ( _Dval * ) ( char * ) px ) -> _Sh [ 3 ] )
                           26 }

***TER 100 % (  2/  2) of FUNCTION _Pmsw()
       100 % (  1/  1) statement
-----------------------------------------------------------------------------


***TER  55 % ( 11/ 20) of FILE E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\sin\xdtest.c
        75 % (  6/  8) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\sin\xdunscal.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

      1524                  3 FUNCTION _Dunscale()
         0       1524 -     8   if (xchar == ( ( unsigned short ) ( ( 1 << ( 15 - 4 ) ) - 1 ) ))
         0          0 -    12     ternary-?: ( ps -> _Sh [ 3 ] & ( ( unsigned short ) ( ( 1 << 4 ) - 1 ) ) ) != 0 || ps -> _Sh [ 2 ] != 0 || ps -> _Sh [ 1 ] != 0 || ps -> _Sh [ 0 ] != 0
         0            -    12     return ( ( ps -> _Sh [ 3 ] & ( ( unsigned short ) ( ( 1 << 4 ) - 1 ) ) ) != 0 || ps -> _Sh [ 2 ] != 0 || ps -> _Sh [ 1 ] != 0 || ps -> _Sh [ 0 ] != 0 ? 2 : 1 )
                           13   }+
      1384        140      14   else if (0 < xchar || ( xchar = _Dnorm ( ps ) ) <= 0)
      1384                 14     1: T || _
         0                 14     2: F || T
                  140      14     3: F || F
                           14     MC/DC (cond 1): 1 + 3
                      -    14     MC/DC (cond 2): 2 - 3
      1384                 18     return ( ( - 1 ) )
                           19   }+
                           20   else
       140                 23     return ( 0 )
                           24   }-
                           25 }

***TER  58 % (  7/ 12) of FUNCTION _Dunscale()
        82 % (  9/ 11) statement
-----------------------------------------------------------------------------


***TER  58 % (  7/ 12) of FILE E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\sin\xdunscal.c
        82 % (  9/ 11) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\sin\xfenv0.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================


***TER 100 % (  0/  0) of FILE E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\sin\xfenv0.c
       100 % (  0/  0) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\sin\xferaise.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         2                  2 FUNCTION _Feraise()
         2          0 -     7   if (( errh & 2 ) != 0)
         0          2 -     9     if (( except & ( 0x04 | 0x08 ) ) != 0)
                           10     }+
                           12   }+
         0          2 -    14   if (( errh & 1 ) == 0)
                           15   }+
         2          0 -    16   else if (( except & 0x01 ) != 0)
                           17   }-
         0          0 -    18   else if (( except & ( 0x02 | 0x08 | 0x04 ) ) != 0)
                           19   }+
         2                 27 }

***TER  50 % (  6/ 12) of FUNCTION _Feraise()
        64 % (  7/ 11) statement
-----------------------------------------------------------------------------


***TER  50 % (  6/ 12) of FILE E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\sin\xferaise.c
        64 % (  7/ 11) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\sin\xprec.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         0            -     4 FUNCTION _Xp_getw()
         0            -     5   return _Xp_getw_help ( p , n , 0 )
                            6 }

***TER   0 % (  0/  2) of FUNCTION _Xp_getw()
         0 % (  0/  1) statement
-----------------------------------------------------------------------------

        12                  7 FUNCTION _Xp_getw_help()
         0         12 -    10   if (n == 0)
         0            -    11     return ( 0.0 )
                           11   }+
         0         12 -    12   else if (n == 1 || p [ 0 ] == 0.0 || p [ 1 ] == 0.0)
         0                 12     1: T || _ || _
         0                 12     2: F || T || _
         0                 12     3: F || F || T
                   12      12     4: F || F || F
                      -    12     MC/DC (cond 1): 1 - 4
                      -    12     MC/DC (cond 2): 2 - 4
                      -    12     MC/DC (cond 3): 3 - 4
         0            -    13     return ( p [ 0 ] )
                           13   }+
         0         12 -    14   else if (n == 2 || p [ 2 ] == 0.0)
         0                 14     1: T || _
         0                 14     2: F || T
                   12      14     3: F || F
                      -    14     MC/DC (cond 1): 1 - 3
                      -    14     MC/DC (cond 2): 2 - 3
         0            -    15     return ( p [ 0 ] + p [ 1 ] )
                           15   }+
                           16   else
        12          0 -    20     if (4 <= n)
                           21     }+
        10          2      22     if (p01 - p [ 0 ] == p [ 1 ])
        10                 23       return ( p01 + p2 )
                           23     }+
                           24     else
         2                 25       return ( p [ 0 ] + ( p [ 1 ] + p2 ) )
                           25     }-
                           26   }-
                           27 }

***TER  43 % (  9/ 21) of FUNCTION _Xp_getw_help()
        79 % ( 11/ 14) statement
-----------------------------------------------------------------------------

        12                 28 FUNCTION _Xp_setw()
         0         12 -    32   if (n <= 0)
                           33   }+
         0         12 -    34   else if (n == 1 || ( errx = _Dunscale ( & xexp , & x0 ) ) == 0)
         0                 34     1: T || _
         0                 34     2: F || T
                   12      34     3: F || F
                      -    34     MC/DC (cond 1): 1 - 3
                      -    34     MC/DC (cond 2): 2 - 3
                           35   }+
         0         12 -    36   else if (0 < errx)
                           40   }+
                           41   else
         0         12 -    47     if (( 53 & 1 ) != 0 && 2 < n && p [ 1 ] != 0.0)
         0                 47       1: T && T && T
                    0      47       2: T && T && F
                   12      47       3: T && F && _
                    0      47       4: F && _ && _
                      -    47       MC/DC (cond 1): 1 - 4
                      -    47       MC/DC (cond 2): 1 - 3
                      -    47       MC/DC (cond 3): 1 - 2
         0          0 -    54       if (3 < n && p [ 2 ] != 0.0)
         0                 54         1: T && T
                    0      54         2: T && F
                    0      54         3: F && _
                      -    54         MC/DC (cond 1): 1 - 3
                      -    54         MC/DC (cond 2): 1 - 2
                           55       }-
                           56     }+
         0         12 -    57     else if (2 < n)
                           58     }+
                           59   }+
        12                 60   return ( p )
                           61 }

***TER  33 % (  7/ 21) of FUNCTION _Xp_setw()
        50 % ( 12/ 24) statement
-----------------------------------------------------------------------------

       158                 62 FUNCTION _Xp_addh()
         0        158 -    66   if (n == 0)
                           67   }+
         0        158 -    68   else if (0 < ( errx = _Dunscale ( & xexp , & xscaled ) ))
         0          0 -    69     if (errx == 2 || ( errx = _Dtest ( & p [ 0 ] ) ) <= 0)
         0                 69       1: T || _
         0                 69       2: F || T
                    0      69       3: F || F
                      -    69       MC/DC (cond 1): 1 - 3
                      -    69       MC/DC (cond 2): 2 - 3
                           70     }-
         0          0 -    71     else if (errx == 2 || ( ( * _Pmsw ( & ( x0 ) ) ) & ( ( unsigned short ) 0x8000 ) ) == ( ( * _Pmsw ( & ( p [ 0 ] ) ) ) & ( ( unsigned short ) 0x8000 ) ))
         0                 71       1: T || _
         0                 71       2: F || T
                    0      71       3: F || F
                      -    71       MC/DC (cond 1): 1 - 3
                      -    71       MC/DC (cond 2): 2 - 3
                           72     }-
                           73     else
         0          0 -    77       if (1 < n)
                           78       }-
                           79     }-
                           79   }+
       106         52      80   else if (errx < 0)
       568          0 -    84     for (;k < n;)
         0        568 -    90       if (0 < ( errx = _Dunscale ( & yexp , & yscaled ) ))
         0            -    91         break
                           91       }+
        88        480      92       else if (errx == 0)
        72         16      95         if (k + 1 < n)
                           96         }+
        88                 97         break
                           98       }+
         0        480 -   100       else if (( diff = ( long ) yexp - xexp ) <= - mybits && x0 != 0.0)
         0                100         1: T && T
                   74     100         2: T && F
                  406     100         3: F && _
                      -   100         MC/DC (cond 1): 1 - 3
                      -   100         MC/DC (cond 2): 1 - 2
         0          0 -   103         for (;++ j < n && p [ j ] != 0.0;)
         0                103           1: T && T
                    0     103           2: T && F
                    0     103           3: F && _
                      -   103           MC/DC (cond 1): 1 - 3
                      -   103           MC/DC (cond 2): 1 - 2
                          104         }-
         0          0 -   105         if (j < n - 1)
                          106         }-
         0          0 -   107         else if (j == n)
                          108         }-
         0          0 -   109         for (;k < j;)
                          110         }-
                          113       }+
       204        276     114       else if (mybits <= diff && x0 != 0.0)
       204                114         1: T && T
                    0     114         2: T && F
                  276     114         3: F && _
                          114         MC/DC (cond 1): 1 + 3
                      -   114         MC/DC (cond 2): 1 - 2
                          118       }+
                          119       else
         2        274     121         if (( p [ k ] += x0 ) == 0.0)
        10          2     123           for (;++ m < n && ( p [ m - 1 ] = p [ m ] ) != 0.0;)
        10                123             1: T && T
                    0     123             2: T && F
                    2     123             3: F && _
                          123             MC/DC (cond 1): 1 + 3
                      -   123             MC/DC (cond 2): 1 - 2
                          123           }+
         0          2 -   124           if (p [ k ] == 0.0)
         0            -   125             break
                          125           }+
                          126         }+
        66        210     129         if (prevexp - mybits < xexp)
         0         66 -   133           if (( p [ k ] -= x0 ) == 0.0)
         0          0 -   135             for (;++ m < n && ( p [ m - 1 ] = p [ m ] ) != 0.0;)
         0                135               1: T && T
                    0     135               2: T && F
                    0     135               3: F && _
                      -   135               MC/DC (cond 1): 1 - 3
                      -   135               MC/DC (cond 2): 1 - 2
                          135             }-
                          136           }+
        12         54     137           if (-- k == 0)
                          138           }+
                          139           else
                          144           }+
                          145         }+
        18        192     146         else if (k + 1 == n)
        18                147           break
                          147         }+
                          148         else
        44        148     156           ternary-?: x0 != 0.0
                          159         }+
                          160       }+
                          161     }+
                          162   }+
       158                163   return ( p )
                          164 }

***TER  47 % ( 33/ 70) of FUNCTION _Xp_addh()
        63 % ( 55/ 87) statement
-----------------------------------------------------------------------------

        12                165 FUNCTION _Xp_mulh()
        12          0 -   170   if (0 < n)
         0         12 -   173     if (0 <= ( errx = _Dtest ( & buf [ 0 ] ) ))
         0          0 -   175       if (errx == 2)
                          176       }-
         0          0 -   178       if (0 < errx && 1 < n)
         0                178         1: T && T
                    0     178         2: T && F
                    0     178         3: F && _
                      -   178         MC/DC (cond 1): 1 - 3
                      -   178         MC/DC (cond 2): 1 - 2
                          179       }-
         0            -   180       return ( p )
                          181     }+
                          183   }+
        72         12     184   for (;k < n;)
        72         60     186     for (;j < 4;)
        60         12     187       if (k + j < n && p [ k + j ] != 0.0)
        60                187         1: T && T
                    0     187         2: T && F
                   12     187         3: F && _
                          187         MC/DC (cond 1): 1 + 3
                      -   187         MC/DC (cond 2): 1 - 2
                          191       }+
                          192       else
        12                196         break
                          197       }+
                          197     }+
         0         72 -   198     if (buf [ 0 ] == 0.0)
         0            -   199       break
                          199     }+
                          200     else
       180         36     210       for (;++ i < j;)
        36        144     211         if (( buf [ i - 1 ] = buf [ i ] ) == 0.0)
        36                212           break
                          212         }+
                          212       }+
                          213     }+
                          214   }+
        12                215   return ( p )
                          216 }

***TER  60 % ( 18/ 30) of FUNCTION _Xp_mulh()
        83 % ( 34/ 41) statement
-----------------------------------------------------------------------------

         0            -   217 FUNCTION _Xp_setn()
         0            -   220   return ( p )
                          221 }

***TER   0 % (  0/  2) of FUNCTION _Xp_setn()
         0 % (  0/  2) statement
-----------------------------------------------------------------------------

         0            -   222 FUNCTION _Xp_movx()
         0            -   225   return ( p )
                          226 }

***TER   0 % (  0/  2) of FUNCTION _Xp_movx()
         0 % (  0/  2) statement
-----------------------------------------------------------------------------

        12                227 FUNCTION _Xp_addx()
        14         12     231   for (;k < m && q [ k ] != 0.0;)
        14                231     1: T && T
                   10     231     2: T && F
                    2     231     3: F && _
                          231     MC/DC (cond 1): 1 + 3
                          231     MC/DC (cond 2): 1 + 2
                          232   }+
        12                233   return ( p )
                          234 }

***TER 100 % (  6/  6) of FUNCTION _Xp_addx()
       100 % (  6/  6) statement
-----------------------------------------------------------------------------

         0            -   235 FUNCTION _Xp_subx()
         0          0 -   239   for (;k < m && q [ k ] != 0.0;)
         0                239     1: T && T
                    0     239     2: T && F
                    0     239     3: F && _
                      -   239     MC/DC (cond 1): 1 - 3
                      -   239     MC/DC (cond 2): 1 - 2
                          240   }-
         0            -   241   return ( p )
                          242 }

***TER   0 % (  0/  6) of FUNCTION _Xp_subx()
         0 % (  0/  6) statement
-----------------------------------------------------------------------------

         0            -   243 FUNCTION _Xp_ldexpx()
         0          0 -   246   for (;k < n;)
         0          0 -   249     if (p [ k ] == 0.0)
         0            -   250       break
                          250     }-
                          251   }-
         0            -   252   return ( p )
                          253 }

***TER   0 % (  0/  7) of FUNCTION _Xp_ldexpx()
         0 % (  0/  8) statement
-----------------------------------------------------------------------------

         0            -   254 FUNCTION _Xp_mulx()
         0          0 -   258   if (n == 0 || m == 0)
         0                258     1: T || _
         0                258     2: F || T
                    0     258     3: F || F
                      -   258     MC/DC (cond 1): 1 - 3
                      -   258     MC/DC (cond 2): 2 - 3
                          259   }-
         0          0 -   260   else if (q [ 0 ] == 0.0 || q [ 1 ] == 0.0)
         0                260     1: T || _
         0                260     2: F || T
                    0     260     3: F || F
                      -   260     MC/DC (cond 1): 1 - 3
                      -   260     MC/DC (cond 2): 2 - 3
                          261   }-
                          262   else
         0          0 -   269     for (;j < m && q [ j ] != 0.0;)
         0                269       1: T && T
                    0     269       2: T && F
                    0     269       3: F && _
                      -   269       MC/DC (cond 1): 1 - 3
                      -   269       MC/DC (cond 2): 1 - 2
                          274     }-
                          275   }-
         0            -   276   return ( p )
                          277 }

***TER   0 % (  0/ 14) of FUNCTION _Xp_mulx()
         0 % (  0/ 16) statement
-----------------------------------------------------------------------------

         0            -   278 FUNCTION _Xp_invx()
         0          0 -   281   if (n == 0)
                          282   }-
         0          0 -   283   else if (0 <= ( errx = _Dtest ( & p [ 0 ] ) ))
         0          0 -   285     if (errx == 1)
                          286     }-
         0          0 -   287     else if (errx == 0)
                          288     }-
                          289   }-
                          290   else
         0          0 -   299     if (1 < n)
                          300     }-
         0          0 -   302     for (;k < n;)
                          309     }-
                          310   }-
         0            -   311   return ( p )
                          312 }

***TER   0 % (  0/ 14) of FUNCTION _Xp_invx()
         0 % (  0/ 27) statement
-----------------------------------------------------------------------------

         0            -   313 FUNCTION _Xp_sqrtx()
         0          0 -   315   if (n == 0)
                          316   }-
         0          0 -   317   else if (0 <= _Dtest ( & p [ 0 ] ) || p [ 0 ] < 0.0)
         0                317     1: T || _
         0                317     2: F || T
                    0     317     3: F || F
                      -   317     MC/DC (cond 1): 1 - 3
                      -   317     MC/DC (cond 2): 2 - 3
         0          0 -   319     if (p [ 0 ] < 0.0)
                          323     }-
                          324   }-
                          325   else
         0          0 -   332     if (1 < n)
                          333     }-
         0          0 -   335     for (;k < n;)
                          343     }-
                          345   }-
         0            -   346   return ( p )
                          347 }

***TER   0 % (  0/ 14) of FUNCTION _Xp_sqrtx()
         0 % (  0/ 25) statement
-----------------------------------------------------------------------------


***TER  35 % ( 73/209) of FILE E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\sin\xprec.c
        46 % (118/259) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\sin\xquad.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         0            -   245 FUNCTION _Quad_multiply()
         0          0 -   248   if (ans == 0.0)
                          255   }-
         0            -   256   return ( ans )
                          257 }

***TER   0 % (  0/  4) of FUNCTION _Quad_multiply()
         0 % (  0/  8) statement
-----------------------------------------------------------------------------

        12                258 FUNCTION _Quad()
         0         12 -   262   if (retcode & 1)
         0          0 -   266     if (x == 0.0)
                          267     }-
                          268     else
                          272     }-
         0          0 -   275     if (* px != 0.0)
                          276     }-
         0          0 -   277     if (0.25 < x)
                          281     }-
         0          0 -   282     else if (x < - 0.25)
                          286     }-
         0            -   288     return ( qoff )
                          289   }+
         0         12 -   290   if (- piby4 < x && x < piby4)
         0                290     1: T && T
                   12     290     2: T && F
                    0     290     3: F && _
                      -   290     MC/DC (cond 1): 1 - 3
                      -   290     MC/DC (cond 2): 1 - 2
         0            -   293     return ( 0 )
                          294   }+
        12          0 -   295   else if (- huge_rad < x && x < huge_rad)
        12                295     1: T && T
                    0     295     2: T && F
                    0     295     3: F && _
                      -   295     MC/DC (cond 1): 1 - 3
                      -   295     MC/DC (cond 2): 1 - 2
        12          0 -   298     if (0.0 <= g)
                          299     }-
                          300     else
                          301     }+
        12          0 -   303     if (g != 0.0)
                          313     }+
                          315   }-
                          316   else
         0          0 -   322     if (xexp < 53 + 5 + ( 1 << 5 ))
                          323     }-
                          324     else
         0          0 -   331       if (xpx [ 1 ] != 0.0)
                          336       }-
                          337     }-
         0          0 -   338     for (;xpz [ 0 ] < - huge_rad || huge_rad < xpz [ 0 ];)
         0                338       1: T || _
         0                338       2: F || T
                    0     338       3: F || F
                      -   338       MC/DC (cond 1): 1 - 3
                      -   338       MC/DC (cond 2): 2 - 3
         0          0 -   345       if (xpx [ 1 ] != 0.0)
                          351       }-
                          353     }-
         0          0 -   355     if (0.0 <= g)
                          356     }-
                          357     else
                          358     }-
         0          0 -   360     if (g != 0.0)
                          366     }-
                          368   }+
         0         12 -   370   if (g < - ( double ) 0x7fffffffL || ( double ) 0x7fffffffL < g)
         0                370     1: T || _
         0                370     2: F || T
                   12     370     3: F || F
                      -   370     MC/DC (cond 1): 1 - 3
                      -   370     MC/DC (cond 2): 2 - 3
                          371   }+
        12                372   return ( ( unsigned int ) ( long ) g & 0x3 )
                          373 }

***TER  18 % (  8/ 44) of FUNCTION _Quad()
        23 % ( 19/ 81) statement
-----------------------------------------------------------------------------

         0            -   374 FUNCTION _Quadph()
         0          0 -   382   if (ph0 < - ( double ) ( 0x7fffffffL / 2 ) || ( double ) ( 0x7fffffffL / 2 ) < ph0)
         0                382     1: T || _
         0                382     2: F || T
                    0     382     3: F || F
                      -   382     MC/DC (cond 1): 1 - 3
                      -   382     MC/DC (cond 2): 2 - 3
                          383   }-
         0          0 -   386   if (piby4 <= ans)
                          391   }-
         0          0 -   392   else if (ans <= - piby4)
                          397   }-
                          398   else
                          399   }-
         0            -   400   return ( qoff )
                          401 }

***TER   0 % (  0/ 10) of FUNCTION _Quadph()
         0 % (  0/ 19) statement
-----------------------------------------------------------------------------


***TER  14 % (  8/ 58) of FILE E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\sin\xquad.c
        18 % ( 19/108) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\sin\xsin.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

        16                 19 FUNCTION _Sinx()
                           21   switch (_Dtest ( & x ))
         2                 23   case 2:
         2                 24     return ( x )
         0            -    25   case 0:
         0          0 -    26     if (( qoff & 0x1 ) != 0)
                           27     }-
         0          0 -    28     ternary-?: ( qoff & 0x2 ) != 0
         0            -    28     return ( ( qoff & 0x2 ) != 0 ? - x : x )
         2                 29   case 1:
         2                 31     return ( _Nan . _Double )
        12                 32   default:
         2         10      34     if (- _Rteps . _Double < x && x < _Rteps . _Double)
         2                 34       1: T && T
                    2      34       2: T && F
                    8      34       3: F && _
                           34       MC/DC (cond 1): 1 + 3
                           34       MC/DC (cond 2): 1 + 2
         1          1      36       if (( qoff & 0x1 ) != 0)
                           37       }+
                           38     }+
                           39     else
         5          5      42       if (( qoff & 0x1 ) != 0)
                           43       }+
                           44       else
                           45       }+
                           46     }+
         4          8      47     if (qoff & 0x2)
                           48     }+
        12                 49     return ( x )
                           50   }-
                           51 }

***TER  74 % ( 17/ 23) of FUNCTION _Sinx()
        83 % ( 15/ 18) statement
-----------------------------------------------------------------------------


***TER  74 % ( 17/ 23) of FILE E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\sin\xsin.c
        83 % ( 15/ 18) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\sin\xvalues.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================


***TER 100 % (  0/  0) of FILE E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\sin\xvalues.c
       100 % (  0/  0) statement
-----------------------------------------------------------------------------



SUMMARY
=======

Source files       : 22
Headers extracted  : 0
Functions          : 38
Source lines       : 1403
TER                : 31 % (176/564) MC/DC
TER                : 38 % (244/649) statement
