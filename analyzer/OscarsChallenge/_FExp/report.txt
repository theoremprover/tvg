*****************************************************************************
*           CTC++, Test Coverage Analyzer for C/C++, Version 8.2            *
*                                                                           *
*                         EXECUTION PROFILE LISTING                         *
*                                                                           *
*                    Copyright (c) 1993-2013 Testwell Oy                    *
*             Copyright (c) 2013-2017 Verifysoft Technology GmbH            *
*****************************************************************************


Symbol file(s) used   : MON.sym (Thu Jun 27 21:00:36 2019)
Data file(s) used     : MON.dat (Thu Jun 27 21:00:37 2019)
Listing produced at   : Thu Jun 27 21:00:37 2019
Coverage view         : Reduced to MC/DC coverage



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\atanh.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         0            -     4 FUNCTION atanh()
                           10   switch (_Dtest ( & x ))
         0            -    12   case 2:
         0            -    13   case 0:
         0            -    14     return ( x )
         0            -    15   default:
         0          0 -    16     if (x < 0.0)
                           22     }-
                           23     else
                           24     }-
         0          0 -    28     if (1.0 < x)
         0            -    31       return ( _Nan . _Double )
                           32     }-
         0          0 -    33     else if (x == 1.0)
         0          0 -    36       ternary-?: neg
         0            -    36       return ( neg ? - _Inf . _Double : _Inf . _Double )
                           37     }-
         0          0 -    38     else if (- _Rteps . _Double < x && x < _Rteps . _Double)
         0                 38       1: T && T
                    0      38       2: T && F
                    0      38       3: F && _
                      -    38       MC/DC (cond 1): 1 - 3
                      -    38       MC/DC (cond 2): 1 - 2
         0          0 -    40       if (neg)
                           41       }-
         0            -    42       return ( x )
                           43     }-
                           44     else
         0          0 -    48       ternary-?: neg
         0            -    48       return ( neg ? - y : y )
                           49     }-
                           50   }-
                           51 }

***TER   0 % (  0/ 25) of FUNCTION atanh()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------


***TER   0 % (  0/ 25) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\atanh.c
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\cos.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         0            -     2 FUNCTION cos()
         0            -     4   return ( _Sinx ( x , 1 , 0 ) )
                            5 }

***TER   0 % (  0/  2) of FUNCTION cos()
         0 % (  0/  1) statement
-----------------------------------------------------------------------------


***TER   0 % (  0/  2) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\cos.c
         0 % (  0/  1) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\cosh.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         0            -     5 FUNCTION _Cosh()
         0          0 -    10   if (0 <= errx || 0 <= erry)
         0                 10     1: T || _
         0                 10     2: F || T
                    0      10     3: F || F
                      -    10     MC/DC (cond 1): 1 - 3
                      -    10     MC/DC (cond 2): 2 - 3
         0          0 -    12     if (errx == 2)
         0            -    13       return ( x )
                           13     }-
         0          0 -    14     else if (erry == 2)
         0            -    15       return ( y )
                           15     }-
         0          0 -    16     else if (errx == 1)
         0          0 -    17       if (erry != 0)
         0          0 -    18         ternary-?: y < 0.0
         0            -    19         return ( y < 0.0 ? - _Inf . _Double : _Inf . _Double )
                           19       }-
                           20       else
         0            -    23         return ( _Nan . _Double )
                           24       }-
                           24     }-
                           25     else
         0            -    26       return ( y )
                           26     }-
                           27   }-
                           28   else
         0          0 -    32     if (x < xbig)
         0            -    35       return ( y * ( x + ( ( 0.25 ) / ( x ) ) ) )
                           36     }-
                           37     else
         0            -    40       return ( x )
                           41     }-
                           42   }-
                           43 }

***TER   0 % (  0/ 24) of FUNCTION _Cosh()
         0 % (  0/ 19) statement
-----------------------------------------------------------------------------

         0            -    45 FUNCTION cosh()
         0            -    47   return ( _Cosh ( x , 1.0 ) )
                           48 }

***TER   0 % (  0/  2) of FUNCTION cosh()
         0 % (  0/  1) statement
-----------------------------------------------------------------------------


***TER   0 % (  0/ 26) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\cosh.c
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\double_analysis.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         0            -     3 FUNCTION double_getDeltaULP()
         0          0 -     8   if (x != x || y != y)
         0                  8     1: T || _
         0                  8     2: F || T
                    0       8     3: F || F
                      -     8     MC/DC (cond 1): 1 - 3
                      -     8     MC/DC (cond 2): 2 - 3
                           10   }-
         0          0 -    10   else if (x == __builtin_inf ( ) || y == __builtin_inf ( ) || x == - __builtin_inf ( ) || y == - __builtin_inf ( ))
         0                 10     1: T || _ || _ || _
         0                 10     2: F || T || _ || _
         0                 10     3: F || F || T || _
         0                 10     4: F || F || F || T
                    0      10     5: F || F || F || F
                      -    10     MC/DC (cond 1): 1 - 5
                      -    10     MC/DC (cond 2): 2 - 5
                      -    10     MC/DC (cond 3): 3 - 5
                      -    10     MC/DC (cond 4): 4 - 5
                           12   }-
                           12   else
         0          0 -    16     if (x_bits . s == y_bits . s)
         0          0 -    17       if (x_bits . e > y_bits . e)
         0          0 -    19         if (x_bits . m >= y_bits . m)
                           21         }-
                           21         else
                           24         }-
                           25       }-
         0          0 -    25       else if (x_bits . e < y_bits . e)
         0          0 -    27         if (x_bits . m <= y_bits . m)
                           29         }-
                           29         else
                           32         }-
                           33       }-
                           33       else
         0          0 -    35         if (x_bits . m <= y_bits . m)
                           37         }-
                           37         else
                           39         }-
                           40       }-
                           42     }-
                           42     else
                           45     }-
                           48   }-
         0            -    49   return res_u64
                           50 }

***TER   0 % (  0/ 24) of FUNCTION double_getDeltaULP()
         0 % (  0/ 32) statement
-----------------------------------------------------------------------------

         0            -    52 FUNCTION double_computeAndPrint()
         0            -    56 }

***TER   0 % (  0/  2) of FUNCTION double_computeAndPrint()
         0 % (  0/  1) statement
-----------------------------------------------------------------------------


***TER   0 % (  0/ 26) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\double_analysis.c
         0 % (  0/ 33) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\double_cmp_ulp.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         0            -     9 FUNCTION double_equal_ulp()
         0          0 -    16   if (n_ulp == 0U)
                           19   }-
                           19   else
                           21     switch (fmc_ref)
         0            -    22     case FMC_NAN:
         0            -    25       break
         0            -    26     case FMC_INF:
         0            -    28       break
         0            -    29     default:
         0            -    33       break
                           34     }-
                           35   }-
         0            -    36   return res
                           37 }

***TER   0 % (  0/ 10) of FUNCTION double_equal_ulp()
         0 % (  0/ 19) statement
-----------------------------------------------------------------------------

         0            -    39 FUNCTION double_ulp()
         0          0 -    42   if (db . e == 0x7FF)
                           46   }-
         0          0 -    46   else if (db . e >= 53U)
                           51   }-
                           51   else
         0          0 -    56     if (db . e > 0U)
                           62     }-
                           62     else
                           65     }-
                           67   }-
         0            -    68   return db2double ( db )
                           69 }

***TER   0 % (  0/  8) of FUNCTION double_ulp()
         0 % (  0/ 15) statement
-----------------------------------------------------------------------------


***TER   0 % (  0/ 18) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\double_cmp_ulp.c
         0 % (  0/ 34) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\double_compares.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         0            -    22 FUNCTION test_compare_double()
         0          0 -    26   if (__builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , double ) , __isnan ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , float ) , __isnanf ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , long double ) , __isnanl ( found ) , ( __builtin_trap ( ) , found ) ) ) ) != __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , double ) , __isnan ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , float ) , __isnanf ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , long double ) , __isnanl ( expected ) , ( __builtin_trap ( ) , expected ) ) ) ))
         0            -    30     return 0
                           31   }-
         0          0 -    32   if (__builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , double ) , __isnan ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , float ) , __isnanf ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , long double ) , __isnanl ( found ) , ( __builtin_trap ( ) , found ) ) ) ) && __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , double ) , __isnan ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , float ) , __isnanf ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , long double ) , __isnanl ( expected ) , ( __builtin_trap ( ) , expected ) ) ) ))
         0                 32     1: T && T
                    0      32     2: T && F
                    0      32     3: F && _
                      -    32     MC/DC (cond 1): 1 - 3
                      -    32     MC/DC (cond 2): 1 - 2
         0            -    33     return 1
                           34   }-
         0          0 -    35   if (( __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , double ) , __fpclassify ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , float ) , __fpclassifyf ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , long double ) , __fpclassifyl ( found ) , ( __builtin_trap ( ) , 0 ) ) ) ) == ( 0x0100 | 0x0400 ) ) != ( __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , double ) , __fpclassify ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , float ) , __fpclassifyf ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , long double ) , __fpclassifyl ( expected ) , ( __builtin_trap ( ) , 0 ) ) ) ) == ( 0x0100 | 0x0400 ) ))
         0            -    39     return 0
                           40   }-
         0          0 -    41   if (( __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , double ) , __fpclassify ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , float ) , __fpclassifyf ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , long double ) , __fpclassifyl ( found ) , ( __builtin_trap ( ) , 0 ) ) ) ) == ( 0x0100 | 0x0400 ) ) && ( __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , double ) , __fpclassify ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , float ) , __fpclassifyf ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , long double ) , __fpclassifyl ( expected ) , ( __builtin_trap ( ) , 0 ) ) ) ) == ( 0x0100 | 0x0400 ) ) && found != expected)
         0                 41     1: (T) && (T) && T
                    0      41     2: (T) && (T) && F
                    0      41     3: (T) && (F) && _
                    0      41     4: (F) && (_) && _
                      -    41     MC/DC (cond 1): 1 - 4
                      -    41     MC/DC (cond 2): 1 - 3
                      -    41     MC/DC (cond 3): 1 - 2
         0            -    45     return 0
                           46   }-
         0          0 -    47   if (( __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , double ) , __fpclassify ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , float ) , __fpclassifyf ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , long double ) , __fpclassifyl ( found ) , ( __builtin_trap ( ) , 0 ) ) ) ) == ( 0x0100 | 0x0400 ) ) && ( __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , double ) , __fpclassify ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , float ) , __fpclassifyf ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , long double ) , __fpclassifyl ( expected ) , ( __builtin_trap ( ) , 0 ) ) ) ) == ( 0x0100 | 0x0400 ) ) && found == expected)
         0                 47     1: (T) && (T) && T
                    0      47     2: (T) && (T) && F
                    0      47     3: (T) && (F) && _
                    0      47     4: (F) && (_) && _
                      -    47     MC/DC (cond 1): 1 - 4
                      -    47     MC/DC (cond 2): 1 - 3
                      -    47     MC/DC (cond 3): 1 - 2
         0            -    48     return 1
                           49   }-
         0          0 -    51   if (comparetype & 1)
         0          0 -    53     if (fabs ( found - expected ) > maxtol_below)
         0          0 -    58       if (fabs ( found - expected ) > * maxdeviation_below)
                           60       }-
                           61     }-
                           61     else
         0          0 -    62       if (result == - 1)
                           64       }-
                           65     }-
                           66   }-
         0          0 -    67   if (comparetype & 2)
         0          0 -    69     if (expected != 0.0 && fabs ( ( found - expected ) / expected ) > maxtol_below)
         0                 69       1: T && T
                    0      69       2: T && F
                    0      69       3: F && _
                      -    69       MC/DC (cond 1): 1 - 3
                      -    69       MC/DC (cond 2): 1 - 2
         0          0 -    74       if (fabs ( ( found - expected ) / expected ) > * maxdeviation_below)
                           76       }-
                           77     }-
                           77     else
         0          0 -    78       if (result == - 1)
                           80       }-
                           81     }-
                           82   }-
         0          0 -    83   if (comparetype & 128)
         0          0 -    85     if (fabs ( expected ) <= limit)
         0          0 -    87       if (fabs ( found - expected ) > maxtol_below)
         0          0 -    92         if (fabs ( found - expected ) > * maxdeviation_below)
                           94         }-
                           95       }-
                           95       else
         0          0 -    96         if (result == - 1)
                           98         }-
                           99       }-
                          100     }-
                          100     else
         0          0 -   102       if (fabs ( ( found - expected ) / expected ) > maxtol_above)
         0          0 -   107         if (fabs ( found - expected ) > * maxdeviation_above)
                          109         }-
                          110       }-
                          110       else
         0          0 -   111         if (result == - 1)
                          113         }-
                          114       }-
                          115     }-
                          116   }-
         0          0 -   117   if (comparetype & 4)
         0          0 -   119     if (! double_equal_ulp ( found , expected , ( uint64 ) maxtol_below ))
         0          0 -   131       if (dif > * maxdeviation_below)
                          133       }-
                          134     }-
                          134     else
         0          0 -   135       if (result == - 1)
                          137       }-
                          138     }-
                          139   }-
         0          0 -   140   if (comparetype & 8)
         0          0 -   142     if (fabs ( expected ) <= limit)
         0          0 -   143       if (fabs ( found - expected ) > maxtol_below)
         0          0 -   148         if (fabs ( found - expected ) > * maxdeviation_below)
                          150         }-
                          151       }-
                          151       else
         0          0 -   152         if (result == - 1)
                          154         }-
                          155       }-
                          156     }-
                          156     else
         0          0 -   157       if (! double_equal_ulp ( found , expected , ( uint64 ) maxtol_above ))
         0          0 -   169         if (dif > * maxdeviation_above)
                          171         }-
                          172       }-
                          172       else
         0          0 -   173         if (result == - 1)
                          175         }-
                          176       }-
                          177     }-
                          178   }-
         0          0 -   179   if (comparetype & 16)
         0          0 -   183     if (expected != 0.0)
         0          0 -   184       ternary-?: ( sqrt ( fabs ( found * expected ) ) ) > ( 1 )
                          185     }-
         0          0 -   186     if (exakt > maxtol_below)
         0          0 -   191       if (exakt > * maxdeviation_below)
                          193       }-
                          194     }-
                          194     else
         0          0 -   195       if (result == - 1)
                          197       }-
                          198     }-
                          199   }-
         0          0 -   200   if (comparetype & 32)
         0          0 -   202     if (found != expected)
         0          0 -   207       if (fabs ( found - expected ) > * maxdeviation_below)
                          209       }-
                          210     }-
                          210     else
         0          0 -   211       if (result == - 1)
                          213       }-
                          214     }-
                          215   }-
         0          0 -   216   if (comparetype & 64)
         0          0 -   222     if (hfFound . x_val != hfExpected . x_val)
         0          0 -   227       if (fabs ( found - expected ) > * maxdeviation_below)
                          229       }-
                          230     }-
                          230     else
         0          0 -   231       if (result == - 1)
                          233       }-
                          234     }-
                          235   }-
         0            -   237   return result
                          238 }

***TER   0 % (  0/111) of FUNCTION test_compare_double()
         0 % (  0/108) statement
-----------------------------------------------------------------------------


***TER   0 % (  0/111) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\double_compares.c
         0 % (  0/108) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\double_data.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         0            -     7 FUNCTION db_int2double()
         0            -    10   return tmp . dval
                           11 }

***TER   0 % (  0/  2) of FUNCTION db_int2double()
         0 % (  0/  3) statement
-----------------------------------------------------------------------------

         0            -    13 FUNCTION db_double2int()
         0            -    16   return tmp . ival
                           17 }

***TER   0 % (  0/  2) of FUNCTION db_double2int()
         0 % (  0/  3) statement
-----------------------------------------------------------------------------

         0            -    21 FUNCTION double2db()
         0            -    28   return res
                           29 }

***TER   0 % (  0/  2) of FUNCTION double2db()
         0 % (  0/  7) statement
-----------------------------------------------------------------------------

         0            -    31 FUNCTION db2double()
         0            -    34   return res . dval
                           35 }

***TER   0 % (  0/  2) of FUNCTION db2double()
         0 % (  0/  3) statement
-----------------------------------------------------------------------------

         0            -    37 FUNCTION sem2double()
         0            -    40   return res . dval
                           41 }

***TER   0 % (  0/  2) of FUNCTION sem2double()
         0 % (  0/  3) statement
-----------------------------------------------------------------------------

         0            -    43 FUNCTION sem2db()
         0            -    44   return double2db ( sem2double ( s , e , m ) )
                           45 }

***TER   0 % (  0/  2) of FUNCTION sem2db()
         0 % (  0/  1) statement
-----------------------------------------------------------------------------

         0            -    47 FUNCTION double_NaN_or_Inf()
         0            -    51   return ( ( tmp . ival & 0x7FF0000000000000 ) == 0x7FF0000000000000 )
                           52 }

***TER   0 % (  0/  2) of FUNCTION double_NaN_or_Inf()
         0 % (  0/  3) statement
-----------------------------------------------------------------------------

         0            -    54 FUNCTION classify_double_mag()
         0          0 -    58   if (tmp . e == 2047U)
         0          0 -    59     if (tmp . m == 0U)
                           59     }-
                           60     else
                           60     }-
                           61   }-
         0          0 -    62   else if (tmp . e == 0U)
         0          0 -    63     if (tmp . m == 0U)
                           63     }-
                           64     else
                           64     }-
                           65   }-
                           66   else
                           68   }-
         0            -    69   return res
                           70 }

***TER   0 % (  0/ 10) of FUNCTION classify_double_mag()
         0 % (  0/ 13) statement
-----------------------------------------------------------------------------


***TER   0 % (  0/ 24) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\double_data.c
         0 % (  0/ 36) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\errno.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================


***TER 100 % (  0/  0) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\errno.c
       100 % (  0/  0) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\exp.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         0            -    19 FUNCTION _Exp()
         0          0 -    24   if (0 <= errx || 0 <= erry)
         0                 24     1: T || _
         0                 24     2: F || T
                    0      24     3: F || F
                      -    24     MC/DC (cond 1): 1 - 3
                      -    24     MC/DC (cond 2): 2 - 3
         0          0 -    26     if (errx == 2)
         0            -    27       return ( 2 )
                           27     }-
         0          0 -    28     else if (erry == 2)
         0            -    31       return ( 2 )
                           32     }-
         0          0 -    33     else if (erry == 0)
         0          0 -    34       if (* px != _Inf . _Double)
         0            -    37         return ( 0 )
                           38       }-
                           39       else
         0            -    43         return ( 2 )
                           44       }-
                           44     }-
         0          0 -    45     else if (erry == 1)
         0          0 -    46       if (* px != - _Inf . _Double)
         0            -    49         return ( 1 )
                           50       }-
                           51       else
         0            -    55         return ( 2 )
                           56       }-
                           56     }-
         0          0 -    57     else if (errx == 0)
                           60       switch (errx = _Dscale ( px , eoff ))
         0            -    62       case 0:
         0            -    64         break
         0            -    66       case 1:
                           68       }-
         0            -    69       return ( errx )
                           70     }-
         0          0 -    71     else if (* px == _Inf . _Double)
         0            -    74       return ( 1 )
                           75     }-
                           76     else
         0            -    79       return ( 0 )
                           80     }-
                           81   }-
         0          0 -    82   else if (* px < - hugexp)
         0            -    85     return ( 0 )
                           86   }-
         0          0 -    87   else if (hugexp < * px)
         0            -    91     return ( 1 )
                           92   }-
                           93   else
         0          0 -    96     ternary-?: g < 0.0
         0          0 -   100     if (- _Eps . _Double < g && g < _Eps . _Double)
         0                100       1: T && T
                    0     100       2: T && F
                    0     100       3: F && _
                      -   100       MC/DC (cond 1): 1 - 3
                      -   100       MC/DC (cond 2): 1 - 2
                          101     }-
                          102     else
                          110     }-
                          112     switch (errx = _Dscale ( px , ( long ) xexp + eoff ))
         0            -   114     case 0:
         0            -   116       break
         0            -   118     case 1:
                          120     }-
         0            -   121     return ( errx )
                          122   }-
                          123 }

***TER   0 % (  0/ 49) of FUNCTION _Exp()
         0 % (  0/ 57) statement
-----------------------------------------------------------------------------


***TER   0 % (  0/ 49) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\exp.c
         0 % (  0/ 57) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\expf_uv__uv_extreme.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         0            -   256 FUNCTION expf_uv__uv_extreme_extreme_values()
         0          0 -   267   for (;ind < 3;)
         0          0 -   270     if (test_compare_float ( res , expf_uv__uv_extreme_extreme_values_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1)
                          275     }-
                          275     else
                          277     }-
                          278   }-
         0          0 -   280   if (errors == 0 && passes == 3)
         0                280     1: T && T
                    0     280     2: T && F
                    0     280     3: F && _
                      -   280     MC/DC (cond 1): 1 - 3
                      -   280     MC/DC (cond 2): 1 - 2
                          282   }-
                          282   else
                          284   }-
         0            -   286   return errors
                          287 }

***TER   0 % (  0/ 10) of FUNCTION expf_uv__uv_extreme_extreme_values()
         0 % (  0/ 18) statement
-----------------------------------------------------------------------------

         0            -   299 FUNCTION expf_uv__uv_extreme_expf_nan()
         0          0 -   310   for (;ind < 1;)
         0          0 -   313     if (test_compare_float ( res , expf_uv__uv_extreme_expf_nan_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1)
                          318     }-
                          318     else
                          320     }-
                          321   }-
         0          0 -   323   if (errors == 0 && passes == 1)
         0                323     1: T && T
                    0     323     2: T && F
                    0     323     3: F && _
                      -   323     MC/DC (cond 1): 1 - 3
                      -   323     MC/DC (cond 2): 1 - 2
                          325   }-
                          325   else
                          327   }-
         0            -   329   return errors
                          330 }

***TER   0 % (  0/ 10) of FUNCTION expf_uv__uv_extreme_expf_nan()
         0 % (  0/ 18) statement
-----------------------------------------------------------------------------

         0            -   343 FUNCTION expf_uv__uv_extreme_expf_infinity()
         0          0 -   354   for (;ind < 2;)
         0          0 -   357     if (test_compare_float ( res , expf_uv__uv_extreme_expf_infinity_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1)
                          362     }-
                          362     else
                          364     }-
                          365   }-
         0          0 -   367   if (errors == 0 && passes == 2)
         0                367     1: T && T
                    0     367     2: T && F
                    0     367     3: F && _
                      -   367     MC/DC (cond 1): 1 - 3
                      -   367     MC/DC (cond 2): 1 - 2
                          369   }-
                          369   else
                          371   }-
         0            -   373   return errors
                          374 }

***TER   0 % (  0/ 10) of FUNCTION expf_uv__uv_extreme_expf_infinity()
         0 % (  0/ 18) statement
-----------------------------------------------------------------------------

         0            -   408 FUNCTION expf_uv__uv_extreme_expf_denormalized_pos_float_2_0()
         0          0 -   419   for (;ind < 23;)
         0          0 -   422     if (test_compare_float ( res , expf_uv__uv_extreme_expf_denormalized_pos_float_2_0_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1)
                          427     }-
                          427     else
                          429     }-
                          430   }-
         0          0 -   432   if (errors == 0 && passes == 23)
         0                432     1: T && T
                    0     432     2: T && F
                    0     432     3: F && _
                      -   432     MC/DC (cond 1): 1 - 3
                      -   432     MC/DC (cond 2): 1 - 2
                          434   }-
                          434   else
                          436   }-
         0            -   438   return errors
                          439 }

***TER   0 % (  0/ 10) of FUNCTION expf_uv__uv_extreme_expf_denormalized_pos_float_2_0()
         0 % (  0/ 18) statement
-----------------------------------------------------------------------------

         0            -   473 FUNCTION expf_uv__uv_extreme_expf_denormalized_neg_float_2_0()
         0          0 -   484   for (;ind < 23;)
         0          0 -   487     if (test_compare_float ( res , expf_uv__uv_extreme_expf_denormalized_neg_float_2_0_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1)
                          492     }-
                          492     else
                          494     }-
                          495   }-
         0          0 -   497   if (errors == 0 && passes == 23)
         0                497     1: T && T
                    0     497     2: T && F
                    0     497     3: F && _
                      -   497     MC/DC (cond 1): 1 - 3
                      -   497     MC/DC (cond 2): 1 - 2
                          499   }-
                          499   else
                          501   }-
         0            -   503   return errors
                          504 }

***TER   0 % (  0/ 10) of FUNCTION expf_uv__uv_extreme_expf_denormalized_neg_float_2_0()
         0 % (  0/ 18) statement
-----------------------------------------------------------------------------

         0            -   595 FUNCTION expf_uv__uv_extreme_expf_denormalized_pos_float_1_2()
         0          0 -   606   for (;ind < 80;)
         0          0 -   609     if (test_compare_float ( res , expf_uv__uv_extreme_expf_denormalized_pos_float_1_2_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1)
                          614     }-
                          614     else
                          616     }-
                          617   }-
         0          0 -   619   if (errors == 0 && passes == 80)
         0                619     1: T && T
                    0     619     2: T && F
                    0     619     3: F && _
                      -   619     MC/DC (cond 1): 1 - 3
                      -   619     MC/DC (cond 2): 1 - 2
                          621   }-
                          621   else
                          623   }-
         0            -   625   return errors
                          626 }

***TER   0 % (  0/ 10) of FUNCTION expf_uv__uv_extreme_expf_denormalized_pos_float_1_2()
         0 % (  0/ 18) statement
-----------------------------------------------------------------------------

         0            -   694 FUNCTION expf_uv__uv_extreme_expf_denormalized_neg_float_1_3()
         0          0 -   705   for (;ind < 57;)
         0          0 -   708     if (test_compare_float ( res , expf_uv__uv_extreme_expf_denormalized_neg_float_1_3_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1)
                          713     }-
                          713     else
                          715     }-
                          716   }-
         0          0 -   718   if (errors == 0 && passes == 57)
         0                718     1: T && T
                    0     718     2: T && F
                    0     718     3: F && _
                      -   718     MC/DC (cond 1): 1 - 3
                      -   718     MC/DC (cond 2): 1 - 2
                          720   }-
                          720   else
                          722   }-
         0            -   724   return errors
                          725 }

***TER   0 % (  0/ 10) of FUNCTION expf_uv__uv_extreme_expf_denormalized_neg_float_1_3()
         0 % (  0/ 18) statement
-----------------------------------------------------------------------------

         0            -   756 FUNCTION expf_uv__uv_extreme_expf_extreme_range()
         0          0 -   767   for (;ind < 20;)
         0          0 -   770     if (test_compare_float ( res , expf_uv__uv_extreme_expf_extreme_range_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1)
                          775     }-
                          775     else
                          777     }-
                          778   }-
         0          0 -   780   if (errors == 0 && passes == 20)
         0                780     1: T && T
                    0     780     2: T && F
                    0     780     3: F && _
                      -   780     MC/DC (cond 1): 1 - 3
                      -   780     MC/DC (cond 2): 1 - 2
                          782   }-
                          782   else
                          784   }-
         0            -   786   return errors
                          787 }

***TER   0 % (  0/ 10) of FUNCTION expf_uv__uv_extreme_expf_extreme_range()
         0 % (  0/ 18) statement
-----------------------------------------------------------------------------

         0            -   848 FUNCTION expf_uv__uv_extreme_expf_extreme_range_rnd()
         0          0 -   859   for (;ind < 50;)
         0          0 -   862     if (test_compare_float ( res , expf_uv__uv_extreme_expf_extreme_range_rnd_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1)
                          867     }-
                          867     else
                          869     }-
                          870   }-
         0          0 -   872   if (errors == 0 && passes == 50)
         0                872     1: T && T
                    0     872     2: T && F
                    0     872     3: F && _
                      -   872     MC/DC (cond 1): 1 - 3
                      -   872     MC/DC (cond 2): 1 - 2
                          874   }-
                          874   else
                          876   }-
         0            -   878   return errors
                          879 }

***TER   0 % (  0/ 10) of FUNCTION expf_uv__uv_extreme_expf_extreme_range_rnd()
         0 % (  0/ 18) statement
-----------------------------------------------------------------------------

         0            -   913 FUNCTION expf_uv__uv_extreme_expf_extreme_ramp_up()
         0          0 -   924   for (;ind < 24;)
         0          0 -   927     if (test_compare_float ( res , expf_uv__uv_extreme_expf_extreme_ramp_up_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1)
                          932     }-
                          932     else
                          934     }-
                          935   }-
         0          0 -   937   if (errors == 0 && passes == 24)
         0                937     1: T && T
                    0     937     2: T && F
                    0     937     3: F && _
                      -   937     MC/DC (cond 1): 1 - 3
                      -   937     MC/DC (cond 2): 1 - 2
                          939   }-
                          939   else
                          941   }-
         0            -   943   return errors
                          944 }

***TER   0 % (  0/ 10) of FUNCTION expf_uv__uv_extreme_expf_extreme_ramp_up()
         0 % (  0/ 18) statement
-----------------------------------------------------------------------------

         0            -   978 FUNCTION expf_uv__uv_extreme_expf_extreme_ramp_down()
         0          0 -   989   for (;ind < 24;)
         0          0 -   992     if (test_compare_float ( res , expf_uv__uv_extreme_expf_extreme_ramp_down_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1)
                          997     }-
                          997     else
                          999     }-
                         1000   }-
         0          0 -  1002   if (errors == 0 && passes == 24)
         0               1002     1: T && T
                    0    1002     2: T && F
                    0    1002     3: F && _
                      -  1002     MC/DC (cond 1): 1 - 3
                      -  1002     MC/DC (cond 2): 1 - 2
                         1004   }-
                         1004   else
                         1006   }-
         0            -  1008   return errors
                         1009 }

***TER   0 % (  0/ 10) of FUNCTION expf_uv__uv_extreme_expf_extreme_ramp_down()
         0 % (  0/ 18) statement
-----------------------------------------------------------------------------

         0            -  1022 FUNCTION expf_uv__uv_extreme_corner_values()
         0          0 -  1033   for (;ind < 2;)
         0          0 -  1036     if (test_compare_float ( res , expf_uv__uv_extreme_corner_values_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1)
                         1041     }-
                         1041     else
                         1043     }-
                         1044   }-
         0          0 -  1046   if (errors == 0 && passes == 2)
         0               1046     1: T && T
                    0    1046     2: T && F
                    0    1046     3: F && _
                      -  1046     MC/DC (cond 1): 1 - 3
                      -  1046     MC/DC (cond 2): 1 - 2
                         1048   }-
                         1048   else
                         1050   }-
         0            -  1052   return errors
                         1053 }

***TER   0 % (  0/ 10) of FUNCTION expf_uv__uv_extreme_corner_values()
         0 % (  0/ 18) statement
-----------------------------------------------------------------------------

         0            -  1084 FUNCTION expf_uv__uv_extreme_pi_half()
         0          0 -  1095   for (;ind < 20;)
         0          0 -  1098     if (test_compare_float ( res , expf_uv__uv_extreme_pi_half_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1)
                         1103     }-
                         1103     else
                         1105     }-
                         1106   }-
         0          0 -  1108   if (errors == 0 && passes == 20)
         0               1108     1: T && T
                    0    1108     2: T && F
                    0    1108     3: F && _
                      -  1108     MC/DC (cond 1): 1 - 3
                      -  1108     MC/DC (cond 2): 1 - 2
                         1110   }-
                         1110   else
                         1112   }-
         0            -  1114   return errors
                         1115 }

***TER   0 % (  0/ 10) of FUNCTION expf_uv__uv_extreme_pi_half()
         0 % (  0/ 18) statement
-----------------------------------------------------------------------------

         0            -  1176 FUNCTION expf_uv__uv_extreme_pi_half_rnd()
         0          0 -  1187   for (;ind < 50;)
         0          0 -  1190     if (test_compare_float ( res , expf_uv__uv_extreme_pi_half_rnd_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1)
                         1195     }-
                         1195     else
                         1197     }-
                         1198   }-
         0          0 -  1200   if (errors == 0 && passes == 50)
         0               1200     1: T && T
                    0    1200     2: T && F
                    0    1200     3: F && _
                      -  1200     MC/DC (cond 1): 1 - 3
                      -  1200     MC/DC (cond 2): 1 - 2
                         1202   }-
                         1202   else
                         1204   }-
         0            -  1206   return errors
                         1207 }

***TER   0 % (  0/ 10) of FUNCTION expf_uv__uv_extreme_pi_half_rnd()
         0 % (  0/ 18) statement
-----------------------------------------------------------------------------

         0            -  1238 FUNCTION expf_uv__uv_extreme_mi_thousand()
         0          0 -  1249   for (;ind < 20;)
         0          0 -  1252     if (test_compare_float ( res , expf_uv__uv_extreme_mi_thousand_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1)
                         1257     }-
                         1257     else
                         1259     }-
                         1260   }-
         0          0 -  1262   if (errors == 0 && passes == 20)
         0               1262     1: T && T
                    0    1262     2: T && F
                    0    1262     3: F && _
                      -  1262     MC/DC (cond 1): 1 - 3
                      -  1262     MC/DC (cond 2): 1 - 2
                         1264   }-
                         1264   else
                         1266   }-
         0            -  1268   return errors
                         1269 }

***TER   0 % (  0/ 10) of FUNCTION expf_uv__uv_extreme_mi_thousand()
         0 % (  0/ 18) statement
-----------------------------------------------------------------------------

         0            -  1330 FUNCTION expf_uv__uv_extreme_mi_thousand_rnd()
         0          0 -  1341   for (;ind < 50;)
         0          0 -  1344     if (test_compare_float ( res , expf_uv__uv_extreme_mi_thousand_rnd_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1)
                         1349     }-
                         1349     else
                         1351     }-
                         1352   }-
         0          0 -  1354   if (errors == 0 && passes == 50)
         0               1354     1: T && T
                    0    1354     2: T && F
                    0    1354     3: F && _
                      -  1354     MC/DC (cond 1): 1 - 3
                      -  1354     MC/DC (cond 2): 1 - 2
                         1356   }-
                         1356   else
                         1358   }-
         0            -  1360   return errors
                         1361 }

***TER   0 % (  0/ 10) of FUNCTION expf_uv__uv_extreme_mi_thousand_rnd()
         0 % (  0/ 18) statement
-----------------------------------------------------------------------------

         0            -  1392 FUNCTION expf_uv__uv_extreme_ten_thousand()
         0          0 -  1403   for (;ind < 20;)
         0          0 -  1406     if (test_compare_float ( res , expf_uv__uv_extreme_ten_thousand_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1)
                         1411     }-
                         1411     else
                         1413     }-
                         1414   }-
         0          0 -  1416   if (errors == 0 && passes == 20)
         0               1416     1: T && T
                    0    1416     2: T && F
                    0    1416     3: F && _
                      -  1416     MC/DC (cond 1): 1 - 3
                      -  1416     MC/DC (cond 2): 1 - 2
                         1418   }-
                         1418   else
                         1420   }-
         0            -  1422   return errors
                         1423 }

***TER   0 % (  0/ 10) of FUNCTION expf_uv__uv_extreme_ten_thousand()
         0 % (  0/ 18) statement
-----------------------------------------------------------------------------

         0            -  1472 FUNCTION expf_uv__uv_extreme_ten_thousand_rnd()
         0          0 -  1483   for (;ind < 38;)
         0          0 -  1486     if (test_compare_float ( res , expf_uv__uv_extreme_ten_thousand_rnd_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1)
                         1491     }-
                         1491     else
                         1493     }-
                         1494   }-
         0          0 -  1496   if (errors == 0 && passes == 38)
         0               1496     1: T && T
                    0    1496     2: T && F
                    0    1496     3: F && _
                      -  1496     MC/DC (cond 1): 1 - 3
                      -  1496     MC/DC (cond 2): 1 - 2
                         1498   }-
                         1498   else
                         1500   }-
         0            -  1502   return errors
                         1503 }

***TER   0 % (  0/ 10) of FUNCTION expf_uv__uv_extreme_ten_thousand_rnd()
         0 % (  0/ 18) statement
-----------------------------------------------------------------------------

         0            -  1572 FUNCTION expf_uv__uv_extreme_approx_zero()
         0          0 -  1583   for (;ind < 59;)
         0          0 -  1586     if (test_compare_float ( res , expf_uv__uv_extreme_approx_zero_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1)
                         1591     }-
                         1591     else
                         1593     }-
                         1594   }-
         0          0 -  1596   if (errors == 0 && passes == 59)
         0               1596     1: T && T
                    0    1596     2: T && F
                    0    1596     3: F && _
                      -  1596     MC/DC (cond 1): 1 - 3
                      -  1596     MC/DC (cond 2): 1 - 2
                         1598   }-
                         1598   else
                         1600   }-
         0            -  1602   return errors
                         1603 }

***TER   0 % (  0/ 10) of FUNCTION expf_uv__uv_extreme_approx_zero()
         0 % (  0/ 18) statement
-----------------------------------------------------------------------------

         0            -  1639 FUNCTION expf_uv__uv_extreme_approx_pi_34()
         0          0 -  1650   for (;ind < 26;)
         0          0 -  1653     if (test_compare_float ( res , expf_uv__uv_extreme_approx_pi_34_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1)
                         1658     }-
                         1658     else
                         1660     }-
                         1661   }-
         0          0 -  1663   if (errors == 0 && passes == 26)
         0               1663     1: T && T
                    0    1663     2: T && F
                    0    1663     3: F && _
                      -  1663     MC/DC (cond 1): 1 - 3
                      -  1663     MC/DC (cond 2): 1 - 2
                         1665   }-
                         1665   else
                         1667   }-
         0            -  1669   return errors
                         1670 }

***TER   0 % (  0/ 10) of FUNCTION expf_uv__uv_extreme_approx_pi_34()
         0 % (  0/ 18) statement
-----------------------------------------------------------------------------

         0            -  1682 FUNCTION expf_uv__uv_extreme_manual_values()
         0          0 -  1693   for (;ind < 1;)
         0          0 -  1696     if (test_compare_float ( res , expf_uv__uv_extreme_manual_values_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1)
                         1701     }-
                         1701     else
                         1703     }-
                         1704   }-
         0          0 -  1706   if (errors == 0 && passes == 1)
         0               1706     1: T && T
                    0    1706     2: T && F
                    0    1706     3: F && _
                      -  1706     MC/DC (cond 1): 1 - 3
                      -  1706     MC/DC (cond 2): 1 - 2
                         1708   }-
                         1708   else
                         1710   }-
         0            -  1712   return errors
                         1713 }

***TER   0 % (  0/ 10) of FUNCTION expf_uv__uv_extreme_manual_values()
         0 % (  0/ 18) statement
-----------------------------------------------------------------------------

         0            -  1726 FUNCTION expf_uv__uv_extreme_coverage_values()
         0          0 -  1737   for (;ind < 2;)
         0          0 -  1740     if (test_compare_float ( res , expf_uv__uv_extreme_coverage_values_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1)
                         1745     }-
                         1745     else
                         1747     }-
                         1748   }-
         0          0 -  1750   if (errors == 0 && passes == 2)
         0               1750     1: T && T
                    0    1750     2: T && F
                    0    1750     3: F && _
                      -  1750     MC/DC (cond 1): 1 - 3
                      -  1750     MC/DC (cond 2): 1 - 2
                         1752   }-
                         1752   else
                         1754   }-
         0            -  1756   return errors
                         1757 }

***TER   0 % (  0/ 10) of FUNCTION expf_uv__uv_extreme_coverage_values()
         0 % (  0/ 18) statement
-----------------------------------------------------------------------------

         0            -  1821 FUNCTION expf_uv__uv_extreme_coverage_floats()
         0          0 -  1832   for (;ind < 53;)
         0          0 -  1835     if (test_compare_float ( res , expf_uv__uv_extreme_coverage_floats_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1)
                         1840     }-
                         1840     else
                         1842     }-
                         1843   }-
         0          0 -  1845   if (errors == 0 && passes == 53)
         0               1845     1: T && T
                    0    1845     2: T && F
                    0    1845     3: F && _
                      -  1845     MC/DC (cond 1): 1 - 3
                      -  1845     MC/DC (cond 2): 1 - 2
                         1847   }-
                         1847   else
                         1849   }-
         0            -  1851   return errors
                         1852 }

***TER   0 % (  0/ 10) of FUNCTION expf_uv__uv_extreme_coverage_floats()
         0 % (  0/ 18) statement
-----------------------------------------------------------------------------

         0            -  1963 FUNCTION expf_uv__uv_extreme_coverage_floats3()
         0          0 -  1974   for (;ind < 100;)
         0          0 -  1977     if (test_compare_float ( res , expf_uv__uv_extreme_coverage_floats3_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1)
                         1982     }-
                         1982     else
                         1984     }-
                         1985   }-
         0          0 -  1987   if (errors == 0 && passes == 100)
         0               1987     1: T && T
                    0    1987     2: T && F
                    0    1987     3: F && _
                      -  1987     MC/DC (cond 1): 1 - 3
                      -  1987     MC/DC (cond 2): 1 - 2
                         1989   }-
                         1989   else
                         1991   }-
         0            -  1993   return errors
                         1994 }

***TER   0 % (  0/ 10) of FUNCTION expf_uv__uv_extreme_coverage_floats3()
         0 % (  0/ 18) statement
-----------------------------------------------------------------------------

         0            -  1999 FUNCTION expf_uv__uv_extreme_main_test()
         0          0 -  2027   if (errors == 0)
                         2029   }-
                         2029   else
                         2031   }-
         0            -  2085   return errors
                         2086 }

***TER   0 % (  0/  4) of FUNCTION expf_uv__uv_extreme_main_test()
         0 % (  0/ 31) statement
-----------------------------------------------------------------------------


***TER   0 % (  0/244) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\expf_uv__uv_extreme.c
         0 % (  0/463) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\expf_uv__uv_normal.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         0            -   130 FUNCTION expf_uv__uv_normal_normal_values()
         0          0 -   141   for (;ind < 3;)
         0          0 -   144     if (test_compare_float ( res , expf_uv__uv_normal_normal_values_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_normal , & max_dif_above_expf_uv__uv_normal ) != 1)
                          149     }-
                          149     else
                          151     }-
                          152   }-
         0          0 -   154   if (errors == 0 && passes == 3)
         0                154     1: T && T
                    0     154     2: T && F
                    0     154     3: F && _
                      -   154     MC/DC (cond 1): 1 - 3
                      -   154     MC/DC (cond 2): 1 - 2
                          156   }-
                          156   else
                          158   }-
         0            -   160   return errors
                          161 }

***TER   0 % (  0/ 10) of FUNCTION expf_uv__uv_normal_normal_values()
         0 % (  0/ 18) statement
-----------------------------------------------------------------------------

         0            -   192 FUNCTION expf_uv__uv_normal_expf_normal_range()
         0          0 -   203   for (;ind < 20;)
         0          0 -   206     if (test_compare_float ( res , expf_uv__uv_normal_expf_normal_range_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_normal , & max_dif_above_expf_uv__uv_normal ) != 1)
                          211     }-
                          211     else
                          213     }-
                          214   }-
         0          0 -   216   if (errors == 0 && passes == 20)
         0                216     1: T && T
                    0     216     2: T && F
                    0     216     3: F && _
                      -   216     MC/DC (cond 1): 1 - 3
                      -   216     MC/DC (cond 2): 1 - 2
                          218   }-
                          218   else
                          220   }-
         0            -   222   return errors
                          223 }

***TER   0 % (  0/ 10) of FUNCTION expf_uv__uv_normal_expf_normal_range()
         0 % (  0/ 18) statement
-----------------------------------------------------------------------------

         0            -   284 FUNCTION expf_uv__uv_normal_expf_normal_range_rnd()
         0          0 -   295   for (;ind < 50;)
         0          0 -   298     if (test_compare_float ( res , expf_uv__uv_normal_expf_normal_range_rnd_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_normal , & max_dif_above_expf_uv__uv_normal ) != 1)
                          303     }-
                          303     else
                          305     }-
                          306   }-
         0          0 -   308   if (errors == 0 && passes == 50)
         0                308     1: T && T
                    0     308     2: T && F
                    0     308     3: F && _
                      -   308     MC/DC (cond 1): 1 - 3
                      -   308     MC/DC (cond 2): 1 - 2
                          310   }-
                          310   else
                          312   }-
         0            -   314   return errors
                          315 }

***TER   0 % (  0/ 10) of FUNCTION expf_uv__uv_normal_expf_normal_range_rnd()
         0 % (  0/ 18) statement
-----------------------------------------------------------------------------

         0            -   338 FUNCTION expf_uv__uv_normal_base_values()
         0          0 -   349   for (;ind < 12;)
         0          0 -   352     if (test_compare_float ( res , expf_uv__uv_normal_base_values_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_normal , & max_dif_above_expf_uv__uv_normal ) != 1)
                          357     }-
                          357     else
                          359     }-
                          360   }-
         0          0 -   362   if (errors == 0 && passes == 12)
         0                362     1: T && T
                    0     362     2: T && F
                    0     362     3: F && _
                      -   362     MC/DC (cond 1): 1 - 3
                      -   362     MC/DC (cond 2): 1 - 2
                          364   }-
                          364   else
                          366   }-
         0            -   368   return errors
                          369 }

***TER   0 % (  0/ 10) of FUNCTION expf_uv__uv_normal_base_values()
         0 % (  0/ 18) statement
-----------------------------------------------------------------------------

         0            -   400 FUNCTION expf_uv__uv_normal_around_one()
         0          0 -   411   for (;ind < 20;)
         0          0 -   414     if (test_compare_float ( res , expf_uv__uv_normal_around_one_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_normal , & max_dif_above_expf_uv__uv_normal ) != 1)
                          419     }-
                          419     else
                          421     }-
                          422   }-
         0          0 -   424   if (errors == 0 && passes == 20)
         0                424     1: T && T
                    0     424     2: T && F
                    0     424     3: F && _
                      -   424     MC/DC (cond 1): 1 - 3
                      -   424     MC/DC (cond 2): 1 - 2
                          426   }-
                          426   else
                          428   }-
         0            -   430   return errors
                          431 }

***TER   0 % (  0/ 10) of FUNCTION expf_uv__uv_normal_around_one()
         0 % (  0/ 18) statement
-----------------------------------------------------------------------------

         0            -   492 FUNCTION expf_uv__uv_normal_around_one_rnd()
         0          0 -   503   for (;ind < 50;)
         0          0 -   506     if (test_compare_float ( res , expf_uv__uv_normal_around_one_rnd_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_normal , & max_dif_above_expf_uv__uv_normal ) != 1)
                          511     }-
                          511     else
                          513     }-
                          514   }-
         0          0 -   516   if (errors == 0 && passes == 50)
         0                516     1: T && T
                    0     516     2: T && F
                    0     516     3: F && _
                      -   516     MC/DC (cond 1): 1 - 3
                      -   516     MC/DC (cond 2): 1 - 2
                          518   }-
                          518   else
                          520   }-
         0            -   522   return errors
                          523 }

***TER   0 % (  0/ 10) of FUNCTION expf_uv__uv_normal_around_one_rnd()
         0 % (  0/ 18) statement
-----------------------------------------------------------------------------

         0            -   554 FUNCTION expf_uv__uv_normal_around_minus_one()
         0          0 -   565   for (;ind < 20;)
         0          0 -   568     if (test_compare_float ( res , expf_uv__uv_normal_around_minus_one_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_normal , & max_dif_above_expf_uv__uv_normal ) != 1)
                          573     }-
                          573     else
                          575     }-
                          576   }-
         0          0 -   578   if (errors == 0 && passes == 20)
         0                578     1: T && T
                    0     578     2: T && F
                    0     578     3: F && _
                      -   578     MC/DC (cond 1): 1 - 3
                      -   578     MC/DC (cond 2): 1 - 2
                          580   }-
                          580   else
                          582   }-
         0            -   584   return errors
                          585 }

***TER   0 % (  0/ 10) of FUNCTION expf_uv__uv_normal_around_minus_one()
         0 % (  0/ 18) statement
-----------------------------------------------------------------------------

         0            -   646 FUNCTION expf_uv__uv_normal_around_minus_one_rnd()
         0          0 -   657   for (;ind < 50;)
         0          0 -   660     if (test_compare_float ( res , expf_uv__uv_normal_around_minus_one_rnd_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_normal , & max_dif_above_expf_uv__uv_normal ) != 1)
                          665     }-
                          665     else
                          667     }-
                          668   }-
         0          0 -   670   if (errors == 0 && passes == 50)
         0                670     1: T && T
                    0     670     2: T && F
                    0     670     3: F && _
                      -   670     MC/DC (cond 1): 1 - 3
                      -   670     MC/DC (cond 2): 1 - 2
                          672   }-
                          672   else
                          674   }-
         0            -   676   return errors
                          677 }

***TER   0 % (  0/ 10) of FUNCTION expf_uv__uv_normal_around_minus_one_rnd()
         0 % (  0/ 18) statement
-----------------------------------------------------------------------------

         0            -   712 FUNCTION expf_uv__uv_normal_approx_two()
         0          0 -   723   for (;ind < 25;)
         0          0 -   726     if (test_compare_float ( res , expf_uv__uv_normal_approx_two_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_normal , & max_dif_above_expf_uv__uv_normal ) != 1)
                          731     }-
                          731     else
                          733     }-
                          734   }-
         0          0 -   736   if (errors == 0 && passes == 25)
         0                736     1: T && T
                    0     736     2: T && F
                    0     736     3: F && _
                      -   736     MC/DC (cond 1): 1 - 3
                      -   736     MC/DC (cond 2): 1 - 2
                          738   }-
                          738   else
                          740   }-
         0            -   742   return errors
                          743 }

***TER   0 % (  0/ 10) of FUNCTION expf_uv__uv_normal_approx_two()
         0 % (  0/ 18) statement
-----------------------------------------------------------------------------

         0            -   779 FUNCTION expf_uv__uv_normal_approx_minus_one()
         0          0 -   790   for (;ind < 26;)
         0          0 -   793     if (test_compare_float ( res , expf_uv__uv_normal_approx_minus_one_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_normal , & max_dif_above_expf_uv__uv_normal ) != 1)
                          798     }-
                          798     else
                          800     }-
                          801   }-
         0          0 -   803   if (errors == 0 && passes == 26)
         0                803     1: T && T
                    0     803     2: T && F
                    0     803     3: F && _
                      -   803     MC/DC (cond 1): 1 - 3
                      -   803     MC/DC (cond 2): 1 - 2
                          805   }-
                          805   else
                          807   }-
         0            -   809   return errors
                          810 }

***TER   0 % (  0/ 10) of FUNCTION expf_uv__uv_normal_approx_minus_one()
         0 % (  0/ 18) statement
-----------------------------------------------------------------------------

         0            -   815 FUNCTION expf_uv__uv_normal_main_test()
         0          0 -   829   if (errors == 0)
                          831   }-
                          831   else
                          833   }-
         0            -   887   return errors
                          888 }

***TER   0 % (  0/  4) of FUNCTION expf_uv__uv_normal_main_test()
         0 % (  0/ 17) statement
-----------------------------------------------------------------------------


***TER   0 % (  0/104) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\expf_uv__uv_normal.c
         0 % (  0/197) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\expf_uv__uv_terms.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         0            -   118 FUNCTION expf_uv__uv_terms_expf_deterministic()
         0          0 -   131   for (;ind < 50;)
         0          0 -   134     if (res != expf_uv__uv_terms_expf_deterministic_io_table [ ind ] . expf_out)
         0          0 -   136       if (( expf ( x ) == expf ( x ) ) >= - 2147483648.0 && ( expf ( x ) == expf ( x ) ) <= 2147483647.0)
         0                136         1: T && T
                    0     136         2: T && F
                    0     136         3: F && _
                      -   136         MC/DC (cond 1): 1 - 3
                      -   136         MC/DC (cond 2): 1 - 2
         0          0 -   141         if (( res1 != expf_uv__uv_terms_expf_deterministic_io_table [ ind ] . expf_out ) && ( res2 != expf_uv__uv_terms_expf_deterministic_io_table [ ind ] . expf_out ))
         0                141           1: (T) && (T)
                    0     141           2: (T) && (F)
                    0     141           3: (F) && (_)
                      -   141           MC/DC (cond 1): 1 - 3
                      -   141           MC/DC (cond 2): 1 - 2
                          146         }-
                          146         else
                          148         }-
                          149       }-
                          149       else
                          151       }-
                          152     }-
                          152     else
                          154     }-
                          155   }-
         0          0 -   157   if (errors == 0 && passes == 50)
         0                157     1: T && T
                    0     157     2: T && F
                    0     157     3: F && _
                      -   157     MC/DC (cond 1): 1 - 3
                      -   157     MC/DC (cond 2): 1 - 2
                          159   }-
                          159   else
                          161   }-
         0            -   163   return errors
                          164 }

***TER   0 % (  0/ 18) of FUNCTION expf_uv__uv_terms_expf_deterministic()
         0 % (  0/ 26) statement
-----------------------------------------------------------------------------

         0            -   226 FUNCTION expf_uv__uv_terms_expf_combine()
         0          0 -   237   for (;ind < 50;)
         0          0 -   240     if (test_compare_float ( res , expf_uv__uv_terms_expf_combine_io_table [ ind ] . expf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_expf_uv__uv_terms , & max_dif_above_expf_uv__uv_terms ) != 1)
                          245     }-
                          245     else
                          247     }-
                          248   }-
         0          0 -   250   if (errors == 0 && passes == 50)
         0                250     1: T && T
                    0     250     2: T && F
                    0     250     3: F && _
                      -   250     MC/DC (cond 1): 1 - 3
                      -   250     MC/DC (cond 2): 1 - 2
                          252   }-
                          252   else
                          254   }-
         0            -   256   return errors
                          257 }

***TER   0 % (  0/ 10) of FUNCTION expf_uv__uv_terms_expf_combine()
         0 % (  0/ 18) statement
-----------------------------------------------------------------------------

         0            -   262 FUNCTION expf_uv__uv_terms_main_test()
         0          0 -   268   if (errors == 0)
                          270   }-
                          270   else
                          272   }-
         0            -   326   return errors
                          327 }

***TER   0 % (  0/  4) of FUNCTION expf_uv__uv_terms_main_test()
         0 % (  0/  9) statement
-----------------------------------------------------------------------------


***TER   0 % (  0/ 32) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\expf_uv__uv_terms.c
         0 % (  0/ 53) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\expf_uv__uv_trivial.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         0            -    75 FUNCTION expf_uv__uv_trivial_zero_one()
         0          0 -    86   for (;ind < 2;)
         0          0 -    89     if (test_compare_float ( res , expf_uv__uv_trivial_zero_one_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_trivial , & max_dif_above_expf_uv__uv_trivial ) != 1)
                           94     }-
                           94     else
                           96     }-
                           97   }-
         0          0 -    99   if (errors == 0 && passes == 2)
         0                 99     1: T && T
                    0      99     2: T && F
                    0      99     3: F && _
                      -    99     MC/DC (cond 1): 1 - 3
                      -    99     MC/DC (cond 2): 1 - 2
                          101   }-
                          101   else
                          103   }-
         0            -   105   return errors
                          106 }

***TER   0 % (  0/ 10) of FUNCTION expf_uv__uv_trivial_zero_one()
         0 % (  0/ 18) statement
-----------------------------------------------------------------------------

         0            -   124 FUNCTION expf_uv__uv_trivial_simple_values()
         0          0 -   135   for (;ind < 7;)
         0          0 -   138     if (test_compare_float ( res , expf_uv__uv_trivial_simple_values_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_trivial , & max_dif_above_expf_uv__uv_trivial ) != 1)
                          143     }-
                          143     else
                          145     }-
                          146   }-
         0          0 -   148   if (errors == 0 && passes == 7)
         0                148     1: T && T
                    0     148     2: T && F
                    0     148     3: F && _
                      -   148     MC/DC (cond 1): 1 - 3
                      -   148     MC/DC (cond 2): 1 - 2
                          150   }-
                          150   else
                          152   }-
         0            -   154   return errors
                          155 }

***TER   0 % (  0/ 10) of FUNCTION expf_uv__uv_trivial_simple_values()
         0 % (  0/ 18) statement
-----------------------------------------------------------------------------

         0            -   173 FUNCTION expf_uv__uv_trivial_seven()
         0          0 -   184   for (;ind < 7;)
         0          0 -   187     if (test_compare_float ( res , expf_uv__uv_trivial_seven_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_trivial , & max_dif_above_expf_uv__uv_trivial ) != 1)
                          192     }-
                          192     else
                          194     }-
                          195   }-
         0          0 -   197   if (errors == 0 && passes == 7)
         0                197     1: T && T
                    0     197     2: T && F
                    0     197     3: F && _
                      -   197     MC/DC (cond 1): 1 - 3
                      -   197     MC/DC (cond 2): 1 - 2
                          199   }-
                          199   else
                          201   }-
         0            -   203   return errors
                          204 }

***TER   0 % (  0/ 10) of FUNCTION expf_uv__uv_trivial_seven()
         0 % (  0/ 18) statement
-----------------------------------------------------------------------------

         0            -   209 FUNCTION expf_uv__uv_trivial_main_test()
         0          0 -   216   if (errors == 0)
                          218   }-
                          218   else
                          220   }-
         0            -   274   return errors
                          275 }

***TER   0 % (  0/  4) of FUNCTION expf_uv__uv_trivial_main_test()
         0 % (  0/ 10) statement
-----------------------------------------------------------------------------


***TER   0 % (  0/ 34) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\expf_uv__uv_trivial.c
         0 % (  0/ 64) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\fegetenv.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

      1060                  2 FUNCTION fegetenv()
      1060                  7   return ( 0 )
                            8 }

***TER 100 % (  2/  2) of FUNCTION fegetenv()
       100 % (  2/  2) statement
-----------------------------------------------------------------------------


***TER 100 % (  2/  2) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\fegetenv.c
       100 % (  2/  2) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\feraiseexcept.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

      1060                  3 FUNCTION feraiseexcept()
      1060          0 -     5   if (( except &= ( 0x02 | 0x10 | 0x01 | 0x04 | 0x08 ) ) != 0)
         0       1060 -    20     if (( except &= ( env >> 8 ) ) != 0)
                           21     }+
                           22   }+
      1060                 23   return ( 0 )
                           24 }

***TER  67 % (  4/  6) of FUNCTION feraiseexcept()
        88 % (  7/  8) statement
-----------------------------------------------------------------------------


***TER  67 % (  4/  6) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\feraiseexcept.c
        88 % (  7/  8) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\fesetenv.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         0            -    12 FUNCTION _Force_raise()
         0          0 -    21   for (;i < sizeof ( table ) / sizeof ( table [ 0 ] );)
         0          0 -    22     if (( except & table [ i ] . except ) != 0)
                           23     }-
                           23   }-
         0            -    24   return ( ans )
                           25 }

***TER   0 % (  0/  6) of FUNCTION _Force_raise()
         0 % (  0/  8) statement
-----------------------------------------------------------------------------

      1060                 28 FUNCTION fesetenv()
      1060                 32   return ( 0 )
                           33 }

***TER 100 % (  2/  2) of FUNCTION fesetenv()
       100 % (  1/  1) statement
-----------------------------------------------------------------------------


***TER  25 % (  2/  8) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\fesetenv.c
        11 % (  1/  9) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\float_analysis.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         0            -     3 FUNCTION printfloat()
         0            -     9 }

***TER   0 % (  0/  2) of FUNCTION printfloat()
         0 % (  0/  5) statement
-----------------------------------------------------------------------------

         0            -    11 FUNCTION getDeltaULP()
         0          0 -    14   if (x != x || y != y)
         0                 14     1: T || _
         0                 14     2: F || T
                    0      14     3: F || F
                      -    14     MC/DC (cond 1): 1 - 3
                      -    14     MC/DC (cond 2): 2 - 3
                           16   }-
         0          0 -    16   else if (x == __builtin_inf ( ) || y == __builtin_inf ( ) || x == - __builtin_inf ( ) || y == - __builtin_inf ( ))
         0                 16     1: T || _ || _ || _
         0                 16     2: F || T || _ || _
         0                 16     3: F || F || T || _
         0                 16     4: F || F || F || T
                    0      16     5: F || F || F || F
                      -    16     MC/DC (cond 1): 1 - 5
                      -    16     MC/DC (cond 2): 2 - 5
                      -    16     MC/DC (cond 3): 3 - 5
                      -    16     MC/DC (cond 4): 4 - 5
                           18   }-
                           18   else
         0          0 -    19     ternary-?: ( y > x )
         0          0 -    22     while (y != z)
         0          0 -    25       if (res_u32 >= ( 0x7fffffff * 2U + 1U ))
         0            -    27         break
                           28       }-
                           29     }-
                           30   }-
         0            -    31   return res_u32
                           32 }

***TER   0 % (  0/ 19) of FUNCTION getDeltaULP()
         0 % (  0/ 15) statement
-----------------------------------------------------------------------------

         0            -    34 FUNCTION getDeltaULP_BIT()
         0          0 -    39   if (x != x || y != y)
         0                 39     1: T || _
         0                 39     2: F || T
                    0      39     3: F || F
                      -    39     MC/DC (cond 1): 1 - 3
                      -    39     MC/DC (cond 2): 2 - 3
                           41   }-
         0          0 -    41   else if (x == __builtin_inf ( ) || y == __builtin_inf ( ) || x == - __builtin_inf ( ) || y == - __builtin_inf ( ))
         0                 41     1: T || _ || _ || _
         0                 41     2: F || T || _ || _
         0                 41     3: F || F || T || _
         0                 41     4: F || F || F || T
                    0      41     5: F || F || F || F
                      -    41     MC/DC (cond 1): 1 - 5
                      -    41     MC/DC (cond 2): 2 - 5
                      -    41     MC/DC (cond 3): 3 - 5
                      -    41     MC/DC (cond 4): 4 - 5
                           43   }-
                           43   else
         0          0 -    47     if (x_bits . s == y_bits . s)
         0          0 -    48       if (x_bits . e > y_bits . e)
         0          0 -    50         if (x_bits . m >= y_bits . m)
                           52         }-
                           52         else
                           55         }-
                           56       }-
         0          0 -    56       else if (x_bits . e < y_bits . e)
         0          0 -    58         if (x_bits . m <= y_bits . m)
                           60         }-
                           60         else
                           63         }-
                           64       }-
                           64       else
         0          0 -    66         if (x_bits . m <= y_bits . m)
                           68         }-
                           68         else
                           70         }-
                           71       }-
                           73     }-
                           73     else
                           76     }-
                           79   }-
         0            -    80   return res_u32
                           81 }

***TER   0 % (  0/ 24) of FUNCTION getDeltaULP_BIT()
         0 % (  0/ 32) statement
-----------------------------------------------------------------------------

         0            -    83 FUNCTION computeAndPrint()
         0            -    88 }

***TER   0 % (  0/  2) of FUNCTION computeAndPrint()
         0 % (  0/  4) statement
-----------------------------------------------------------------------------


***TER   0 % (  0/ 47) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\float_analysis.c
         0 % (  0/ 56) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\float_cmp_ulp.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         0            -    11 FUNCTION float_equal_ulp()
         0          0 -    18   if (n_ulp == 0U)
                           21   }-
                           21   else
                           23     switch (fmc_ref)
         0            -    24     case FMC_NAN_FLOAT:
         0            -    27       break
         0            -    28     case FMC_INF_FLOAT:
         0            -    30       break
         0            -    31     default:
         0            -    35       break
                           36     }-
                           37   }-
         0            -    38   return res
                           39 }

***TER   0 % (  0/ 10) of FUNCTION float_equal_ulp()
         0 % (  0/ 19) statement
-----------------------------------------------------------------------------

         0            -    41 FUNCTION float_ulp()
         0          0 -    44   if (fb . e == 0xFF)
                           48   }-
         0          0 -    48   else if (fb . e >= 24U)
                           53   }-
                           53   else
         0          0 -    58     if (fb . e > 0U)
                           64     }-
                           64     else
                           67     }-
                           69   }-
         0            -    70   return fb2float ( fb )
                           71 }

***TER   0 % (  0/  8) of FUNCTION float_ulp()
         0 % (  0/ 15) statement
-----------------------------------------------------------------------------


***TER   0 % (  0/ 18) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\float_cmp_ulp.c
         0 % (  0/ 34) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\float_compares.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

      1861                 22 FUNCTION test_compare_float()
         0       1861 -    26   if (__builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , double ) , __isnan ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , float ) , __isnanf ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , long double ) , __isnanl ( found ) , ( __builtin_trap ( ) , found ) ) ) ) != __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , double ) , __isnan ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , float ) , __isnanf ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , long double ) , __isnanl ( expected ) , ( __builtin_trap ( ) , expected ) ) ) ))
         0            -    30     return 0
                           31   }+
       410       1451      32   if (__builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , double ) , __isnan ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , float ) , __isnanf ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , long double ) , __isnanl ( found ) , ( __builtin_trap ( ) , found ) ) ) ) && __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , double ) , __isnan ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , float ) , __isnanf ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , long double ) , __isnanl ( expected ) , ( __builtin_trap ( ) , expected ) ) ) ))
       410                 32     1: T && T
                    0      32     2: T && F
                 1451      32     3: F && _
                           32     MC/DC (cond 1): 1 + 3
                      -    32     MC/DC (cond 2): 1 - 2
       410                 33     return 1
                           34   }+
         4       1447      35   if (( __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , double ) , __fpclassify ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , float ) , __fpclassifyf ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , long double ) , __fpclassifyl ( found ) , ( __builtin_trap ( ) , 0 ) ) ) ) == ( 0x0100 | 0x0400 ) ) != ( __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , double ) , __fpclassify ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , float ) , __fpclassifyf ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , long double ) , __fpclassifyl ( expected ) , ( __builtin_trap ( ) , 0 ) ) ) ) == ( 0x0100 | 0x0400 ) ))
         4                 39     return 0
                           40   }+
         0       1447 -    41   if (( __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , double ) , __fpclassify ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , float ) , __fpclassifyf ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , long double ) , __fpclassifyl ( found ) , ( __builtin_trap ( ) , 0 ) ) ) ) == ( 0x0100 | 0x0400 ) ) && ( __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , double ) , __fpclassify ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , float ) , __fpclassifyf ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , long double ) , __fpclassifyl ( expected ) , ( __builtin_trap ( ) , 0 ) ) ) ) == ( 0x0100 | 0x0400 ) ) && found != expected)
         0                 41     1: (T) && (T) && T
                  174      41     2: (T) && (T) && F
                    0      41     3: (T) && (F) && _
                 1273      41     4: (F) && (_) && _
                      -    41     MC/DC (cond 1): 1 - 4
                      -    41     MC/DC (cond 2): 1 - 3
                      -    41     MC/DC (cond 3): 1 - 2
         0            -    45     return 0
                           46   }+
       174       1273      47   if (( __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , double ) , __fpclassify ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , float ) , __fpclassifyf ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , long double ) , __fpclassifyl ( found ) , ( __builtin_trap ( ) , 0 ) ) ) ) == ( 0x0100 | 0x0400 ) ) && ( __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , double ) , __fpclassify ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , float ) , __fpclassifyf ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , long double ) , __fpclassifyl ( expected ) , ( __builtin_trap ( ) , 0 ) ) ) ) == ( 0x0100 | 0x0400 ) ) && found == expected)
       174                 47     1: (T) && (T) && T
                    0      47     2: (T) && (T) && F
                    0      47     3: (T) && (F) && _
                 1273      47     4: (F) && (_) && _
                           47     MC/DC (cond 1): 1 + 4
                      -    47     MC/DC (cond 2): 1 - 3
                      -    47     MC/DC (cond 3): 1 - 2
       174                 48     return 1
                           49   }+
         0       1273 -    50   if (comparetype & 1)
         0          0 -    52     if (fabs ( found - expected ) > maxtol_below)
         0          0 -    57       if (fabs ( found - expected ) > * maxdeviation_below)
                           59       }-
                           60     }-
                           60     else
         0          0 -    61       if (result == - 1)
                           63       }-
                           64     }-
                           65   }+
         0       1273 -    66   if (comparetype & 2)
         0          0 -    68     if (expected != 0.0 && fabs ( ( found - expected ) / expected ) > maxtol_below)
         0                 68       1: T && T
                    0      68       2: T && F
                    0      68       3: F && _
                      -    68       MC/DC (cond 1): 1 - 3
                      -    68       MC/DC (cond 2): 1 - 2
         0          0 -    73       if (fabs ( ( found - expected ) / expected ) > * maxdeviation_below)
                           75       }-
                           76     }-
                           76     else
         0          0 -    77       if (result == - 1)
                           79       }-
                           80     }-
                           81   }+
      1273          0 -    82   if (comparetype & 128)
       869        404      84     if (fabs ( expected ) <= limit)
         0        869 -    86       if (fabs ( found - expected ) > maxtol_below)
         0          0 -    91         if (fabs ( found - expected ) > * maxdeviation_below)
                           93         }-
                           94       }+
                           94       else
       869          0 -    95         if (result == - 1)
                           97         }+
                           98       }+
                           99     }+
                           99     else
         0        404 -   101       if (fabs ( ( found - expected ) / expected ) > maxtol_above)
         0          0 -   106         if (fabs ( found - expected ) > * maxdeviation_above)
                          108         }-
                          109       }+
                          109       else
       404          0 -   110         if (result == - 1)
                          112         }+
                          113       }+
                          114     }+
                          115   }+
         0       1273 -   116   if (comparetype & 4)
         0          0 -   118     if (! float_equal_ulp ( found , expected , ( uint32 ) maxtol_below ))
         0          0 -   130       if (dif > * maxdeviation_below)
                          132       }-
                          133     }-
                          133     else
         0          0 -   134       if (result == - 1)
                          136       }-
                          137     }-
                          138   }+
         0       1273 -   139   if (comparetype & 8)
         0          0 -   141     if (fabs ( expected ) <= limit)
         0          0 -   142       if (fabs ( found - expected ) > maxtol_below)
         0          0 -   147         if (fabs ( found - expected ) > * maxdeviation_below)
                          149         }-
                          150       }-
                          150       else
         0          0 -   151         if (result == - 1)
                          153         }-
                          154       }-
                          155     }-
                          155     else
         0          0 -   156       if (! float_equal_ulp ( found , expected , ( uint32 ) maxtol_above ))
         0          0 -   168         if (dif > * maxdeviation_above)
                          170         }-
                          171       }-
                          171       else
         0          0 -   172         if (result == - 1)
                          174         }-
                          175       }-
                          176     }-
                          177   }+
         0       1273 -   178   if (comparetype & 16)
         0          0 -   182     if (expected != 0.0)
         0          0 -   183       ternary-?: ( sqrt ( fabs ( found * expected ) ) ) > ( 1 )
                          184     }-
         0          0 -   185     if (exakt > maxtol_below)
         0          0 -   190       if (exakt > * maxdeviation_below)
                          192       }-
                          193     }-
                          193     else
         0          0 -   194       if (result == - 1)
                          196       }-
                          197     }-
                          198   }+
         0       1273 -   199   if (comparetype & 32)
         0          0 -   201     if (found != expected)
         0          0 -   206       if (fabs ( found - expected ) > * maxdeviation_below)
                          208       }-
                          209     }-
                          209     else
         0          0 -   210       if (result == - 1)
                          212       }-
                          213     }-
                          214   }+
         0       1273 -   215   if (comparetype & 64)
         0          0 -   221     if (hfFound . x_val != hfExpected . x_val)
         0          0 -   226       if (fabs ( found - expected ) > * maxdeviation_below)
                          228       }-
                          229     }-
                          229     else
         0          0 -   230       if (result == - 1)
                          232       }-
                          233     }-
                          234   }+
      1273                236   return result
                          237 }

***TER  26 % ( 29/111) of FUNCTION test_compare_float()
        24 % ( 26/108) statement
-----------------------------------------------------------------------------


***TER  26 % ( 29/111) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\float_compares.c
        24 % ( 26/108) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\float_data.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         0            -     7 FUNCTION fb_int2float()
         0            -    10   return tmp . fval
                           11 }

***TER   0 % (  0/  2) of FUNCTION fb_int2float()
         0 % (  0/  3) statement
-----------------------------------------------------------------------------

         0            -    13 FUNCTION fb_float2int()
         0            -    16   return tmp . ival
                           17 }

***TER   0 % (  0/  2) of FUNCTION fb_float2int()
         0 % (  0/  3) statement
-----------------------------------------------------------------------------

         0            -    21 FUNCTION float2fb()
         0            -    28   return res
                           29 }

***TER   0 % (  0/  2) of FUNCTION float2fb()
         0 % (  0/  7) statement
-----------------------------------------------------------------------------

         0            -    31 FUNCTION fb2float()
         0            -    34   return res . fval
                           35 }

***TER   0 % (  0/  2) of FUNCTION fb2float()
         0 % (  0/  3) statement
-----------------------------------------------------------------------------

         0            -    37 FUNCTION sem2float()
         0            -    40   return res . fval
                           41 }

***TER   0 % (  0/  2) of FUNCTION sem2float()
         0 % (  0/  3) statement
-----------------------------------------------------------------------------

         0            -    43 FUNCTION sem2fb()
         0            -    44   return float2fb ( sem2float ( s , e , m ) )
                           45 }

***TER   0 % (  0/  2) of FUNCTION sem2fb()
         0 % (  0/  1) statement
-----------------------------------------------------------------------------

         0            -    47 FUNCTION float_NaN_or_Inf()
         0            -    51   return ( ( tmp . ival & 0x7F800000 ) == 0x7F800000 )
                           52 }

***TER   0 % (  0/  2) of FUNCTION float_NaN_or_Inf()
         0 % (  0/  3) statement
-----------------------------------------------------------------------------

         0            -    54 FUNCTION classify_float_mag()
         0          0 -    58   if (tmp . e == 255U)
         0          0 -    59     if (tmp . m == 0U)
                           59     }-
                           60     else
                           60     }-
                           61   }-
         0          0 -    62   else if (tmp . e == 0U)
         0          0 -    63     if (tmp . m == 0U)
                           63     }-
                           64     else
                           64     }-
                           65   }-
                           66   else
                           68   }-
         0            -    69   return res
                           70 }

***TER   0 % (  0/ 10) of FUNCTION classify_float_mag()
         0 % (  0/ 13) statement
-----------------------------------------------------------------------------


***TER   0 % (  0/ 24) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\float_data.c
         0 % (  0/ 36) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\fma.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         0            -     3 FUNCTION fma()
         0          0 -     9   if (( errx = _Dunscale ( & expx , & xp ) ) == 2)
                           10   }-
         0          0 -    11   else if (( erry = _Dunscale ( & expy , & yp ) ) == 2)
                           12   }-
         0          0 -    13   else if (( errz = _Dunscale ( & expz , & zp ) ) == 2)
                           14   }-
         0          0 -    15   else if (errx == 1 || erry == 1)
         0                 15     1: T || _
         0                 15     2: F || T
                    0      15     3: F || F
                      -    15     MC/DC (cond 1): 1 - 3
                      -    15     MC/DC (cond 2): 2 - 3
         0          0 -    17     if (errx == 0 || erry == 0 || ( errz == 1 && ( ( ( * _Pmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) ) ^ ( ( * _Pmsw ( & ( y ) ) ) & ( ( unsigned short ) 0x8000 ) ) ) != ( ( * _Pmsw ( & ( z ) ) ) & ( ( unsigned short ) 0x8000 ) ) ))
         0                 17       1: T || _ || (_ && _)
         0                 17       2: F || T || (_ && _)
         0                 17       3: F || F || (T && T)
                    0      17       4: F || F || (T && F)
                    0      17       5: F || F || (F && _)
                      -    17       MC/DC (cond 1): 1 - 4, 1 - 5
                      -    17       MC/DC (cond 2): 2 - 4, 2 - 5
                      -    17       MC/DC (cond 3): 3 - 5
                      -    17       MC/DC (cond 4): 3 - 4
                           21     }-
         0          0 -    22     else if (errz == 1)
                           23     }-
         0          0 -    24     else if (( ( ( * _Pmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) ) ^ ( ( * _Pmsw ( & ( y ) ) ) & ( ( unsigned short ) 0x8000 ) ) ) == 0)
                           25     }-
                           26     else
                           27     }-
                           27   }-
         0          0 -    28   else if (errz == 1 || errx == 0 || erry == 0)
         0                 28     1: T || _ || _
         0                 28     2: F || T || _
         0                 28     3: F || F || T
                    0      28     4: F || F || F
                      -    28     MC/DC (cond 1): 1 - 4
                      -    28     MC/DC (cond 2): 2 - 4
                      -    28     MC/DC (cond 3): 3 - 4
                           29   }-
         0          0 -    30   else if (errz == 0)
                           31   }-
                           32   else
         0          0 -    38     if (2 * 53 < exp_diff)
         0          0 -    44       ternary-?: ( xp < 0.0 ) ^ ( yp < 0.0 )
                           46     }-
                           47     else
         0          0 -    49       if (exp_diff < - 2 * 53)
         0          0 -    51         ternary-?: zp < 0.0
                           51       }-
                           52       else
                           53       }-
         0          0 -    59       if (xpy [ 1 ] != 0.0)
                           66       }-
                           67     }-
         0          0 -    70     if (exp_prod != 0)
                           71     }-
         0          0 -    73     if (_Dtest ( & ans ) != 1)
                           74     }-
         0          0 -    75     else if (0.0 < ans)
                           76     }-
                           77     else
                           78     }-
                           79   }-
         0            -    80   return ( ans )
                           81 }

***TER   0 % (  0/ 45) of FUNCTION fma()
         0 % (  0/ 53) statement
-----------------------------------------------------------------------------


***TER   0 % (  0/ 45) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\fma.c
         0 % (  0/ 53) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\fmod.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         0            -     2 FUNCTION fmod()
         0          0 -     6   if (0 <= errx || 0 <= erry)
         0                  6     1: T || _
         0                  6     2: F || T
                    0       6     3: F || F
                      -     6     MC/DC (cond 1): 1 - 3
                      -     6     MC/DC (cond 2): 2 - 3
         0          0 -     8     if (errx == 2)
         0            -     9       return ( x )
                            9     }-
         0          0 -    10     else if (erry == 2)
         0            -    11       return ( y )
                           11     }-
         0          0 -    12     else if (errx == 1 || erry == 0)
         0                 12       1: T || _
         0                 12       2: F || T
                    0      12       3: F || F
                      -    12       MC/DC (cond 1): 1 - 3
                      -    12       MC/DC (cond 2): 2 - 3
         0            -    15       return ( _Nan . _Double )
                           16     }-
                           17     else
         0            -    18       return ( x )
                           18     }-
                           19   }-
                           20   else
         0          0 -    26     if (x < 0.0)
                           30     }-
                           31     else
                           32     }-
         0            -    33     const-for (;;)
         0          0 -    38       if (n < 0 || _Dunscale ( & xchar , & t ) == 0 || ( n = ( long ) xchar - ychar ) < 0)
         0                 38         1: T || _ || _
         0                 38         2: F || T || _
         0                 38         3: F || F || T
                    0      38         4: F || F || F
                      -    38         MC/DC (cond 1): 1 - 4
                      -    38         MC/DC (cond 2): 2 - 4
                      -    38         MC/DC (cond 3): 3 - 4
         0          0 -    40         if (neg)
                           41         }-
         0            -    42         return ( x )
                           43       }-
         0          0 -    44       for (;0 <= n;)
         0          0 -    47         if (x < t)
                           48         }-
         0          0 -    49         else if (x == t)
         0            -    50           return ( 0.0 )
                           50         }-
                           51         else
                           57         }-
                           58       }-
                           59     }-
                           60   }-
                           61 }

***TER   0 % (  0/ 35) of FUNCTION fmod()
         0 % (  0/ 40) statement
-----------------------------------------------------------------------------


***TER   0 % (  0/ 35) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\fmod.c
         0 % (  0/ 40) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\ldexp.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         0            -     2 FUNCTION ldexp()
         0          0 -     4   if (xexp != 0 && _Dtest ( & x ) < 0)
         0                  4     1: T && T
                    0       4     2: T && F
                    0       4     3: F && _
                      -     4     MC/DC (cond 1): 1 - 3
                      -     4     MC/DC (cond 2): 1 - 2
                            5     switch (_Dscalex ( & x , xexp , 1 ))
         0            -     7     case 0:
         0            -     9       break
         0            -    10     case 1:
                           12     }-
                           12   }-
         0            -    13   return ( x )
                           14 }

***TER   0 % (  0/  9) of FUNCTION ldexp()
         0 % (  0/  6) statement
-----------------------------------------------------------------------------


***TER   0 % (  0/  9) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\ldexp.c
         0 % (  0/  6) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\ldexpf.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         0            -     3 FUNCTION ldexpf()
         0          0 -     5   if (xexp != 0 && _FDtest ( & x ) < 0)
         0                  5     1: T && T
                    0       5     2: T && F
                    0       5     3: F && _
                      -     5     MC/DC (cond 1): 1 - 3
                      -     5     MC/DC (cond 2): 1 - 2
                            6     switch (_FDscalex ( & x , xexp , 1 ))
         0            -     8     case 0:
         0            -    10       break
         0            -    11     case 1:
                           13     }-
                           13   }-
         0            -    14   return ( x )
                           15 }

***TER   0 % (  0/  9) of FUNCTION ldexpf()
         0 % (  0/  6) statement
-----------------------------------------------------------------------------


***TER   0 % (  0/  9) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\ldexpf.c
         0 % (  0/  6) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\log.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         0            -     3 FUNCTION log()
         0            -     5   return ( _Log ( x , 0 ) )
                            6 }

***TER   0 % (  0/  2) of FUNCTION log()
         0 % (  0/  1) statement
-----------------------------------------------------------------------------


***TER   0 % (  0/  2) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\log.c
         0 % (  0/  1) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\log1p.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         0            -     4 FUNCTION log1p()
                            6   switch (_Dtest ( & x ))
         0            -     8   case 2:
         0            -     9   case 0:
         0            -    10     return ( x )
         0            -    12   case 1:
         0          0 -    13     if (! ( ( * _Pmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) ))
         0            -    14       return ( x )
                           14     }-
         0            -    16   default:
         0          0 -    17     if (x < - 1.0)
         0            -    20       return ( _Nan . _Double )
                           21     }-
         0          0 -    22     else if (x == - 1.0)
         0            -    25       return ( - _Inf . _Double )
                           26     }-
         0          0 -    27     else if (- _Eps . _Double <= x && x < _Eps . _Double)
         0                 27       1: T && T
                    0      27       2: T && F
                    0      27       3: F && _
                      -    27       MC/DC (cond 1): 1 - 3
                      -    27       MC/DC (cond 2): 1 - 2
         0            -    28       return ( x )
                           28     }-
                           29     else
         0            -    33       return ( log ( y ) - ( ( ( y - 1.0 ) - x ) * ( 1.0 / ( y ) ) ) )
                           34     }-
                           35   }-
                           36 }

***TER   0 % (  0/ 21) of FUNCTION log1p()
         0 % (  0/ 14) statement
-----------------------------------------------------------------------------


***TER   0 % (  0/ 21) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\log1p.c
         0 % (  0/ 14) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\main.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         0            -    15 FUNCTION my_atof()
         0          0 -    16   if (strcmp ( s , "NAN" ) == 0)
         0            -    17     return __builtin_nan ( "" )
                           18   }-
         0          0 -    19   if (strcmp ( s , "DENORM" ) == 0 || strcmp ( s , "DEN" ) == 0)
         0                 19     1: T || _
         0                 19     2: F || T
                    0      19     3: F || F
                      -    19     MC/DC (cond 1): 1 - 3
                      -    19     MC/DC (cond 2): 2 - 3
         0          0 -    21     while (d / 2 > 0)
                           23     }-
         0            -    24     return d
                           25   }-
         0          0 -    26   if (strcmp ( s , "-DENORM" ) == 0 || strcmp ( s , "-DEN" ) == 0)
         0                 26     1: T || _
         0                 26     2: F || T
                    0      26     3: F || F
                      -    26     MC/DC (cond 1): 1 - 3
                      -    26     MC/DC (cond 2): 2 - 3
         0          0 -    28     while (d / 2 < 0)
                           30     }-
         0            -    31     return d
                           32   }-
         0          0 -    33   if (strcmp ( s , "INF" ) == 0 || strcmp ( s , "INFINITY" ) == 0)
         0                 33     1: T || _
         0                 33     2: F || T
                    0      33     3: F || F
                      -    33     MC/DC (cond 1): 1 - 3
                      -    33     MC/DC (cond 2): 2 - 3
         0            -    34     return ( ( double ) __builtin_inf ( ) )
                           35   }-
         0          0 -    36   if (strcmp ( s , "-INF" ) == 0 || strcmp ( s , "-INFINITY" ) == 0)
         0                 36     1: T || _
         0                 36     2: F || T
                    0      36     3: F || F
                      -    36     MC/DC (cond 1): 1 - 3
                      -    36     MC/DC (cond 2): 2 - 3
         0            -    37     return - ( ( double ) __builtin_inf ( ) )
                           38   }-
         0          0 -    39   if (strncmp ( s , "0x" , 2 ) == 0)
         0            -    43     return hv . val
                           44   }-
         0            -    45   return atof ( s )
                           46 }

***TER   0 % (  0/ 32) of FUNCTION my_atof()
         0 % (  0/ 21) statement
-----------------------------------------------------------------------------

         0            -    64 FUNCTION toRep()
         0            -    66   return rep . i
                           67 }

***TER   0 % (  0/  2) of FUNCTION toRep()
         0 % (  0/  4) statement
-----------------------------------------------------------------------------

         1                 72 FUNCTION main()
         1                114   return errors
                          116 }

***TER 100 % (  2/  2) of FUNCTION main()
       100 % ( 11/ 11) statement
-----------------------------------------------------------------------------


***TER   6 % (  2/ 36) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\main.c
        31 % ( 11/ 36) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\memcpy.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

      2200                  3 FUNCTION memcpy_HighTecARMImpl()
     35200       2200       7   for (;0 < n;)
                            8   }+
      2200                  9   return ( s1 )
                           10 }

***TER 100 % (  4/  4) of FUNCTION memcpy_HighTecARMImpl()
       100 % (  7/  7) statement
-----------------------------------------------------------------------------


***TER 100 % (  4/  4) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\memcpy.c
       100 % (  7/  7) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\pow.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         0            -   183 FUNCTION _Pow()
         0          0 -   193   if (y == 1.0)
         0            -   194     return ( x )
                          194   }-
         0          0 -   210   if (pex != 0)
                          211   }-
         0          0 -   214   if (( erry == 0 && y == 0.0 ) || ( errx < 0 && xexp == 1 && ( x == 0.5 || ( erry == 1 && x == - 0.5 ) ) ))
         0                214     1: (T && T) || (_ && _ && (_ || (_ && _)))
         0                214     2: (T && F) || (T && T && (T || (_ && _)))
         0                214     3: (T && F) || (T && T && (F || (T && T)))
         0                214     4: (F && _) || (T && T && (T || (_ && _)))
         0                214     5: (F && _) || (T && T && (F || (T && T)))
                    0     214     6: (T && F) || (T && T && (F || (T && F)))
                    0     214     7: (T && F) || (T && T && (F || (F && _)))
                    0     214     8: (T && F) || (T && F && (_ || (_ && _)))
                    0     214     9: (T && F) || (F && _ && (_ || (_ && _)))
                    0     214     10: (F && _) || (T && T && (F || (T && F)))
                    0     214     11: (F && _) || (T && T && (F || (F && _)))
                    0     214     12: (F && _) || (T && F && (_ || (_ && _)))
                    0     214     13: (F && _) || (F && _ && (_ || (_ && _)))
                      -   214     MC/DC (cond 1): 1 - 10, 1 - 11, 1 - 12, 1 - 13
                      -   214     MC/DC (cond 2): 1 - 6, 1 - 7, 1 - 8, 1 - 9
                      -   214     MC/DC (cond 3): 2 - 9, 3 - 9, 4 - 13, 5 - 13
                      -   214     MC/DC (cond 4): 2 - 8, 3 - 8, 4 - 12, 5 - 12
                      -   214     MC/DC (cond 5): 2 - 6, 2 - 7, 4 - 10, 4 - 11
                      -   214     MC/DC (cond 6): 3 - 7, 5 - 11
                      -   214     MC/DC (cond 7): 3 - 6, 5 - 10
         0            -   215     return ( 1.0 )
                          215   }-
         0          0 -   216   else if (0 <= errx || 0 < erry)
         0                216     1: T || _
         0                216     2: F || T
                    0     216     3: F || F
                      -   216     MC/DC (cond 1): 1 - 3
                      -   216     MC/DC (cond 2): 2 - 3
         0          0 -   218     if (errx == 2)
         0            -   219       return ( x )
                          219     }-
         0          0 -   220     else if (erry == 2)
         0            -   221       return ( y )
                          221     }-
         0          0 -   222     else if (errx == 1)
         0          0 -   223       if (! ( ( * _Pmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) ))
         0          0 -   224         ternary-?: ( ( * _Pmsw ( & ( y ) ) ) & ( ( unsigned short ) 0x8000 ) )
         0            -   224         return ( ( ( * _Pmsw ( & ( y ) ) ) & ( ( unsigned short ) 0x8000 ) ) ? 0.0 : _Inf . _Double )
                          224       }-
         0          0 -   225       else if (! ( ( * _Pmsw ( & ( y ) ) ) & ( ( unsigned short ) 0x8000 ) ))
         0          0 -   227         ternary-?: erry == 0 && _Dint ( & yi , - 1 ) < 0
         0            -   228         return ( erry == 0 && _Dint ( & yi , - 1 ) < 0 ? - _Inf . _Double : _Inf . _Double )
                          228       }-
                          229       else
         0          0 -   231         ternary-?: erry == 0 && _Dint ( & yi , - 1 ) < 0
         0            -   231         return ( erry == 0 && _Dint ( & yi , - 1 ) < 0 ? - _Zero : 0.0 )
                          231       }-
                          231     }-
         0          0 -   232     else if (erry == 1)
         0          0 -   233       if (! ( ( * _Pmsw ( & ( y ) ) ) & ( ( unsigned short ) 0x8000 ) ))
         0          0 -   234         ternary-?: xexp <= 0
         0            -   234         return ( xexp <= 0 ? 0.0 : _Inf . _Double )
                          234       }-
                          235       else
         0          0 -   236         ternary-?: xexp <= 0
         0            -   236         return ( xexp <= 0 ? _Inf . _Double : 0.0 )
                          236       }-
                          236     }-
         0          0 -   238     else if (! ( ( * _Pmsw ( & ( y ) ) ) & ( ( unsigned short ) 0x8000 ) ))
         0          0 -   240       ternary-?: erry == 0 && _Dint ( & yi , - 1 ) < 0 && ( ( * _Pmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) )
         0            -   240       return ( erry == 0 && _Dint ( & yi , - 1 ) < 0 && ( ( * _Pmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) ) ? - _Zero : 0.0 )
                          240     }-
                          241     else
         0          0 -   245       ternary-?: erry == 0 && _Dint ( & yi , - 1 ) < 0 && ( ( * _Pmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) )
         0            -   245       return ( erry == 0 && _Dint ( & yi , - 1 ) < 0 && ( ( * _Pmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) ) ? - _Inf . _Double : _Inf . _Double )
                          246     }-
                          247   }-
         0          0 -   248   else if (( ( * _Pmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) ) && erry < 0)
         0                248     1: (T) && T
                    0     248     2: (T) && F
                    0     248     3: (F) && _
                      -   248     MC/DC (cond 1): 1 - 3
                      -   248     MC/DC (cond 2): 1 - 2
         0            -   251     return ( _Nan . _Double )
                          252   }-
         0          0 -   254   if (0.0 < x)
                          255   }-
                          256   else
                          260   }-
         0          0 -   266   if (x < rthalf)
                          270   }-
         0          0 -   284   if (z < - maxexp)
                          285   }-
         0          0 -   287   else if (- 15.0 <= z && z <= 15.0 && - 40.0 < y && y < 40.0)
         0                287     1: T && T && T && T
                    0     287     2: T && T && T && F
                    0     287     3: T && T && F && _
                    0     287     4: T && F && _ && _
                    0     287     5: F && _ && _ && _
                      -   287     MC/DC (cond 1): 1 - 5
                      -   287     MC/DC (cond 2): 1 - 4
                      -   287     MC/DC (cond 3): 1 - 3
                      -   287     MC/DC (cond 4): 1 - 2
         0          0 -   289     ternary-?: z < 0.0
                          301   }-
         0          0 -   302   else if (maxexp < z)
                          303   }-
                          304   else
         0          0 -   313     if (xpx [ 0 ] == 0.0)
                          314     }-
                          315     else
         0          0 -   319       for (;i < 4 && xpx [ i ] != 0.0;)
         0                319         1: T && T
                    0     319         2: T && F
                    0     319         3: F && _
                      -   319         MC/DC (cond 1): 1 - 3
                      -   319         MC/DC (cond 2): 1 - 2
                          327       }-
                          328     }-
         0          0 -   335     if (xpx [ 1 ] != 0.0)
                          342     }-
         0          0 -   346     if (xpz [ 0 ] != 0.0 && xpz [ 1 ] != 0.0)
         0                346       1: T && T
                    0     346       2: T && F
                    0     346       3: F && _
                      -   346       MC/DC (cond 1): 1 - 3
                      -   346       MC/DC (cond 2): 1 - 2
                          347     }-
                          354   }-
         0          0 -   356   if (errx < 0)
         0          0 -   358     if (pex != 0)
                          362     }-
                          366   }-
                          367   switch (errx)
         0            -   369   case 0:
         0            -   372     break
         0            -   374   case 1:
         0          0 -   376     if (z < 0.0)
                          380     }-
                          381     else
                          385     }-
                          386   }-
         0          0 -   388   if (neg)
                          389   }-
         0            -   390   return ( z )
                          391 }

***TER   0 % (  0/104) of FUNCTION _Pow()
         0 % (  0/122) statement
-----------------------------------------------------------------------------

         0            -   393 FUNCTION pow()
         0            -   396   return ( _Pow ( x , y , 0 ) )
                          397 }

***TER   0 % (  0/  2) of FUNCTION pow()
         0 % (  0/  2) statement
-----------------------------------------------------------------------------


***TER   0 % (  0/106) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\pow.c
         0 % (  0/124) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\pow_uv__uv_extreme.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         0            -   280 FUNCTION pow_uv__uv_extreme_nan()
         0          0 -   292   for (;ind < 5;)
         0          0 -   296     if (test_compare_double ( res , pow_uv__uv_extreme_nan_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1)
                          301     }-
                          301     else
                          303     }-
                          304   }-
         0          0 -   306   if (errors == 0 && passes == 5)
         0                306     1: T && T
                    0     306     2: T && F
                    0     306     3: F && _
                      -   306     MC/DC (cond 1): 1 - 3
                      -   306     MC/DC (cond 2): 1 - 2
                          308   }-
                          308   else
                          310   }-
         0            -   312   return errors
                          313 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_extreme_nan()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------

         0            -   329 FUNCTION pow_uv__uv_extreme_pos_infinity()
         0          0 -   341   for (;ind < 5;)
         0          0 -   345     if (test_compare_double ( res , pow_uv__uv_extreme_pos_infinity_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1)
                          350     }-
                          350     else
                          352     }-
                          353   }-
         0          0 -   355   if (errors == 0 && passes == 5)
         0                355     1: T && T
                    0     355     2: T && F
                    0     355     3: F && _
                      -   355     MC/DC (cond 1): 1 - 3
                      -   355     MC/DC (cond 2): 1 - 2
                          357   }-
                          357   else
                          359   }-
         0            -   361   return errors
                          362 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_extreme_pos_infinity()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------

         0            -   378 FUNCTION pow_uv__uv_extreme_neg_infinity()
         0          0 -   390   for (;ind < 5;)
         0          0 -   394     if (test_compare_double ( res , pow_uv__uv_extreme_neg_infinity_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1)
                          399     }-
                          399     else
                          401     }-
                          402   }-
         0          0 -   404   if (errors == 0 && passes == 5)
         0                404     1: T && T
                    0     404     2: T && F
                    0     404     3: F && _
                      -   404     MC/DC (cond 1): 1 - 3
                      -   404     MC/DC (cond 2): 1 - 2
                          406   }-
                          406   else
                          408   }-
         0            -   410   return errors
                          411 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_extreme_neg_infinity()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------

         0            -   428 FUNCTION pow_uv__uv_extreme_infinity()
         0          0 -   440   for (;ind < 6;)
         0          0 -   444     if (test_compare_double ( res , pow_uv__uv_extreme_infinity_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1)
                          449     }-
                          449     else
                          451     }-
                          452   }-
         0          0 -   454   if (errors == 0 && passes == 6)
         0                454     1: T && T
                    0     454     2: T && F
                    0     454     3: F && _
                      -   454     MC/DC (cond 1): 1 - 3
                      -   454     MC/DC (cond 2): 1 - 2
                          456   }-
                          456   else
                          458   }-
         0            -   460   return errors
                          461 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_extreme_infinity()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------

         0            -   481 FUNCTION pow_uv__uv_extreme_extreme_values()
         0          0 -   493   for (;ind < 9;)
         0          0 -   497     if (test_compare_double ( res , pow_uv__uv_extreme_extreme_values_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1)
                          502     }-
                          502     else
                          504     }-
                          505   }-
         0          0 -   507   if (errors == 0 && passes == 9)
         0                507     1: T && T
                    0     507     2: T && F
                    0     507     3: F && _
                      -   507     MC/DC (cond 1): 1 - 3
                      -   507     MC/DC (cond 2): 1 - 2
                          509   }-
                          509   else
                          511   }-
         0            -   513   return errors
                          514 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_extreme_extreme_values()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------

         0            -   781 FUNCTION pow_uv__uv_extreme_pow_denom_pos_pos()
         0          0 -   793   for (;ind < 256;)
         0          0 -   797     if (test_compare_double ( res , pow_uv__uv_extreme_pow_denom_pos_pos_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1)
                          802     }-
                          802     else
                          804     }-
                          805   }-
         0          0 -   807   if (errors == 0 && passes == 256)
         0                807     1: T && T
                    0     807     2: T && F
                    0     807     3: F && _
                      -   807     MC/DC (cond 1): 1 - 3
                      -   807     MC/DC (cond 2): 1 - 2
                          809   }-
                          809   else
                          811   }-
         0            -   813   return errors
                          814 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_extreme_pow_denom_pos_pos()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------

         0            -  1097 FUNCTION pow_uv__uv_extreme_pow_denom_pos_neg()
         0          0 -  1109   for (;ind < 272;)
         0          0 -  1113     if (test_compare_double ( res , pow_uv__uv_extreme_pow_denom_pos_neg_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1)
                         1118     }-
                         1118     else
                         1120     }-
                         1121   }-
         0          0 -  1123   if (errors == 0 && passes == 272)
         0               1123     1: T && T
                    0    1123     2: T && F
                    0    1123     3: F && _
                      -  1123     MC/DC (cond 1): 1 - 3
                      -  1123     MC/DC (cond 2): 1 - 2
                         1125   }-
                         1125   else
                         1127   }-
         0            -  1129   return errors
                         1130 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_extreme_pow_denom_pos_neg()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------

         0            -  1413 FUNCTION pow_uv__uv_extreme_pow_denom_neg_pos()
         0          0 -  1425   for (;ind < 272;)
         0          0 -  1429     if (test_compare_double ( res , pow_uv__uv_extreme_pow_denom_neg_pos_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1)
                         1434     }-
                         1434     else
                         1436     }-
                         1437   }-
         0          0 -  1439   if (errors == 0 && passes == 272)
         0               1439     1: T && T
                    0    1439     2: T && F
                    0    1439     3: F && _
                      -  1439     MC/DC (cond 1): 1 - 3
                      -  1439     MC/DC (cond 2): 1 - 2
                         1441   }-
                         1441   else
                         1443   }-
         0            -  1445   return errors
                         1446 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_extreme_pow_denom_neg_pos()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------

         0            -  1746 FUNCTION pow_uv__uv_extreme_pow_denom_neg_neg()
         0          0 -  1758   for (;ind < 289;)
         0          0 -  1762     if (test_compare_double ( res , pow_uv__uv_extreme_pow_denom_neg_neg_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1)
                         1767     }-
                         1767     else
                         1769     }-
                         1770   }-
         0          0 -  1772   if (errors == 0 && passes == 289)
         0               1772     1: T && T
                    0    1772     2: T && F
                    0    1772     3: F && _
                      -  1772     MC/DC (cond 1): 1 - 3
                      -  1772     MC/DC (cond 2): 1 - 2
                         1774   }-
                         1774   else
                         1776   }-
         0            -  1778   return errors
                         1779 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_extreme_pow_denom_neg_neg()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------

         0            -  1791 FUNCTION pow_uv__uv_extreme_zero()
         0          0 -  1803   for (;ind < 1;)
         0          0 -  1807     if (test_compare_double ( res , pow_uv__uv_extreme_zero_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1)
                         1812     }-
                         1812     else
                         1814     }-
                         1815   }-
         0          0 -  1817   if (errors == 0 && passes == 1)
         0               1817     1: T && T
                    0    1817     2: T && F
                    0    1817     3: F && _
                      -  1817     MC/DC (cond 1): 1 - 3
                      -  1817     MC/DC (cond 2): 1 - 2
                         1819   }-
                         1819   else
                         1821   }-
         0            -  1823   return errors
                         1824 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_extreme_zero()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------

         0            -  1885 FUNCTION pow_uv__uv_extreme_random_small_squares()
         0          0 -  1897   for (;ind < 50;)
         0          0 -  1901     if (test_compare_double ( res , pow_uv__uv_extreme_random_small_squares_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1)
                         1906     }-
                         1906     else
                         1908     }-
                         1909   }-
         0          0 -  1911   if (errors == 0 && passes == 50)
         0               1911     1: T && T
                    0    1911     2: T && F
                    0    1911     3: F && _
                      -  1911     MC/DC (cond 1): 1 - 3
                      -  1911     MC/DC (cond 2): 1 - 2
                         1913   }-
                         1913   else
                         1915   }-
         0            -  1917   return errors
                         1918 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_extreme_random_small_squares()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------

         0            -  1979 FUNCTION pow_uv__uv_extreme_random_small_neg_sqr()
         0          0 -  1991   for (;ind < 50;)
         0          0 -  1995     if (test_compare_double ( res , pow_uv__uv_extreme_random_small_neg_sqr_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1)
                         2000     }-
                         2000     else
                         2002     }-
                         2003   }-
         0          0 -  2005   if (errors == 0 && passes == 50)
         0               2005     1: T && T
                    0    2005     2: T && F
                    0    2005     3: F && _
                      -  2005     MC/DC (cond 1): 1 - 3
                      -  2005     MC/DC (cond 2): 1 - 2
                         2007   }-
                         2007   else
                         2009   }-
         0            -  2011   return errors
                         2012 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_extreme_random_small_neg_sqr()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------

         0            -  2073 FUNCTION pow_uv__uv_extreme_random_negative()
         0          0 -  2085   for (;ind < 50;)
         0          0 -  2089     if (test_compare_double ( res , pow_uv__uv_extreme_random_negative_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1)
                         2094     }-
                         2094     else
                         2096     }-
                         2097   }-
         0          0 -  2099   if (errors == 0 && passes == 50)
         0               2099     1: T && T
                    0    2099     2: T && F
                    0    2099     3: F && _
                      -  2099     MC/DC (cond 1): 1 - 3
                      -  2099     MC/DC (cond 2): 1 - 2
                         2101   }-
                         2101   else
                         2103   }-
         0            -  2105   return errors
                         2106 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_extreme_random_negative()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------

         0            -  2166 FUNCTION pow_uv__uv_extreme_big_powers()
         0          0 -  2178   for (;ind < 49;)
         0          0 -  2182     if (test_compare_double ( res , pow_uv__uv_extreme_big_powers_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1)
                         2187     }-
                         2187     else
                         2189     }-
                         2190   }-
         0          0 -  2192   if (errors == 0 && passes == 49)
         0               2192     1: T && T
                    0    2192     2: T && F
                    0    2192     3: F && _
                      -  2192     MC/DC (cond 1): 1 - 3
                      -  2192     MC/DC (cond 2): 1 - 2
                         2194   }-
                         2194   else
                         2196   }-
         0            -  2198   return errors
                         2199 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_extreme_big_powers()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------

         0            -  2259 FUNCTION pow_uv__uv_extreme_overflowing_powers()
         0          0 -  2271   for (;ind < 49;)
         0          0 -  2275     if (test_compare_double ( res , pow_uv__uv_extreme_overflowing_powers_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1)
                         2280     }-
                         2280     else
                         2282     }-
                         2283   }-
         0          0 -  2285   if (errors == 0 && passes == 49)
         0               2285     1: T && T
                    0    2285     2: T && F
                    0    2285     3: F && _
                      -  2285     MC/DC (cond 1): 1 - 3
                      -  2285     MC/DC (cond 2): 1 - 2
                         2287   }-
                         2287   else
                         2289   }-
         0            -  2291   return errors
                         2292 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_extreme_overflowing_powers()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------

         0            -  2367 FUNCTION pow_uv__uv_extreme_overflowing_powers_pos()
         0          0 -  2379   for (;ind < 64;)
         0          0 -  2383     if (test_compare_double ( res , pow_uv__uv_extreme_overflowing_powers_pos_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1)
                         2388     }-
                         2388     else
                         2390     }-
                         2391   }-
         0          0 -  2393   if (errors == 0 && passes == 64)
         0               2393     1: T && T
                    0    2393     2: T && F
                    0    2393     3: F && _
                      -  2393     MC/DC (cond 1): 1 - 3
                      -  2393     MC/DC (cond 2): 1 - 2
                         2395   }-
                         2395   else
                         2397   }-
         0            -  2399   return errors
                         2400 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_extreme_overflowing_powers_pos()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------

         0            -  2475 FUNCTION pow_uv__uv_extreme_overflowing_powers_neg()
         0          0 -  2487   for (;ind < 64;)
         0          0 -  2491     if (test_compare_double ( res , pow_uv__uv_extreme_overflowing_powers_neg_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1)
                         2496     }-
                         2496     else
                         2498     }-
                         2499   }-
         0          0 -  2501   if (errors == 0 && passes == 64)
         0               2501     1: T && T
                    0    2501     2: T && F
                    0    2501     3: F && _
                      -  2501     MC/DC (cond 1): 1 - 3
                      -  2501     MC/DC (cond 2): 1 - 2
                         2503   }-
                         2503   else
                         2505   }-
         0            -  2507   return errors
                         2508 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_extreme_overflowing_powers_neg()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------

         0            -  2583 FUNCTION pow_uv__uv_extreme_undeflowing_powers()
         0          0 -  2595   for (;ind < 64;)
         0          0 -  2599     if (test_compare_double ( res , pow_uv__uv_extreme_undeflowing_powers_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1)
                         2604     }-
                         2604     else
                         2606     }-
                         2607   }-
         0          0 -  2609   if (errors == 0 && passes == 64)
         0               2609     1: T && T
                    0    2609     2: T && F
                    0    2609     3: F && _
                      -  2609     MC/DC (cond 1): 1 - 3
                      -  2609     MC/DC (cond 2): 1 - 2
                         2611   }-
                         2611   else
                         2613   }-
         0            -  2615   return errors
                         2616 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_extreme_undeflowing_powers()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------

         0            -  2691 FUNCTION pow_uv__uv_extreme_undeflowing_powers2()
         0          0 -  2703   for (;ind < 64;)
         0          0 -  2707     if (test_compare_double ( res , pow_uv__uv_extreme_undeflowing_powers2_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1)
                         2712     }-
                         2712     else
                         2714     }-
                         2715   }-
         0          0 -  2717   if (errors == 0 && passes == 64)
         0               2717     1: T && T
                    0    2717     2: T && F
                    0    2717     3: F && _
                      -  2717     MC/DC (cond 1): 1 - 3
                      -  2717     MC/DC (cond 2): 1 - 2
                         2719   }-
                         2719   else
                         2721   }-
         0            -  2723   return errors
                         2724 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_extreme_undeflowing_powers2()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------

         0            -  2799 FUNCTION pow_uv__uv_extreme_undeflowing_powers3()
         0          0 -  2811   for (;ind < 64;)
         0          0 -  2815     if (test_compare_double ( res , pow_uv__uv_extreme_undeflowing_powers3_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1)
                         2820     }-
                         2820     else
                         2822     }-
                         2823   }-
         0          0 -  2825   if (errors == 0 && passes == 64)
         0               2825     1: T && T
                    0    2825     2: T && F
                    0    2825     3: F && _
                      -  2825     MC/DC (cond 1): 1 - 3
                      -  2825     MC/DC (cond 2): 1 - 2
                         2827   }-
                         2827   else
                         2829   }-
         0            -  2831   return errors
                         2832 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_extreme_undeflowing_powers3()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------

         0            -  2907 FUNCTION pow_uv__uv_extreme_undeflowing_powers4()
         0          0 -  2919   for (;ind < 64;)
         0          0 -  2923     if (test_compare_double ( res , pow_uv__uv_extreme_undeflowing_powers4_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1)
                         2928     }-
                         2928     else
                         2930     }-
                         2931   }-
         0          0 -  2933   if (errors == 0 && passes == 64)
         0               2933     1: T && T
                    0    2933     2: T && F
                    0    2933     3: F && _
                      -  2933     MC/DC (cond 1): 1 - 3
                      -  2933     MC/DC (cond 2): 1 - 2
                         2935   }-
                         2935   else
                         2937   }-
         0            -  2939   return errors
                         2940 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_extreme_undeflowing_powers4()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------

         0            -  3005 FUNCTION pow_uv__uv_extreme_roots_of_minus_two()
         0          0 -  3017   for (;ind < 54;)
         0          0 -  3021     if (test_compare_double ( res , pow_uv__uv_extreme_roots_of_minus_two_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1)
                         3026     }-
                         3026     else
                         3028     }-
                         3029   }-
         0          0 -  3031   if (errors == 0 && passes == 54)
         0               3031     1: T && T
                    0    3031     2: T && F
                    0    3031     3: F && _
                      -  3031     MC/DC (cond 1): 1 - 3
                      -  3031     MC/DC (cond 2): 1 - 2
                         3033   }-
                         3033   else
                         3035   }-
         0            -  3037   return errors
                         3038 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_extreme_roots_of_minus_two()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------

         0            -  3103 FUNCTION pow_uv__uv_extreme_roots_to_minus_ten()
         0          0 -  3115   for (;ind < 54;)
         0          0 -  3119     if (test_compare_double ( res , pow_uv__uv_extreme_roots_to_minus_ten_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1)
                         3124     }-
                         3124     else
                         3126     }-
                         3127   }-
         0          0 -  3129   if (errors == 0 && passes == 54)
         0               3129     1: T && T
                    0    3129     2: T && F
                    0    3129     3: F && _
                      -  3129     MC/DC (cond 1): 1 - 3
                      -  3129     MC/DC (cond 2): 1 - 2
                         3131   }-
                         3131   else
                         3133   }-
         0            -  3135   return errors
                         3136 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_extreme_roots_to_minus_ten()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------

         0            -  3167 FUNCTION pow_uv__uv_extreme_big_powers2()
         0          0 -  3179   for (;ind < 20;)
         0          0 -  3183     if (test_compare_double ( res , pow_uv__uv_extreme_big_powers2_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1)
                         3188     }-
                         3188     else
                         3190     }-
                         3191   }-
         0          0 -  3193   if (errors == 0 && passes == 20)
         0               3193     1: T && T
                    0    3193     2: T && F
                    0    3193     3: F && _
                      -  3193     MC/DC (cond 1): 1 - 3
                      -  3193     MC/DC (cond 2): 1 - 2
                         3195   }-
                         3195   else
                         3197   }-
         0            -  3199   return errors
                         3200 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_extreme_big_powers2()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------

         0            -  3229 FUNCTION pow_uv__uv_extreme_coverage_dw()
         0          0 -  3241   for (;ind < 18;)
         0          0 -  3245     if (test_compare_double ( res , pow_uv__uv_extreme_coverage_dw_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1)
                         3250     }-
                         3250     else
                         3252     }-
                         3253   }-
         0          0 -  3255   if (errors == 0 && passes == 18)
         0               3255     1: T && T
                    0    3255     2: T && F
                    0    3255     3: F && _
                      -  3255     MC/DC (cond 1): 1 - 3
                      -  3255     MC/DC (cond 2): 1 - 2
                         3257   }-
                         3257   else
                         3259   }-
         0            -  3261   return errors
                         3262 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_extreme_coverage_dw()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------

         0            -  3267 FUNCTION pow_uv__uv_extreme_main_test()
         0          0 -  3296   if (errors == 0)
                         3298   }-
                         3298   else
                         3300   }-
         0            -  3354   return errors
                         3355 }

***TER   0 % (  0/  4) of FUNCTION pow_uv__uv_extreme_main_test()
         0 % (  0/ 32) statement
-----------------------------------------------------------------------------


***TER   0 % (  0/254) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\pow_uv__uv_extreme.c
         0 % (  0/532) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\pow_uv__uv_normal.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         0            -   179 FUNCTION pow_uv__uv_normal_normal_values()
         0          0 -   191   for (;ind < 3;)
         0          0 -   195     if (test_compare_double ( res , pow_uv__uv_normal_normal_values_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_normal , & max_dif_above_pow_uv__uv_normal ) != 1)
                          200     }-
                          200     else
                          202     }-
                          203   }-
         0          0 -   205   if (errors == 0 && passes == 3)
         0                205     1: T && T
                    0     205     2: T && F
                    0     205     3: F && _
                      -   205     MC/DC (cond 1): 1 - 3
                      -   205     MC/DC (cond 2): 1 - 2
                          207   }-
                          207   else
                          209   }-
         0            -   211   return errors
                          212 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_normal_normal_values()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------

         0            -   272 FUNCTION pow_uv__uv_normal_pow_normal_range()
         0          0 -   284   for (;ind < 49;)
         0          0 -   288     if (test_compare_double ( res , pow_uv__uv_normal_pow_normal_range_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_normal , & max_dif_above_pow_uv__uv_normal ) != 1)
                          293     }-
                          293     else
                          295     }-
                          296   }-
         0          0 -   298   if (errors == 0 && passes == 49)
         0                298     1: T && T
                    0     298     2: T && F
                    0     298     3: F && _
                      -   298     MC/DC (cond 1): 1 - 3
                      -   298     MC/DC (cond 2): 1 - 2
                          300   }-
                          300   else
                          302   }-
         0            -   304   return errors
                          305 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_normal_pow_normal_range()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------

         0            -   366 FUNCTION pow_uv__uv_normal_pow_normal_range_rnd()
         0          0 -   378   for (;ind < 50;)
         0          0 -   382     if (test_compare_double ( res , pow_uv__uv_normal_pow_normal_range_rnd_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_normal , & max_dif_above_pow_uv__uv_normal ) != 1)
                          387     }-
                          387     else
                          389     }-
                          390   }-
         0          0 -   392   if (errors == 0 && passes == 50)
         0                392     1: T && T
                    0     392     2: T && F
                    0     392     3: F && _
                      -   392     MC/DC (cond 1): 1 - 3
                      -   392     MC/DC (cond 2): 1 - 2
                          394   }-
                          394   else
                          396   }-
         0            -   398   return errors
                          399 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_normal_pow_normal_range_rnd()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------

         0            -   460 FUNCTION pow_uv__uv_normal_random_squares()
         0          0 -   472   for (;ind < 50;)
         0          0 -   476     if (test_compare_double ( res , pow_uv__uv_normal_random_squares_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_normal , & max_dif_above_pow_uv__uv_normal ) != 1)
                          481     }-
                          481     else
                          483     }-
                          484   }-
         0          0 -   486   if (errors == 0 && passes == 50)
         0                486     1: T && T
                    0     486     2: T && F
                    0     486     3: F && _
                      -   486     MC/DC (cond 1): 1 - 3
                      -   486     MC/DC (cond 2): 1 - 2
                          488   }-
                          488   else
                          490   }-
         0            -   492   return errors
                          493 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_normal_random_squares()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------

         0            -   554 FUNCTION pow_uv__uv_normal_negative_squares()
         0          0 -   566   for (;ind < 50;)
         0          0 -   570     if (test_compare_double ( res , pow_uv__uv_normal_negative_squares_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_normal , & max_dif_above_pow_uv__uv_normal ) != 1)
                          575     }-
                          575     else
                          577     }-
                          578   }-
         0          0 -   580   if (errors == 0 && passes == 50)
         0                580     1: T && T
                    0     580     2: T && F
                    0     580     3: F && _
                      -   580     MC/DC (cond 1): 1 - 3
                      -   580     MC/DC (cond 2): 1 - 2
                          582   }-
                          582   else
                          584   }-
         0            -   586   return errors
                          587 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_normal_negative_squares()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------

         0            -   662 FUNCTION pow_uv__uv_normal_negative_pow()
         0          0 -   674   for (;ind < 64;)
         0          0 -   678     if (test_compare_double ( res , pow_uv__uv_normal_negative_pow_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_normal , & max_dif_above_pow_uv__uv_normal ) != 1)
                          683     }-
                          683     else
                          685     }-
                          686   }-
         0          0 -   688   if (errors == 0 && passes == 64)
         0                688     1: T && T
                    0     688     2: T && F
                    0     688     3: F && _
                      -   688     MC/DC (cond 1): 1 - 3
                      -   688     MC/DC (cond 2): 1 - 2
                          690   }-
                          690   else
                          692   }-
         0            -   694   return errors
                          695 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_normal_negative_pow()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------

         0            -   756 FUNCTION pow_uv__uv_normal_random_squareroots()
         0          0 -   768   for (;ind < 50;)
         0          0 -   772     if (test_compare_double ( res , pow_uv__uv_normal_random_squareroots_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_normal , & max_dif_above_pow_uv__uv_normal ) != 1)
                          777     }-
                          777     else
                          779     }-
                          780   }-
         0          0 -   782   if (errors == 0 && passes == 50)
         0                782     1: T && T
                    0     782     2: T && F
                    0     782     3: F && _
                      -   782     MC/DC (cond 1): 1 - 3
                      -   782     MC/DC (cond 2): 1 - 2
                          784   }-
                          784   else
                          786   }-
         0            -   788   return errors
                          789 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_normal_random_squareroots()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------

         0            -   850 FUNCTION pow_uv__uv_normal_random_exponent()
         0          0 -   862   for (;ind < 50;)
         0          0 -   866     if (test_compare_double ( res , pow_uv__uv_normal_random_exponent_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_normal , & max_dif_above_pow_uv__uv_normal ) != 1)
                          871     }-
                          871     else
                          873     }-
                          874   }-
         0          0 -   876   if (errors == 0 && passes == 50)
         0                876     1: T && T
                    0     876     2: T && F
                    0     876     3: F && _
                      -   876     MC/DC (cond 1): 1 - 3
                      -   876     MC/DC (cond 2): 1 - 2
                          878   }-
                          878   else
                          880   }-
         0            -   882   return errors
                          883 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_normal_random_exponent()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------

         0            -   944 FUNCTION pow_uv__uv_normal_random_numbers()
         0          0 -   956   for (;ind < 50;)
         0          0 -   960     if (test_compare_double ( res , pow_uv__uv_normal_random_numbers_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_normal , & max_dif_above_pow_uv__uv_normal ) != 1)
                          965     }-
                          965     else
                          967     }-
                          968   }-
         0          0 -   970   if (errors == 0 && passes == 50)
         0                970     1: T && T
                    0     970     2: T && F
                    0     970     3: F && _
                      -   970     MC/DC (cond 1): 1 - 3
                      -   970     MC/DC (cond 2): 1 - 2
                          972   }-
                          972   else
                          974   }-
         0            -   976   return errors
                          977 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_normal_random_numbers()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------

         0            -  1002 FUNCTION pow_uv__uv_normal_linear_squares()
         0          0 -  1014   for (;ind < 14;)
         0          0 -  1018     if (test_compare_double ( res , pow_uv__uv_normal_linear_squares_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_normal , & max_dif_above_pow_uv__uv_normal ) != 1)
                         1023     }-
                         1023     else
                         1025     }-
                         1026   }-
         0          0 -  1028   if (errors == 0 && passes == 14)
         0               1028     1: T && T
                    0    1028     2: T && F
                    0    1028     3: F && _
                      -  1028     MC/DC (cond 1): 1 - 3
                      -  1028     MC/DC (cond 2): 1 - 2
                         1030   }-
                         1030   else
                         1032   }-
         0            -  1034   return errors
                         1035 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_normal_linear_squares()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------

         0            -  1095 FUNCTION pow_uv__uv_normal_linear_powers()
         0          0 -  1107   for (;ind < 49;)
         0          0 -  1111     if (test_compare_double ( res , pow_uv__uv_normal_linear_powers_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_normal , & max_dif_above_pow_uv__uv_normal ) != 1)
                         1116     }-
                         1116     else
                         1118     }-
                         1119   }-
         0          0 -  1121   if (errors == 0 && passes == 49)
         0               1121     1: T && T
                    0    1121     2: T && F
                    0    1121     3: F && _
                      -  1121     MC/DC (cond 1): 1 - 3
                      -  1121     MC/DC (cond 2): 1 - 2
                         1123   }-
                         1123   else
                         1125   }-
         0            -  1127   return errors
                         1128 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_normal_linear_powers()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------

         0            -  1193 FUNCTION pow_uv__uv_normal_roots_of_two()
         0          0 -  1205   for (;ind < 54;)
         0          0 -  1209     if (test_compare_double ( res , pow_uv__uv_normal_roots_of_two_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_normal , & max_dif_above_pow_uv__uv_normal ) != 1)
                         1214     }-
                         1214     else
                         1216     }-
                         1217   }-
         0          0 -  1219   if (errors == 0 && passes == 54)
         0               1219     1: T && T
                    0    1219     2: T && F
                    0    1219     3: F && _
                      -  1219     MC/DC (cond 1): 1 - 3
                      -  1219     MC/DC (cond 2): 1 - 2
                         1221   }-
                         1221   else
                         1223   }-
         0            -  1225   return errors
                         1226 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_normal_roots_of_two()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------

         0            -  1290 FUNCTION pow_uv__uv_normal_roots_to_ten()
         0          0 -  1302   for (;ind < 53;)
         0          0 -  1306     if (test_compare_double ( res , pow_uv__uv_normal_roots_to_ten_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_normal , & max_dif_above_pow_uv__uv_normal ) != 1)
                         1311     }-
                         1311     else
                         1313     }-
                         1314   }-
         0          0 -  1316   if (errors == 0 && passes == 53)
         0               1316     1: T && T
                    0    1316     2: T && F
                    0    1316     3: F && _
                      -  1316     MC/DC (cond 1): 1 - 3
                      -  1316     MC/DC (cond 2): 1 - 2
                         1318   }-
                         1318   else
                         1320   }-
         0            -  1322   return errors
                         1323 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_normal_roots_to_ten()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------

         0            -  1355 FUNCTION pow_uv__uv_normal_two_powers()
         0          0 -  1367   for (;ind < 21;)
         0          0 -  1371     if (test_compare_double ( res , pow_uv__uv_normal_two_powers_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_normal , & max_dif_above_pow_uv__uv_normal ) != 1)
                         1376     }-
                         1376     else
                         1378     }-
                         1379   }-
         0          0 -  1381   if (errors == 0 && passes == 21)
         0               1381     1: T && T
                    0    1381     2: T && F
                    0    1381     3: F && _
                      -  1381     MC/DC (cond 1): 1 - 3
                      -  1381     MC/DC (cond 2): 1 - 2
                         1383   }-
                         1383   else
                         1385   }-
         0            -  1387   return errors
                         1388 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_normal_two_powers()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------

         0            -  1393 FUNCTION pow_uv__uv_normal_main_test()
         0          0 -  1411   if (errors == 0)
                         1413   }-
                         1413   else
                         1415   }-
         0            -  1469   return errors
                         1470 }

***TER   0 % (  0/  4) of FUNCTION pow_uv__uv_normal_main_test()
         0 % (  0/ 21) statement
-----------------------------------------------------------------------------


***TER   0 % (  0/144) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\pow_uv__uv_normal.c
         0 % (  0/301) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\pow_uv__uv_terms.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         0            -   138 FUNCTION pow_uv__uv_terms_pow_deterministic()
         0          0 -   152   for (;ind < 49;)
         0          0 -   156     if (res != pow_uv__uv_terms_pow_deterministic_io_table [ ind ] . pow_out)
         0          0 -   158       if (( pow ( x , y ) == pow ( x , y ) ) >= - 2147483648.0 && ( pow ( x , y ) == pow ( x , y ) ) <= 2147483647.0)
         0                158         1: T && T
                    0     158         2: T && F
                    0     158         3: F && _
                      -   158         MC/DC (cond 1): 1 - 3
                      -   158         MC/DC (cond 2): 1 - 2
         0          0 -   163         if (( res1 != pow_uv__uv_terms_pow_deterministic_io_table [ ind ] . pow_out ) && ( res2 != pow_uv__uv_terms_pow_deterministic_io_table [ ind ] . pow_out ))
         0                163           1: (T) && (T)
                    0     163           2: (T) && (F)
                    0     163           3: (F) && (_)
                      -   163           MC/DC (cond 1): 1 - 3
                      -   163           MC/DC (cond 2): 1 - 2
                          168         }-
                          168         else
                          170         }-
                          171       }-
                          171       else
                          173       }-
                          174     }-
                          174     else
                          176     }-
                          177   }-
         0          0 -   179   if (errors == 0 && passes == 49)
         0                179     1: T && T
                    0     179     2: T && F
                    0     179     3: F && _
                      -   179     MC/DC (cond 1): 1 - 3
                      -   179     MC/DC (cond 2): 1 - 2
                          181   }-
                          181   else
                          183   }-
         0            -   185   return errors
                          186 }

***TER   0 % (  0/ 18) of FUNCTION pow_uv__uv_terms_pow_deterministic()
         0 % (  0/ 28) statement
-----------------------------------------------------------------------------

         0            -   247 FUNCTION pow_uv__uv_terms_pow_combine()
         0          0 -   259   for (;ind < 49;)
         0          0 -   263     if (test_compare_double ( res , pow_uv__uv_terms_pow_combine_io_table [ ind ] . pow_out , 128 , 1.0E-11 , 1.0E-11 , 10.0 , & max_dif_below_pow_uv__uv_terms , & max_dif_above_pow_uv__uv_terms ) != 1)
                          268     }-
                          268     else
                          270     }-
                          271   }-
         0          0 -   273   if (errors == 0 && passes == 49)
         0                273     1: T && T
                    0     273     2: T && F
                    0     273     3: F && _
                      -   273     MC/DC (cond 1): 1 - 3
                      -   273     MC/DC (cond 2): 1 - 2
                          275   }-
                          275   else
                          277   }-
         0            -   279   return errors
                          280 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_terms_pow_combine()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------

         0            -   302 FUNCTION pow_uv__uv_terms_sqrt_pow()
         0          0 -   313   for (;ind < 10;)
         0          0 -   316     if (test_compare_double ( res , pow_uv__uv_terms_sqrt_pow_io_table [ ind ] . pow_out , 128 , 1.0E-11 , 1.0E-11 , 10.0 , & max_dif_below_pow_uv__uv_terms , & max_dif_above_pow_uv__uv_terms ) != 1)
                          321     }-
                          321     else
                          323     }-
                          324   }-
         0          0 -   326   if (errors == 0 && passes == 10)
         0                326     1: T && T
                    0     326     2: T && F
                    0     326     3: F && _
                      -   326     MC/DC (cond 1): 1 - 3
                      -   326     MC/DC (cond 2): 1 - 2
                          328   }-
                          328   else
                          330   }-
         0            -   332   return errors
                          333 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_terms_sqrt_pow()
         0 % (  0/ 18) statement
-----------------------------------------------------------------------------

         0            -   355 FUNCTION pow_uv__uv_terms_pow_sqrt()
         0          0 -   366   for (;ind < 10;)
         0          0 -   369     if (test_compare_double ( res , pow_uv__uv_terms_pow_sqrt_io_table [ ind ] . pow_out , 128 , 1.0E-11 , 1.0E-11 , 10.0 , & max_dif_below_pow_uv__uv_terms , & max_dif_above_pow_uv__uv_terms ) != 1)
                          374     }-
                          374     else
                          376     }-
                          377   }-
         0          0 -   379   if (errors == 0 && passes == 10)
         0                379     1: T && T
                    0     379     2: T && F
                    0     379     3: F && _
                      -   379     MC/DC (cond 1): 1 - 3
                      -   379     MC/DC (cond 2): 1 - 2
                          381   }-
                          381   else
                          383   }-
         0            -   385   return errors
                          386 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_terms_pow_sqrt()
         0 % (  0/ 18) statement
-----------------------------------------------------------------------------

         0            -   391 FUNCTION pow_uv__uv_terms_main_test()
         0          0 -   399   if (errors == 0)
                          401   }-
                          401   else
                          403   }-
         0            -   457   return errors
                          458 }

***TER   0 % (  0/  4) of FUNCTION pow_uv__uv_terms_main_test()
         0 % (  0/ 11) statement
-----------------------------------------------------------------------------


***TER   0 % (  0/ 52) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\pow_uv__uv_terms.c
         0 % (  0/ 95) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\pow_uv__uv_trivial.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         0            -   116 FUNCTION pow_uv__uv_trivial_zero_one()
         0          0 -   128   for (;ind < 2;)
         0          0 -   132     if (test_compare_double ( res , pow_uv__uv_trivial_zero_one_io_table [ ind ] . pow_out , 128 , 1.0E-13 , 1.0E-13 , 10.0 , & max_dif_below_pow_uv__uv_trivial , & max_dif_above_pow_uv__uv_trivial ) != 1)
                          137     }-
                          137     else
                          139     }-
                          140   }-
         0          0 -   142   if (errors == 0 && passes == 2)
         0                142     1: T && T
                    0     142     2: T && F
                    0     142     3: F && _
                      -   142     MC/DC (cond 1): 1 - 3
                      -   142     MC/DC (cond 2): 1 - 2
                          144   }-
                          144   else
                          146   }-
         0            -   148   return errors
                          149 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_trivial_zero_one()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------

         0            -   181 FUNCTION pow_uv__uv_trivial_zero()
         0          0 -   193   for (;ind < 20;)
         0          0 -   197     if (test_compare_double ( res , pow_uv__uv_trivial_zero_io_table [ ind ] . pow_out , 128 , 1.0E-13 , 1.0E-13 , 10.0 , & max_dif_below_pow_uv__uv_trivial , & max_dif_above_pow_uv__uv_trivial ) != 1)
                          202     }-
                          202     else
                          204     }-
                          205   }-
         0          0 -   207   if (errors == 0 && passes == 20)
         0                207     1: T && T
                    0     207     2: T && F
                    0     207     3: F && _
                      -   207     MC/DC (cond 1): 1 - 3
                      -   207     MC/DC (cond 2): 1 - 2
                          209   }-
                          209   else
                          211   }-
         0            -   213   return errors
                          214 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_trivial_zero()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------

         0            -   227 FUNCTION pow_uv__uv_trivial_negative_zero()
         0          0 -   239   for (;ind < 2;)
         0          0 -   243     if (test_compare_double ( res , pow_uv__uv_trivial_negative_zero_io_table [ ind ] . pow_out , 128 , 1.0E-13 , 1.0E-13 , 10.0 , & max_dif_below_pow_uv__uv_trivial , & max_dif_above_pow_uv__uv_trivial ) != 1)
                          248     }-
                          248     else
                          250     }-
                          251   }-
         0          0 -   253   if (errors == 0 && passes == 2)
         0                253     1: T && T
                    0     253     2: T && F
                    0     253     3: F && _
                      -   253     MC/DC (cond 1): 1 - 3
                      -   253     MC/DC (cond 2): 1 - 2
                          255   }-
                          255   else
                          257   }-
         0            -   259   return errors
                          260 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_trivial_negative_zero()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------

         0            -   275 FUNCTION pow_uv__uv_trivial_four()
         0          0 -   287   for (;ind < 4;)
         0          0 -   291     if (test_compare_double ( res , pow_uv__uv_trivial_four_io_table [ ind ] . pow_out , 128 , 1.0E-13 , 1.0E-13 , 10.0 , & max_dif_below_pow_uv__uv_trivial , & max_dif_above_pow_uv__uv_trivial ) != 1)
                          296     }-
                          296     else
                          298     }-
                          299   }-
         0          0 -   301   if (errors == 0 && passes == 4)
         0                301     1: T && T
                    0     301     2: T && F
                    0     301     3: F && _
                      -   301     MC/DC (cond 1): 1 - 3
                      -   301     MC/DC (cond 2): 1 - 2
                          303   }-
                          303   else
                          305   }-
         0            -   307   return errors
                          308 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_trivial_four()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------

         0            -   322 FUNCTION pow_uv__uv_trivial_nine()
         0          0 -   334   for (;ind < 3;)
         0          0 -   338     if (test_compare_double ( res , pow_uv__uv_trivial_nine_io_table [ ind ] . pow_out , 128 , 1.0E-13 , 1.0E-13 , 10.0 , & max_dif_below_pow_uv__uv_trivial , & max_dif_above_pow_uv__uv_trivial ) != 1)
                          343     }-
                          343     else
                          345     }-
                          346   }-
         0          0 -   348   if (errors == 0 && passes == 3)
         0                348     1: T && T
                    0     348     2: T && F
                    0     348     3: F && _
                      -   348     MC/DC (cond 1): 1 - 3
                      -   348     MC/DC (cond 2): 1 - 2
                          350   }-
                          350   else
                          352   }-
         0            -   354   return errors
                          355 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_trivial_nine()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------

         0            -   367 FUNCTION pow_uv__uv_trivial_hundred()
         0          0 -   379   for (;ind < 1;)
         0          0 -   383     if (test_compare_double ( res , pow_uv__uv_trivial_hundred_io_table [ ind ] . pow_out , 128 , 1.0E-13 , 1.0E-13 , 10.0 , & max_dif_below_pow_uv__uv_trivial , & max_dif_above_pow_uv__uv_trivial ) != 1)
                          388     }-
                          388     else
                          390     }-
                          391   }-
         0          0 -   393   if (errors == 0 && passes == 1)
         0                393     1: T && T
                    0     393     2: T && F
                    0     393     3: F && _
                      -   393     MC/DC (cond 1): 1 - 3
                      -   393     MC/DC (cond 2): 1 - 2
                          395   }-
                          395   else
                          397   }-
         0            -   399   return errors
                          400 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_trivial_hundred()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------

         0            -   414 FUNCTION pow_uv__uv_trivial_special_values()
         0          0 -   426   for (;ind < 3;)
         0          0 -   430     if (test_compare_double ( res , pow_uv__uv_trivial_special_values_io_table [ ind ] . pow_out , 128 , 1.0E-13 , 1.0E-13 , 10.0 , & max_dif_below_pow_uv__uv_trivial , & max_dif_above_pow_uv__uv_trivial ) != 1)
                          435     }-
                          435     else
                          437     }-
                          438   }-
         0          0 -   440   if (errors == 0 && passes == 3)
         0                440     1: T && T
                    0     440     2: T && F
                    0     440     3: F && _
                      -   440     MC/DC (cond 1): 1 - 3
                      -   440     MC/DC (cond 2): 1 - 2
                          442   }-
                          442   else
                          444   }-
         0            -   446   return errors
                          447 }

***TER   0 % (  0/ 10) of FUNCTION pow_uv__uv_trivial_special_values()
         0 % (  0/ 20) statement
-----------------------------------------------------------------------------

         0            -   452 FUNCTION pow_uv__uv_trivial_main_test()
         0          0 -   463   if (errors == 0)
                          465   }-
                          465   else
                          467   }-
         0            -   521   return errors
                          522 }

***TER   0 % (  0/  4) of FUNCTION pow_uv__uv_trivial_main_test()
         0 % (  0/ 14) statement
-----------------------------------------------------------------------------


***TER   0 % (  0/ 74) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\pow_uv__uv_trivial.c
         0 % (  0/154) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\powf.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

      1961                 12 FUNCTION _FPow()
         0       1961 -    14   if (pex != 0)
                           15   }+
                           16   else
                           17   }+
        33       1928      26   if (y == 1.0F)
        33                 27     return ( x )
                           27   }+
         0       1928 -    43   if (pex != 0)
                           44   }+
        42       1886      47   if (( erry == 0 && y == 0.0F ) || ( errx < 0 && xexp == 1 && ( x == 0.5F || ( erry == 1 && x == - 0.5F ) ) ))
        30                 47     1: (T && T) || (_ && _ && (_ || (_ && _)))
         5                 47     2: (T && F) || (T && T && (T || (_ && _)))
         0                 47     3: (T && F) || (T && T && (F || (T && T)))
         3                 47     4: (F && _) || (T && T && (T || (_ && _)))
         4                 47     5: (F && _) || (T && T && (F || (T && T)))
                    0      47     6: (T && F) || (T && T && (F || (T && F)))
                   24      47     7: (T && F) || (T && T && (F || (F && _)))
                  487      47     8: (T && F) || (T && F && (_ || (_ && _)))
                   18      47     9: (T && F) || (F && _ && (_ || (_ && _)))
                    0      47     10: (F && _) || (T && T && (F || (T && F)))
                  105      47     11: (F && _) || (T && T && (F || (F && _)))
                 1170      47     12: (F && _) || (T && F && (_ || (_ && _)))
                   82      47     13: (F && _) || (F && _ && (_ || (_ && _)))
                           47     MC/DC (cond 1): 1 + 11, 1 - 10, 1 + 12, 1 + 13
                           47     MC/DC (cond 2): 1 + 7, 1 - 6, 1 + 8, 1 + 9
                           47     MC/DC (cond 3): 2 + 9, 3 - 9, 4 + 13, 5 + 13
                           47     MC/DC (cond 4): 2 + 8, 3 - 8, 4 + 12, 5 + 12
                           47     MC/DC (cond 5): 2 + 7, 2 - 6, 4 - 10, 4 + 11
                           47     MC/DC (cond 6): 5 + 11, 3 - 7
                      -    47     MC/DC (cond 7): 3 - 6, 5 - 10
        42                 48     return ( 1.0F )
                           48   }+
       112       1774      49   else if (0 <= errx || 0 < erry)
       100                 49     1: T || _
        12                 49     2: F || T
                 1774      49     3: F || F
                           49     MC/DC (cond 1): 1 + 3
                           49     MC/DC (cond 2): 2 + 3
         6        106      51     if (errx == 2)
         6                 52       return ( x )
                           52     }+
         9         97      53     else if (erry == 2)
         9                 54       return ( y )
                           54     }+
         8         89      55     else if (errx == 1)
         4          4      56       if (! ( ( * _FPmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) ))
         2          2      57         ternary-?: ( ( * _FPmsw ( & ( y ) ) ) & ( ( unsigned short ) 0x8000 ) )
         4                 57         return ( ( ( * _FPmsw ( & ( y ) ) ) & ( ( unsigned short ) 0x8000 ) ) ? 0.0F : _FInf . _Float )
                           57       }+
         2          2      58       else if (! ( ( * _FPmsw ( & ( y ) ) ) & ( ( unsigned short ) 0x8000 ) ))
         0          2 -    60         ternary-?: erry == 0 && _FDint ( & yi , - 1 ) < 0
         2                 61         return ( erry == 0 && _FDint ( & yi , - 1 ) < 0 ? - _FInf . _Float : _FInf . _Float )
                           61       }+
                           62       else
         0          2 -    64         ternary-?: erry == 0 && _FDint ( & yi , - 1 ) < 0
         2                 64         return ( erry == 0 && _FDint ( & yi , - 1 ) < 0 ? - _FZero : 0.0F )
                           64       }-
                           64     }+
        14         75      65     else if (erry == 1)
         7          7      66       if (! ( ( * _FPmsw ( & ( y ) ) ) & ( ( unsigned short ) 0x8000 ) ))
         7          0 -    67         ternary-?: xexp <= 0
         7                 67         return ( xexp <= 0 ? 0.0F : _FInf . _Float )
                           67       }+
                           68       else
         7          0 -    69         ternary-?: xexp <= 0
         7                 69         return ( xexp <= 0 ? _FInf . _Float : 0.0F )
                           69       }-
                           69     }+
        64         11      71     else if (! ( ( * _FPmsw ( & ( y ) ) ) & ( ( unsigned short ) 0x8000 ) ))
         1         63      73       ternary-?: erry == 0 && _FDint ( & yi , - 1 ) < 0 && ( ( * _FPmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) )
        64                 73       return ( erry == 0 && _FDint ( & yi , - 1 ) < 0 && ( ( * _FPmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) ) ? - _FZero : 0.0F )
                           73     }+
                           74     else
         0         11 -    78       ternary-?: erry == 0 && _FDint ( & yi , - 1 ) < 0 && ( ( * _FPmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) )
        11                 78       return ( erry == 0 && _FDint ( & yi , - 1 ) < 0 && ( ( * _FPmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) ) ? - _FInf . _Float : _FInf . _Float )
                           79     }-
                           80   }+
       394       1380      81   else if (( ( * _FPmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) ) && erry < 0)
       394                 81     1: (T) && T
                  137      81     2: (T) && F
                 1243      81     3: (F) && _
                           81     MC/DC (cond 1): 1 + 3
                           81     MC/DC (cond 2): 1 + 2
       394                 84     return ( _FNan . _Float )
                           85   }+
      1243        137      87   if (0.0F < x)
                           88   }+
                           89   else
                           93   }+
       744        636      99   if (x < rthalf)
                          103   }+
        56       1324     119   if (z < - maxexp)
                          120   }+
       699        625     122   else if (- 12.0F <= z && z <= 12.0F && - 40.0F < y && y < 40.0F)
       699                122     1: T && T && T && T
                    1     122     2: T && T && T && F
                    1     122     3: T && T && F && _
                  419     122     4: T && F && _ && _
                  204     122     5: F && _ && _ && _
                          122     MC/DC (cond 1): 1 + 5
                          122     MC/DC (cond 2): 1 + 4
                          122     MC/DC (cond 3): 1 + 3
                          122     MC/DC (cond 4): 1 + 2
       171        528     124     ternary-?: z < 0.0F
                          137   }+
        67        558     138   else if (maxexp < z)
                          139   }+
                          140   else
        38        520     151     if (xpx [ 0 ] == 0.0F)
                          152     }+
                          153     else
       914        520     157       for (;i < 4 && xpx [ i ] != 0.0F;)
       914                157         1: T && T
                  520     157         2: T && F
                    0     157         3: F && _
                      -   157         MC/DC (cond 1): 1 - 3
                          157         MC/DC (cond 2): 1 + 2
                          164       }+
                          165     }+
       208        350     172     if (xpx [ 1 ] != 0.0F)
                          179     }+
       520         38     182     if (xpz [ 0 ] != 0.0F && xpz [ 1 ] != 0.0F)
       520                182       1: T && T
                   38     182       2: T && F
                    0     182       3: F && _
                      -   182       MC/DC (cond 1): 1 - 3
                          182       MC/DC (cond 2): 1 + 2
                          183     }+
                          191   }+
      1257        123     193   if (errx < 0)
         0       1257 -   195     if (pex != 0)
                          199     }+
                          201   }+
                          202   switch (errx)
       235                204   case 0:
       235                207     break
       154                209   case 1:
         0        154 -   210     if (z < 0.0F)
                          214     }+
                          215     else
                          219     }+
                          220   }+
       120       1260     222   if (neg)
                          223   }+
      1380                224   return ( z )
                          225 }

***TER  89 % ( 94/106) of FUNCTION _FPow()
        95 % (119/125) statement
-----------------------------------------------------------------------------

      1961                227 FUNCTION powf()
      1961                229   return ( _FPow ( x , y , 0 ) )
                          230 }

***TER 100 % (  2/  2) of FUNCTION powf()
       100 % (  1/  1) statement
-----------------------------------------------------------------------------


***TER  89 % ( 96/108) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\powf.c
        95 % (120/126) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\powf_uv__uv_extreme.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         1                291 FUNCTION powf_uv__uv_extreme_nan()
         5          1     303   for (;ind < 5;)
         0          5 -   307     if (test_compare_float ( res , powf_uv__uv_extreme_nan_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1)
                          312     }+
                          312     else
                          314     }+
                          315   }+
         1          0 -   317   if (errors == 0 && passes == 5)
         1                317     1: T && T
                    0     317     2: T && F
                    0     317     3: F && _
                      -   317     MC/DC (cond 1): 1 - 3
                      -   317     MC/DC (cond 2): 1 - 2
                          319   }-
                          319   else
                          321   }+
         1                323   return errors
                          324 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_extreme_nan()
        85 % ( 17/ 20) statement
-----------------------------------------------------------------------------

         1                340 FUNCTION powf_uv__uv_extreme_pos_infinity()
         5          1     352   for (;ind < 5;)
         0          5 -   356     if (test_compare_float ( res , powf_uv__uv_extreme_pos_infinity_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1)
                          361     }+
                          361     else
                          363     }+
                          364   }+
         1          0 -   366   if (errors == 0 && passes == 5)
         1                366     1: T && T
                    0     366     2: T && F
                    0     366     3: F && _
                      -   366     MC/DC (cond 1): 1 - 3
                      -   366     MC/DC (cond 2): 1 - 2
                          368   }-
                          368   else
                          370   }+
         1                372   return errors
                          373 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_extreme_pos_infinity()
        85 % ( 17/ 20) statement
-----------------------------------------------------------------------------

         1                389 FUNCTION powf_uv__uv_extreme_neg_infinity()
         5          1     401   for (;ind < 5;)
         0          5 -   405     if (test_compare_float ( res , powf_uv__uv_extreme_neg_infinity_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1)
                          410     }+
                          410     else
                          412     }+
                          413   }+
         1          0 -   415   if (errors == 0 && passes == 5)
         1                415     1: T && T
                    0     415     2: T && F
                    0     415     3: F && _
                      -   415     MC/DC (cond 1): 1 - 3
                      -   415     MC/DC (cond 2): 1 - 2
                          417   }-
                          417   else
                          419   }+
         1                421   return errors
                          422 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_extreme_neg_infinity()
        85 % ( 17/ 20) statement
-----------------------------------------------------------------------------

         1                439 FUNCTION powf_uv__uv_extreme_infinity()
         6          1     451   for (;ind < 6;)
         0          6 -   455     if (test_compare_float ( res , powf_uv__uv_extreme_infinity_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1)
                          460     }+
                          460     else
                          462     }+
                          463   }+
         1          0 -   465   if (errors == 0 && passes == 6)
         1                465     1: T && T
                    0     465     2: T && F
                    0     465     3: F && _
                      -   465     MC/DC (cond 1): 1 - 3
                      -   465     MC/DC (cond 2): 1 - 2
                          467   }-
                          467   else
                          469   }+
         1                471   return errors
                          472 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_extreme_infinity()
        85 % ( 17/ 20) statement
-----------------------------------------------------------------------------

         1                492 FUNCTION powf_uv__uv_extreme_extreme_values()
         9          1     504   for (;ind < 9;)
         0          9 -   508     if (test_compare_float ( res , powf_uv__uv_extreme_extreme_values_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1)
                          513     }+
                          513     else
                          515     }+
                          516   }+
         1          0 -   518   if (errors == 0 && passes == 9)
         1                518     1: T && T
                    0     518     2: T && F
                    0     518     3: F && _
                      -   518     MC/DC (cond 1): 1 - 3
                      -   518     MC/DC (cond 2): 1 - 2
                          520   }-
                          520   else
                          522   }+
         1                524   return errors
                          525 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_extreme_extreme_values()
        85 % ( 17/ 20) statement
-----------------------------------------------------------------------------

         1                636 FUNCTION powf_uv__uv_extreme_powf_denom_pos_pos()
       100          1     648   for (;ind < 100;)
         0        100 -   652     if (test_compare_float ( res , powf_uv__uv_extreme_powf_denom_pos_pos_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1)
                          657     }+
                          657     else
                          659     }+
                          660   }+
         1          0 -   662   if (errors == 0 && passes == 100)
         1                662     1: T && T
                    0     662     2: T && F
                    0     662     3: F && _
                      -   662     MC/DC (cond 1): 1 - 3
                      -   662     MC/DC (cond 2): 1 - 2
                          664   }-
                          664   else
                          666   }+
         1                668   return errors
                          669 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_extreme_powf_denom_pos_pos()
        85 % ( 17/ 20) statement
-----------------------------------------------------------------------------

         1                790 FUNCTION powf_uv__uv_extreme_powf_denom_pos_neg()
       110          1     802   for (;ind < 110;)
         0        110 -   806     if (test_compare_float ( res , powf_uv__uv_extreme_powf_denom_pos_neg_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1)
                          811     }+
                          811     else
                          813     }+
                          814   }+
         1          0 -   816   if (errors == 0 && passes == 110)
         1                816     1: T && T
                    0     816     2: T && F
                    0     816     3: F && _
                      -   816     MC/DC (cond 1): 1 - 3
                      -   816     MC/DC (cond 2): 1 - 2
                          818   }-
                          818   else
                          820   }+
         1                822   return errors
                          823 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_extreme_powf_denom_pos_neg()
        85 % ( 17/ 20) statement
-----------------------------------------------------------------------------

         1                944 FUNCTION powf_uv__uv_extreme_powf_denom_neg_pos()
       110          1     956   for (;ind < 110;)
         0        110 -   960     if (test_compare_float ( res , powf_uv__uv_extreme_powf_denom_neg_pos_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1)
                          965     }+
                          965     else
                          967     }+
                          968   }+
         1          0 -   970   if (errors == 0 && passes == 110)
         1                970     1: T && T
                    0     970     2: T && F
                    0     970     3: F && _
                      -   970     MC/DC (cond 1): 1 - 3
                      -   970     MC/DC (cond 2): 1 - 2
                          972   }-
                          972   else
                          974   }+
         1                976   return errors
                          977 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_extreme_powf_denom_neg_pos()
        85 % ( 17/ 20) statement
-----------------------------------------------------------------------------

         1               1109 FUNCTION powf_uv__uv_extreme_powf_denom_neg_neg()
       121          1    1121   for (;ind < 121;)
         0        121 -  1125     if (test_compare_float ( res , powf_uv__uv_extreme_powf_denom_neg_neg_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1)
                         1130     }+
                         1130     else
                         1132     }+
                         1133   }+
         1          0 -  1135   if (errors == 0 && passes == 121)
         1               1135     1: T && T
                    0    1135     2: T && F
                    0    1135     3: F && _
                      -  1135     MC/DC (cond 1): 1 - 3
                      -  1135     MC/DC (cond 2): 1 - 2
                         1137   }-
                         1137   else
                         1139   }+
         1               1141   return errors
                         1142 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_extreme_powf_denom_neg_neg()
        85 % ( 17/ 20) statement
-----------------------------------------------------------------------------

         1               1154 FUNCTION powf_uv__uv_extreme_zero()
         1          1    1166   for (;ind < 1;)
         0          1 -  1170     if (test_compare_float ( res , powf_uv__uv_extreme_zero_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1)
                         1175     }+
                         1175     else
                         1177     }+
                         1178   }+
         1          0 -  1180   if (errors == 0 && passes == 1)
         1               1180     1: T && T
                    0    1180     2: T && F
                    0    1180     3: F && _
                      -  1180     MC/DC (cond 1): 1 - 3
                      -  1180     MC/DC (cond 2): 1 - 2
                         1182   }-
                         1182   else
                         1184   }+
         1               1186   return errors
                         1187 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_extreme_zero()
        85 % ( 17/ 20) statement
-----------------------------------------------------------------------------

         1               1248 FUNCTION powf_uv__uv_extreme_random_small_squares()
        50          1    1260   for (;ind < 50;)
         0         50 -  1264     if (test_compare_float ( res , powf_uv__uv_extreme_random_small_squares_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1)
                         1269     }+
                         1269     else
                         1271     }+
                         1272   }+
         1          0 -  1274   if (errors == 0 && passes == 50)
         1               1274     1: T && T
                    0    1274     2: T && F
                    0    1274     3: F && _
                      -  1274     MC/DC (cond 1): 1 - 3
                      -  1274     MC/DC (cond 2): 1 - 2
                         1276   }-
                         1276   else
                         1278   }+
         1               1280   return errors
                         1281 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_extreme_random_small_squares()
        85 % ( 17/ 20) statement
-----------------------------------------------------------------------------

         1               1342 FUNCTION powf_uv__uv_extreme_random_small_neg_sqr()
        50          1    1354   for (;ind < 50;)
         0         50 -  1358     if (test_compare_float ( res , powf_uv__uv_extreme_random_small_neg_sqr_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1)
                         1363     }+
                         1363     else
                         1365     }+
                         1366   }+
         1          0 -  1368   if (errors == 0 && passes == 50)
         1               1368     1: T && T
                    0    1368     2: T && F
                    0    1368     3: F && _
                      -  1368     MC/DC (cond 1): 1 - 3
                      -  1368     MC/DC (cond 2): 1 - 2
                         1370   }-
                         1370   else
                         1372   }+
         1               1374   return errors
                         1375 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_extreme_random_small_neg_sqr()
        85 % ( 17/ 20) statement
-----------------------------------------------------------------------------

         1               1436 FUNCTION powf_uv__uv_extreme_random_negative()
        50          1    1448   for (;ind < 50;)
         0         50 -  1452     if (test_compare_float ( res , powf_uv__uv_extreme_random_negative_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1)
                         1457     }+
                         1457     else
                         1459     }+
                         1460   }+
         1          0 -  1462   if (errors == 0 && passes == 50)
         1               1462     1: T && T
                    0    1462     2: T && F
                    0    1462     3: F && _
                      -  1462     MC/DC (cond 1): 1 - 3
                      -  1462     MC/DC (cond 2): 1 - 2
                         1464   }-
                         1464   else
                         1466   }+
         1               1468   return errors
                         1469 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_extreme_random_negative()
        85 % ( 17/ 20) statement
-----------------------------------------------------------------------------

         1               1529 FUNCTION powf_uv__uv_extreme_big_powers()
        49          1    1541   for (;ind < 49;)
         0         49 -  1545     if (test_compare_float ( res , powf_uv__uv_extreme_big_powers_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1)
                         1550     }+
                         1550     else
                         1552     }+
                         1553   }+
         1          0 -  1555   if (errors == 0 && passes == 49)
         1               1555     1: T && T
                    0    1555     2: T && F
                    0    1555     3: F && _
                      -  1555     MC/DC (cond 1): 1 - 3
                      -  1555     MC/DC (cond 2): 1 - 2
                         1557   }-
                         1557   else
                         1559   }+
         1               1561   return errors
                         1562 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_extreme_big_powers()
        85 % ( 17/ 20) statement
-----------------------------------------------------------------------------

         1               1622 FUNCTION powf_uv__uv_extreme_overflowing_powers()
        49          1    1634   for (;ind < 49;)
         0         49 -  1638     if (test_compare_float ( res , powf_uv__uv_extreme_overflowing_powers_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1)
                         1643     }+
                         1643     else
                         1645     }+
                         1646   }+
         1          0 -  1648   if (errors == 0 && passes == 49)
         1               1648     1: T && T
                    0    1648     2: T && F
                    0    1648     3: F && _
                      -  1648     MC/DC (cond 1): 1 - 3
                      -  1648     MC/DC (cond 2): 1 - 2
                         1650   }-
                         1650   else
                         1652   }+
         1               1654   return errors
                         1655 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_extreme_overflowing_powers()
        85 % ( 17/ 20) statement
-----------------------------------------------------------------------------

         1               1730 FUNCTION powf_uv__uv_extreme_overflowing_powers_pos()
        64          1    1742   for (;ind < 64;)
         0         64 -  1746     if (test_compare_float ( res , powf_uv__uv_extreme_overflowing_powers_pos_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1)
                         1751     }+
                         1751     else
                         1753     }+
                         1754   }+
         1          0 -  1756   if (errors == 0 && passes == 64)
         1               1756     1: T && T
                    0    1756     2: T && F
                    0    1756     3: F && _
                      -  1756     MC/DC (cond 1): 1 - 3
                      -  1756     MC/DC (cond 2): 1 - 2
                         1758   }-
                         1758   else
                         1760   }+
         1               1762   return errors
                         1763 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_extreme_overflowing_powers_pos()
        85 % ( 17/ 20) statement
-----------------------------------------------------------------------------

         1               1838 FUNCTION powf_uv__uv_extreme_overflowing_powers_neg()
        64          1    1850   for (;ind < 64;)
         0         64 -  1854     if (test_compare_float ( res , powf_uv__uv_extreme_overflowing_powers_neg_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1)
                         1859     }+
                         1859     else
                         1861     }+
                         1862   }+
         1          0 -  1864   if (errors == 0 && passes == 64)
         1               1864     1: T && T
                    0    1864     2: T && F
                    0    1864     3: F && _
                      -  1864     MC/DC (cond 1): 1 - 3
                      -  1864     MC/DC (cond 2): 1 - 2
                         1866   }-
                         1866   else
                         1868   }+
         1               1870   return errors
                         1871 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_extreme_overflowing_powers_neg()
        85 % ( 17/ 20) statement
-----------------------------------------------------------------------------

         1               1946 FUNCTION powf_uv__uv_extreme_undeflowing_powers()
        64          1    1958   for (;ind < 64;)
         0         64 -  1962     if (test_compare_float ( res , powf_uv__uv_extreme_undeflowing_powers_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1)
                         1967     }+
                         1967     else
                         1969     }+
                         1970   }+
         1          0 -  1972   if (errors == 0 && passes == 64)
         1               1972     1: T && T
                    0    1972     2: T && F
                    0    1972     3: F && _
                      -  1972     MC/DC (cond 1): 1 - 3
                      -  1972     MC/DC (cond 2): 1 - 2
                         1974   }-
                         1974   else
                         1976   }+
         1               1978   return errors
                         1979 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_extreme_undeflowing_powers()
        85 % ( 17/ 20) statement
-----------------------------------------------------------------------------

         1               2054 FUNCTION powf_uv__uv_extreme_undeflowing_powers2()
        64          1    2066   for (;ind < 64;)
         0         64 -  2070     if (test_compare_float ( res , powf_uv__uv_extreme_undeflowing_powers2_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1)
                         2075     }+
                         2075     else
                         2077     }+
                         2078   }+
         1          0 -  2080   if (errors == 0 && passes == 64)
         1               2080     1: T && T
                    0    2080     2: T && F
                    0    2080     3: F && _
                      -  2080     MC/DC (cond 1): 1 - 3
                      -  2080     MC/DC (cond 2): 1 - 2
                         2082   }-
                         2082   else
                         2084   }+
         1               2086   return errors
                         2087 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_extreme_undeflowing_powers2()
        85 % ( 17/ 20) statement
-----------------------------------------------------------------------------

         1               2162 FUNCTION powf_uv__uv_extreme_undeflowing_powers3()
        64          1    2174   for (;ind < 64;)
         0         64 -  2178     if (test_compare_float ( res , powf_uv__uv_extreme_undeflowing_powers3_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1)
                         2183     }+
                         2183     else
                         2185     }+
                         2186   }+
         1          0 -  2188   if (errors == 0 && passes == 64)
         1               2188     1: T && T
                    0    2188     2: T && F
                    0    2188     3: F && _
                      -  2188     MC/DC (cond 1): 1 - 3
                      -  2188     MC/DC (cond 2): 1 - 2
                         2190   }-
                         2190   else
                         2192   }+
         1               2194   return errors
                         2195 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_extreme_undeflowing_powers3()
        85 % ( 17/ 20) statement
-----------------------------------------------------------------------------

         1               2270 FUNCTION powf_uv__uv_extreme_undeflowing_powers4()
        64          1    2282   for (;ind < 64;)
         0         64 -  2286     if (test_compare_float ( res , powf_uv__uv_extreme_undeflowing_powers4_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1)
                         2291     }+
                         2291     else
                         2293     }+
                         2294   }+
         1          0 -  2296   if (errors == 0 && passes == 64)
         1               2296     1: T && T
                    0    2296     2: T && F
                    0    2296     3: F && _
                      -  2296     MC/DC (cond 1): 1 - 3
                      -  2296     MC/DC (cond 2): 1 - 2
                         2298   }-
                         2298   else
                         2300   }+
         1               2302   return errors
                         2303 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_extreme_undeflowing_powers4()
        85 % ( 17/ 20) statement
-----------------------------------------------------------------------------

         1               2339 FUNCTION powf_uv__uv_extreme_roots_of_minus_two()
        25          1    2351   for (;ind < 25;)
         0         25 -  2355     if (test_compare_float ( res , powf_uv__uv_extreme_roots_of_minus_two_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1)
                         2360     }+
                         2360     else
                         2362     }+
                         2363   }+
         1          0 -  2365   if (errors == 0 && passes == 25)
         1               2365     1: T && T
                    0    2365     2: T && F
                    0    2365     3: F && _
                      -  2365     MC/DC (cond 1): 1 - 3
                      -  2365     MC/DC (cond 2): 1 - 2
                         2367   }-
                         2367   else
                         2369   }+
         1               2371   return errors
                         2372 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_extreme_roots_of_minus_two()
        85 % ( 17/ 20) statement
-----------------------------------------------------------------------------

         1               2408 FUNCTION powf_uv__uv_extreme_roots_to_minus_ten()
        25          1    2420   for (;ind < 25;)
         0         25 -  2424     if (test_compare_float ( res , powf_uv__uv_extreme_roots_to_minus_ten_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1)
                         2429     }+
                         2429     else
                         2431     }+
                         2432   }+
         1          0 -  2434   if (errors == 0 && passes == 25)
         1               2434     1: T && T
                    0    2434     2: T && F
                    0    2434     3: F && _
                      -  2434     MC/DC (cond 1): 1 - 3
                      -  2434     MC/DC (cond 2): 1 - 2
                         2436   }-
                         2436   else
                         2438   }+
         1               2440   return errors
                         2441 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_extreme_roots_to_minus_ten()
        85 % ( 17/ 20) statement
-----------------------------------------------------------------------------

         1               2472 FUNCTION powf_uv__uv_extreme_big_powers2()
        20          1    2484   for (;ind < 20;)
         0         20 -  2488     if (test_compare_float ( res , powf_uv__uv_extreme_big_powers2_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1)
                         2493     }+
                         2493     else
                         2495     }+
                         2496   }+
         1          0 -  2498   if (errors == 0 && passes == 20)
         1               2498     1: T && T
                    0    2498     2: T && F
                    0    2498     3: F && _
                      -  2498     MC/DC (cond 1): 1 - 3
                      -  2498     MC/DC (cond 2): 1 - 2
                         2500   }-
                         2500   else
                         2502   }+
         1               2504   return errors
                         2505 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_extreme_big_powers2()
        85 % ( 17/ 20) statement
-----------------------------------------------------------------------------

         1               2534 FUNCTION powf_uv__uv_extreme_coverage_dw()
        18          1    2546   for (;ind < 18;)
         2         16    2550     if (test_compare_float ( res , powf_uv__uv_extreme_coverage_dw_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1)
                         2555     }+
                         2555     else
                         2557     }+
                         2558   }+
         0          1 -  2560   if (errors == 0 && passes == 18)
         0               2560     1: T && T
                    0    2560     2: T && F
                    1    2560     3: F && _
                      -  2560     MC/DC (cond 1): 1 - 3
                      -  2560     MC/DC (cond 2): 1 - 2
                         2562   }+
                         2562   else
                         2564   }+
         1               2566   return errors
                         2567 }

***TER  70 % (  7/ 10) of FUNCTION powf_uv__uv_extreme_coverage_dw()
        95 % ( 19/ 20) statement
-----------------------------------------------------------------------------

         1               2593 FUNCTION powf_uv__uv_extreme_coverage_values()
        15          1    2605   for (;ind < 15;)
         0         15 -  2609     if (test_compare_float ( res , powf_uv__uv_extreme_coverage_values_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1)
                         2614     }+
                         2614     else
                         2616     }+
                         2617   }+
         1          0 -  2619   if (errors == 0 && passes == 15)
         1               2619     1: T && T
                    0    2619     2: T && F
                    0    2619     3: F && _
                      -  2619     MC/DC (cond 1): 1 - 3
                      -  2619     MC/DC (cond 2): 1 - 2
                         2621   }-
                         2621   else
                         2623   }+
         1               2625   return errors
                         2626 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_extreme_coverage_values()
        85 % ( 17/ 20) statement
-----------------------------------------------------------------------------

         1               2645 FUNCTION powf_uv__uv_extreme_coverage_dw8()
         8          1    2657   for (;ind < 8;)
         2          6    2661     if (test_compare_float ( res , powf_uv__uv_extreme_coverage_dw_io_table8 [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1)
                         2666     }+
                         2666     else
                         2668     }+
                         2669   }+
         0          1 -  2671   if (errors == 0 && passes == 8)
         0               2671     1: T && T
                    0    2671     2: T && F
                    1    2671     3: F && _
                      -  2671     MC/DC (cond 1): 1 - 3
                      -  2671     MC/DC (cond 2): 1 - 2
                         2673   }+
                         2673   else
                         2675   }+
         1               2677   return errors
                         2678 }

***TER  70 % (  7/ 10) of FUNCTION powf_uv__uv_extreme_coverage_dw8()
        95 % ( 19/ 20) statement
-----------------------------------------------------------------------------

         1               2683 FUNCTION powf_uv__uv_extreme_main_test()
         0          1 -  2714   if (errors == 0)
                         2716   }+
                         2716   else
                         2718   }+
         1               2772   return errors
                         2773 }

***TER  75 % (  3/  4) of FUNCTION powf_uv__uv_extreme_main_test()
        97 % ( 33/ 34) statement
-----------------------------------------------------------------------------


***TER  61 % (167/274) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\powf_uv__uv_extreme.c
        86 % (496/574) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\powf_uv__uv_normal.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         1                178 FUNCTION powf_uv__uv_normal_normal_values()
         3          1     190   for (;ind < 3;)
         0          3 -   194     if (test_compare_float ( res , powf_uv__uv_normal_normal_values_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_normal , & max_dif_above_powf_uv__uv_normal ) != 1)
                          199     }+
                          199     else
                          201     }+
                          202   }+
         1          0 -   204   if (errors == 0 && passes == 3)
         1                204     1: T && T
                    0     204     2: T && F
                    0     204     3: F && _
                      -   204     MC/DC (cond 1): 1 - 3
                      -   204     MC/DC (cond 2): 1 - 2
                          206   }-
                          206   else
                          208   }+
         1                210   return errors
                          211 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_normal_normal_values()
        85 % ( 17/ 20) statement
-----------------------------------------------------------------------------

         1                271 FUNCTION powf_uv__uv_normal_powf_normal_range()
        49          1     283   for (;ind < 49;)
         0         49 -   287     if (test_compare_float ( res , powf_uv__uv_normal_powf_normal_range_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_normal , & max_dif_above_powf_uv__uv_normal ) != 1)
                          292     }+
                          292     else
                          294     }+
                          295   }+
         1          0 -   297   if (errors == 0 && passes == 49)
         1                297     1: T && T
                    0     297     2: T && F
                    0     297     3: F && _
                      -   297     MC/DC (cond 1): 1 - 3
                      -   297     MC/DC (cond 2): 1 - 2
                          299   }-
                          299   else
                          301   }+
         1                303   return errors
                          304 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_normal_powf_normal_range()
        85 % ( 17/ 20) statement
-----------------------------------------------------------------------------

         1                365 FUNCTION powf_uv__uv_normal_powf_normal_range_rnd()
        50          1     377   for (;ind < 50;)
         0         50 -   381     if (test_compare_float ( res , powf_uv__uv_normal_powf_normal_range_rnd_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_normal , & max_dif_above_powf_uv__uv_normal ) != 1)
                          386     }+
                          386     else
                          388     }+
                          389   }+
         1          0 -   391   if (errors == 0 && passes == 50)
         1                391     1: T && T
                    0     391     2: T && F
                    0     391     3: F && _
                      -   391     MC/DC (cond 1): 1 - 3
                      -   391     MC/DC (cond 2): 1 - 2
                          393   }-
                          393   else
                          395   }+
         1                397   return errors
                          398 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_normal_powf_normal_range_rnd()
        85 % ( 17/ 20) statement
-----------------------------------------------------------------------------

         1                459 FUNCTION powf_uv__uv_normal_random_squares()
        50          1     471   for (;ind < 50;)
         0         50 -   475     if (test_compare_float ( res , powf_uv__uv_normal_random_squares_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_normal , & max_dif_above_powf_uv__uv_normal ) != 1)
                          480     }+
                          480     else
                          482     }+
                          483   }+
         1          0 -   485   if (errors == 0 && passes == 50)
         1                485     1: T && T
                    0     485     2: T && F
                    0     485     3: F && _
                      -   485     MC/DC (cond 1): 1 - 3
                      -   485     MC/DC (cond 2): 1 - 2
                          487   }-
                          487   else
                          489   }+
         1                491   return errors
                          492 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_normal_random_squares()
        85 % ( 17/ 20) statement
-----------------------------------------------------------------------------

         1                553 FUNCTION powf_uv__uv_normal_negative_squares()
        50          1     565   for (;ind < 50;)
         0         50 -   569     if (test_compare_float ( res , powf_uv__uv_normal_negative_squares_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_normal , & max_dif_above_powf_uv__uv_normal ) != 1)
                          574     }+
                          574     else
                          576     }+
                          577   }+
         1          0 -   579   if (errors == 0 && passes == 50)
         1                579     1: T && T
                    0     579     2: T && F
                    0     579     3: F && _
                      -   579     MC/DC (cond 1): 1 - 3
                      -   579     MC/DC (cond 2): 1 - 2
                          581   }-
                          581   else
                          583   }+
         1                585   return errors
                          586 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_normal_negative_squares()
        85 % ( 17/ 20) statement
-----------------------------------------------------------------------------

         1                661 FUNCTION powf_uv__uv_normal_negative_pow()
        64          1     673   for (;ind < 64;)
         0         64 -   677     if (test_compare_float ( res , powf_uv__uv_normal_negative_pow_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_normal , & max_dif_above_powf_uv__uv_normal ) != 1)
                          682     }+
                          682     else
                          684     }+
                          685   }+
         1          0 -   687   if (errors == 0 && passes == 64)
         1                687     1: T && T
                    0     687     2: T && F
                    0     687     3: F && _
                      -   687     MC/DC (cond 1): 1 - 3
                      -   687     MC/DC (cond 2): 1 - 2
                          689   }-
                          689   else
                          691   }+
         1                693   return errors
                          694 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_normal_negative_pow()
        85 % ( 17/ 20) statement
-----------------------------------------------------------------------------

         1                755 FUNCTION powf_uv__uv_normal_random_squareroots()
        50          1     767   for (;ind < 50;)
         0         50 -   771     if (test_compare_float ( res , powf_uv__uv_normal_random_squareroots_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_normal , & max_dif_above_powf_uv__uv_normal ) != 1)
                          776     }+
                          776     else
                          778     }+
                          779   }+
         1          0 -   781   if (errors == 0 && passes == 50)
         1                781     1: T && T
                    0     781     2: T && F
                    0     781     3: F && _
                      -   781     MC/DC (cond 1): 1 - 3
                      -   781     MC/DC (cond 2): 1 - 2
                          783   }-
                          783   else
                          785   }+
         1                787   return errors
                          788 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_normal_random_squareroots()
        85 % ( 17/ 20) statement
-----------------------------------------------------------------------------

         1                849 FUNCTION powf_uv__uv_normal_random_exponent()
        50          1     861   for (;ind < 50;)
         0         50 -   865     if (test_compare_float ( res , powf_uv__uv_normal_random_exponent_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_normal , & max_dif_above_powf_uv__uv_normal ) != 1)
                          870     }+
                          870     else
                          872     }+
                          873   }+
         1          0 -   875   if (errors == 0 && passes == 50)
         1                875     1: T && T
                    0     875     2: T && F
                    0     875     3: F && _
                      -   875     MC/DC (cond 1): 1 - 3
                      -   875     MC/DC (cond 2): 1 - 2
                          877   }-
                          877   else
                          879   }+
         1                881   return errors
                          882 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_normal_random_exponent()
        85 % ( 17/ 20) statement
-----------------------------------------------------------------------------

         1                943 FUNCTION powf_uv__uv_normal_random_numbers()
        50          1     955   for (;ind < 50;)
         0         50 -   959     if (test_compare_float ( res , powf_uv__uv_normal_random_numbers_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_normal , & max_dif_above_powf_uv__uv_normal ) != 1)
                          964     }+
                          964     else
                          966     }+
                          967   }+
         1          0 -   969   if (errors == 0 && passes == 50)
         1                969     1: T && T
                    0     969     2: T && F
                    0     969     3: F && _
                      -   969     MC/DC (cond 1): 1 - 3
                      -   969     MC/DC (cond 2): 1 - 2
                          971   }-
                          971   else
                          973   }+
         1                975   return errors
                          976 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_normal_random_numbers()
        85 % ( 17/ 20) statement
-----------------------------------------------------------------------------

         1                994 FUNCTION powf_uv__uv_normal_linear_squares()
         7          1    1006   for (;ind < 7;)
         0          7 -  1010     if (test_compare_float ( res , powf_uv__uv_normal_linear_squares_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_normal , & max_dif_above_powf_uv__uv_normal ) != 1)
                         1015     }+
                         1015     else
                         1017     }+
                         1018   }+
         1          0 -  1020   if (errors == 0 && passes == 7)
         1               1020     1: T && T
                    0    1020     2: T && F
                    0    1020     3: F && _
                      -  1020     MC/DC (cond 1): 1 - 3
                      -  1020     MC/DC (cond 2): 1 - 2
                         1022   }-
                         1022   else
                         1024   }+
         1               1026   return errors
                         1027 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_normal_linear_squares()
        85 % ( 17/ 20) statement
-----------------------------------------------------------------------------

         1               1087 FUNCTION powf_uv__uv_normal_linear_powers()
        49          1    1099   for (;ind < 49;)
         0         49 -  1103     if (test_compare_float ( res , powf_uv__uv_normal_linear_powers_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_normal , & max_dif_above_powf_uv__uv_normal ) != 1)
                         1108     }+
                         1108     else
                         1110     }+
                         1111   }+
         1          0 -  1113   if (errors == 0 && passes == 49)
         1               1113     1: T && T
                    0    1113     2: T && F
                    0    1113     3: F && _
                      -  1113     MC/DC (cond 1): 1 - 3
                      -  1113     MC/DC (cond 2): 1 - 2
                         1115   }-
                         1115   else
                         1117   }+
         1               1119   return errors
                         1120 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_normal_linear_powers()
        85 % ( 17/ 20) statement
-----------------------------------------------------------------------------

         1               1156 FUNCTION powf_uv__uv_normal_roots_of_two()
        25          1    1168   for (;ind < 25;)
         0         25 -  1172     if (test_compare_float ( res , powf_uv__uv_normal_roots_of_two_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_normal , & max_dif_above_powf_uv__uv_normal ) != 1)
                         1177     }+
                         1177     else
                         1179     }+
                         1180   }+
         1          0 -  1182   if (errors == 0 && passes == 25)
         1               1182     1: T && T
                    0    1182     2: T && F
                    0    1182     3: F && _
                      -  1182     MC/DC (cond 1): 1 - 3
                      -  1182     MC/DC (cond 2): 1 - 2
                         1184   }-
                         1184   else
                         1186   }+
         1               1188   return errors
                         1189 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_normal_roots_of_two()
        85 % ( 17/ 20) statement
-----------------------------------------------------------------------------

         1               1224 FUNCTION powf_uv__uv_normal_roots_to_ten()
        24          1    1236   for (;ind < 24;)
         0         24 -  1240     if (test_compare_float ( res , powf_uv__uv_normal_roots_to_ten_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_normal , & max_dif_above_powf_uv__uv_normal ) != 1)
                         1245     }+
                         1245     else
                         1247     }+
                         1248   }+
         1          0 -  1250   if (errors == 0 && passes == 24)
         1               1250     1: T && T
                    0    1250     2: T && F
                    0    1250     3: F && _
                      -  1250     MC/DC (cond 1): 1 - 3
                      -  1250     MC/DC (cond 2): 1 - 2
                         1252   }-
                         1252   else
                         1254   }+
         1               1256   return errors
                         1257 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_normal_roots_to_ten()
        85 % ( 17/ 20) statement
-----------------------------------------------------------------------------

         1               1289 FUNCTION powf_uv__uv_normal_two_powers()
        21          1    1301   for (;ind < 21;)
         0         21 -  1305     if (test_compare_float ( res , powf_uv__uv_normal_two_powers_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_normal , & max_dif_above_powf_uv__uv_normal ) != 1)
                         1310     }+
                         1310     else
                         1312     }+
                         1313   }+
         1          0 -  1315   if (errors == 0 && passes == 21)
         1               1315     1: T && T
                    0    1315     2: T && F
                    0    1315     3: F && _
                      -  1315     MC/DC (cond 1): 1 - 3
                      -  1315     MC/DC (cond 2): 1 - 2
                         1317   }-
                         1317   else
                         1319   }+
         1               1321   return errors
                         1322 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_normal_two_powers()
        85 % ( 17/ 20) statement
-----------------------------------------------------------------------------

         1               1327 FUNCTION powf_uv__uv_normal_main_test()
         1          0 -  1345   if (errors == 0)
                         1347   }-
                         1347   else
                         1349   }+
         1               1403   return errors
                         1404 }

***TER  75 % (  3/  4) of FUNCTION powf_uv__uv_normal_main_test()
        95 % ( 20/ 21) statement
-----------------------------------------------------------------------------


***TER  60 % ( 87/144) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\powf_uv__uv_normal.c
        86 % (258/301) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\powf_uv__uv_terms.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         1                137 FUNCTION powf_uv__uv_terms_powf_deterministic()
        49          1     151   for (;ind < 49;)
         0         49 -   155     if (res != powf_uv__uv_terms_powf_deterministic_io_table [ ind ] . powf_out)
         0          0 -   157       if (( powf ( x , y ) == powf ( x , y ) ) >= - 2147483648.0 && ( powf ( x , y ) == powf ( x , y ) ) <= 2147483647.0)
         0                157         1: T && T
                    0     157         2: T && F
                    0     157         3: F && _
                      -   157         MC/DC (cond 1): 1 - 3
                      -   157         MC/DC (cond 2): 1 - 2
         0          0 -   162         if (( res1 != powf_uv__uv_terms_powf_deterministic_io_table [ ind ] . powf_out ) && ( res2 != powf_uv__uv_terms_powf_deterministic_io_table [ ind ] . powf_out ))
         0                162           1: (T) && (T)
                    0     162           2: (T) && (F)
                    0     162           3: (F) && (_)
                      -   162           MC/DC (cond 1): 1 - 3
                      -   162           MC/DC (cond 2): 1 - 2
                          167         }-
                          167         else
                          169         }-
                          170       }-
                          170       else
                          172       }-
                          173     }+
                          173     else
                          175     }+
                          176   }+
         1          0 -   178   if (errors == 0 && passes == 49)
         1                178     1: T && T
                    0     178     2: T && F
                    0     178     3: F && _
                      -   178     MC/DC (cond 1): 1 - 3
                      -   178     MC/DC (cond 2): 1 - 2
                          180   }-
                          180   else
                          182   }+
         1                184   return errors
                          185 }

***TER  33 % (  6/ 18) of FUNCTION powf_uv__uv_terms_powf_deterministic()
        68 % ( 19/ 28) statement
-----------------------------------------------------------------------------

         1                246 FUNCTION powf_uv__uv_terms_powf_combine()
        49          1     258   for (;ind < 49;)
         0         49 -   262     if (test_compare_float ( res , powf_uv__uv_terms_powf_combine_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_terms , & max_dif_above_powf_uv__uv_terms ) != 1)
                          267     }+
                          267     else
                          269     }+
                          270   }+
         1          0 -   272   if (errors == 0 && passes == 49)
         1                272     1: T && T
                    0     272     2: T && F
                    0     272     3: F && _
                      -   272     MC/DC (cond 1): 1 - 3
                      -   272     MC/DC (cond 2): 1 - 2
                          274   }-
                          274   else
                          276   }+
         1                278   return errors
                          279 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_terms_powf_combine()
        85 % ( 17/ 20) statement
-----------------------------------------------------------------------------

         1                301 FUNCTION powf_uv__uv_terms_sqrt_pow()
        10          1     312   for (;ind < 10;)
         0         10 -   315     if (test_compare_float ( res , powf_uv__uv_terms_sqrt_pow_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_terms , & max_dif_above_powf_uv__uv_terms ) != 1)
                          320     }+
                          320     else
                          322     }+
                          323   }+
         1          0 -   325   if (errors == 0 && passes == 10)
         1                325     1: T && T
                    0     325     2: T && F
                    0     325     3: F && _
                      -   325     MC/DC (cond 1): 1 - 3
                      -   325     MC/DC (cond 2): 1 - 2
                          327   }-
                          327   else
                          329   }+
         1                331   return errors
                          332 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_terms_sqrt_pow()
        83 % ( 15/ 18) statement
-----------------------------------------------------------------------------

         1                354 FUNCTION powf_uv__uv_terms_pow_sqrt()
        10          1     365   for (;ind < 10;)
         0         10 -   368     if (test_compare_float ( res , powf_uv__uv_terms_pow_sqrt_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_terms , & max_dif_above_powf_uv__uv_terms ) != 1)
                          373     }+
                          373     else
                          375     }+
                          376   }+
         1          0 -   378   if (errors == 0 && passes == 10)
         1                378     1: T && T
                    0     378     2: T && F
                    0     378     3: F && _
                      -   378     MC/DC (cond 1): 1 - 3
                      -   378     MC/DC (cond 2): 1 - 2
                          380   }-
                          380   else
                          382   }+
         1                384   return errors
                          385 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_terms_pow_sqrt()
        83 % ( 15/ 18) statement
-----------------------------------------------------------------------------

         1                390 FUNCTION powf_uv__uv_terms_main_test()
         1          0 -   398   if (errors == 0)
                          400   }-
                          400   else
                          402   }+
         1                456   return errors
                          457 }

***TER  75 % (  3/  4) of FUNCTION powf_uv__uv_terms_main_test()
        91 % ( 10/ 11) statement
-----------------------------------------------------------------------------


***TER  52 % ( 27/ 52) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\powf_uv__uv_terms.c
        80 % ( 76/ 95) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\powf_uv__uv_trivial.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         1                115 FUNCTION powf_uv__uv_trivial_zero_one()
         2          1     127   for (;ind < 2;)
         0          2 -   131     if (test_compare_float ( res , powf_uv__uv_trivial_zero_one_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_trivial , & max_dif_above_powf_uv__uv_trivial ) != 1)
                          136     }+
                          136     else
                          138     }+
                          139   }+
         1          0 -   141   if (errors == 0 && passes == 2)
         1                141     1: T && T
                    0     141     2: T && F
                    0     141     3: F && _
                      -   141     MC/DC (cond 1): 1 - 3
                      -   141     MC/DC (cond 2): 1 - 2
                          143   }-
                          143   else
                          145   }+
         1                147   return errors
                          148 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_trivial_zero_one()
        85 % ( 17/ 20) statement
-----------------------------------------------------------------------------

         1                180 FUNCTION powf_uv__uv_trivial_zero()
        20          1     192   for (;ind < 20;)
         0         20 -   196     if (test_compare_float ( res , powf_uv__uv_trivial_zero_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_trivial , & max_dif_above_powf_uv__uv_trivial ) != 1)
                          201     }+
                          201     else
                          203     }+
                          204   }+
         1          0 -   206   if (errors == 0 && passes == 20)
         1                206     1: T && T
                    0     206     2: T && F
                    0     206     3: F && _
                      -   206     MC/DC (cond 1): 1 - 3
                      -   206     MC/DC (cond 2): 1 - 2
                          208   }-
                          208   else
                          210   }+
         1                212   return errors
                          213 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_trivial_zero()
        85 % ( 17/ 20) statement
-----------------------------------------------------------------------------

         1                226 FUNCTION powf_uv__uv_trivial_negative_zero()
         2          1     238   for (;ind < 2;)
         0          2 -   242     if (test_compare_float ( res , powf_uv__uv_trivial_negative_zero_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_trivial , & max_dif_above_powf_uv__uv_trivial ) != 1)
                          247     }+
                          247     else
                          249     }+
                          250   }+
         1          0 -   252   if (errors == 0 && passes == 2)
         1                252     1: T && T
                    0     252     2: T && F
                    0     252     3: F && _
                      -   252     MC/DC (cond 1): 1 - 3
                      -   252     MC/DC (cond 2): 1 - 2
                          254   }-
                          254   else
                          256   }+
         1                258   return errors
                          259 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_trivial_negative_zero()
        85 % ( 17/ 20) statement
-----------------------------------------------------------------------------

         1                274 FUNCTION powf_uv__uv_trivial_four()
         4          1     286   for (;ind < 4;)
         0          4 -   290     if (test_compare_float ( res , powf_uv__uv_trivial_four_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_trivial , & max_dif_above_powf_uv__uv_trivial ) != 1)
                          295     }+
                          295     else
                          297     }+
                          298   }+
         1          0 -   300   if (errors == 0 && passes == 4)
         1                300     1: T && T
                    0     300     2: T && F
                    0     300     3: F && _
                      -   300     MC/DC (cond 1): 1 - 3
                      -   300     MC/DC (cond 2): 1 - 2
                          302   }-
                          302   else
                          304   }+
         1                306   return errors
                          307 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_trivial_four()
        85 % ( 17/ 20) statement
-----------------------------------------------------------------------------

         1                321 FUNCTION powf_uv__uv_trivial_nine()
         3          1     333   for (;ind < 3;)
         0          3 -   337     if (test_compare_float ( res , powf_uv__uv_trivial_nine_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_trivial , & max_dif_above_powf_uv__uv_trivial ) != 1)
                          342     }+
                          342     else
                          344     }+
                          345   }+
         1          0 -   347   if (errors == 0 && passes == 3)
         1                347     1: T && T
                    0     347     2: T && F
                    0     347     3: F && _
                      -   347     MC/DC (cond 1): 1 - 3
                      -   347     MC/DC (cond 2): 1 - 2
                          349   }-
                          349   else
                          351   }+
         1                353   return errors
                          354 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_trivial_nine()
        85 % ( 17/ 20) statement
-----------------------------------------------------------------------------

         1                366 FUNCTION powf_uv__uv_trivial_hundred()
         1          1     378   for (;ind < 1;)
         0          1 -   382     if (test_compare_float ( res , powf_uv__uv_trivial_hundred_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_trivial , & max_dif_above_powf_uv__uv_trivial ) != 1)
                          387     }+
                          387     else
                          389     }+
                          390   }+
         1          0 -   392   if (errors == 0 && passes == 1)
         1                392     1: T && T
                    0     392     2: T && F
                    0     392     3: F && _
                      -   392     MC/DC (cond 1): 1 - 3
                      -   392     MC/DC (cond 2): 1 - 2
                          394   }-
                          394   else
                          396   }+
         1                398   return errors
                          399 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_trivial_hundred()
        85 % ( 17/ 20) statement
-----------------------------------------------------------------------------

         1                413 FUNCTION powf_uv__uv_trivial_special_values()
         3          1     425   for (;ind < 3;)
         0          3 -   429     if (test_compare_float ( res , powf_uv__uv_trivial_special_values_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_trivial , & max_dif_above_powf_uv__uv_trivial ) != 1)
                          434     }+
                          434     else
                          436     }+
                          437   }+
         1          0 -   439   if (errors == 0 && passes == 3)
         1                439     1: T && T
                    0     439     2: T && F
                    0     439     3: F && _
                      -   439     MC/DC (cond 1): 1 - 3
                      -   439     MC/DC (cond 2): 1 - 2
                          441   }-
                          441   else
                          443   }+
         1                445   return errors
                          446 }

***TER  60 % (  6/ 10) of FUNCTION powf_uv__uv_trivial_special_values()
        85 % ( 17/ 20) statement
-----------------------------------------------------------------------------

         1                451 FUNCTION powf_uv__uv_trivial_main_test()
         1          0 -   462   if (errors == 0)
                          464   }-
                          464   else
                          466   }+
         1                520   return errors
                          521 }

***TER  75 % (  3/  4) of FUNCTION powf_uv__uv_trivial_main_test()
        93 % ( 13/ 14) statement
-----------------------------------------------------------------------------


***TER  61 % ( 45/ 74) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\powf_uv__uv_trivial.c
        86 % (132/154) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\sin.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         0            -     2 FUNCTION sin()
         0            -     4   return ( _Sinx ( x , 0 , 0 ) )
                            5 }

***TER   0 % (  0/  2) of FUNCTION sin()
         0 % (  0/  1) statement
-----------------------------------------------------------------------------


***TER   0 % (  0/  2) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\sin.c
         0 % (  0/  1) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\sqrt.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         0            -     2 FUNCTION sqrt()
                            6   switch (_Dunscale ( & xexp , & x ))
         0            -     8   case 2:
         0            -     9   case 0:
         0            -    10     return ( x )
         0            -    11   case 1:
         0          0 -    12     if (! ( ( * _Pmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) ))
         0            -    13       return ( x )
                           13     }-
         0            -    14   default:
         0          0 -    15     if (( ( * _Pmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) ))
         0            -    18       return ( _Nan . _Double )
                           19     }-
         0          0 -    20     if (( unsigned int ) xexp & 1)
                           21     }-
         0            -    28     return ( y )
                           29   }-
                           30 }

***TER   0 % (  0/ 15) of FUNCTION sqrt()
         0 % (  0/ 17) statement
-----------------------------------------------------------------------------


***TER   0 % (  0/ 15) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\sqrt.c
         0 % (  0/ 17) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xdint.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         0            -    60 FUNCTION _Dint()
         0          0 -    65   if (xchar == ( ( unsigned short ) ( ( 1 << ( 15 - 4 ) ) - 1 ) ))
         0          0 -    68     ternary-?: ( ps -> _Sh [ 3 ] & ( ( unsigned short ) ( ( 1 << 4 ) - 1 ) ) ) == 0 && ps -> _Sh [ 2 ] == 0 && ps -> _Sh [ 1 ] == 0 && ps -> _Sh [ 0 ] == 0
         0            -    68     return ( ( ps -> _Sh [ 3 ] & ( ( unsigned short ) ( ( 1 << 4 ) - 1 ) ) ) == 0 && ps -> _Sh [ 2 ] == 0 && ps -> _Sh [ 1 ] == 0 && ps -> _Sh [ 0 ] == 0 ? 1 : 2 )
                           68   }-
         0          0 -    70   else if (( ps -> _Sh [ 3 ] & ~ ( ( unsigned short ) 0x8000 ) ) == 0 && ps -> _Sh [ 2 ] == 0 && ps -> _Sh [ 1 ] == 0 && ps -> _Sh [ 0 ] == 0)
         0                 70     1: T && T && T && T
                    0      70     2: T && T && T && F
                    0      70     3: T && T && F && _
                    0      70     4: T && F && _ && _
                    0      70     5: F && _ && _ && _
                      -    70     MC/DC (cond 1): 1 - 5
                      -    70     MC/DC (cond 2): 1 - 4
                      -    70     MC/DC (cond 3): 1 - 3
                      -    70     MC/DC (cond 4): 1 - 2
         0            -    71     return ( 0 )
                           71   }-
         0          0 -    73   if (xchar <= 0)
         0            -    74     return ( 0 )
                           74   }-
         0          0 -    75   else if (( 48 + 4 + 1 ) <= xchar)
         0            -    81     return ( ( - 1 ) )
                           82   }-
                           83   else
                           95     switch (xchar)
         0            -    97     case 3:
         0            -    99     case 2:
         0            -   101     case 1:
                          103     }-
         0          0 -   104     ternary-?: frac != 0
         0            -   104     return ( frac != 0 ? ( - 1 ) : 0 )
                          105   }-
                          106 }

***TER   0 % (  0/ 25) of FUNCTION _Dint()
         0 % (  0/ 27) statement
-----------------------------------------------------------------------------


***TER   0 % (  0/ 25) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xdint.c
         0 % (  0/ 27) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xdnorm.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         0            -     3 FUNCTION _Dnorm()
         0          0 -    10   if (( ps -> _Sh [ 3 ] &= ( ( unsigned short ) ( ( 1 << 4 ) - 1 ) ) ) != 0 || ps -> _Sh [ 2 ] || ps -> _Sh [ 1 ] || ps -> _Sh [ 0 ])
         0                 10     1: T || _ || _ || _
         0                 10     2: F || T || _ || _
         0                 10     3: F || F || T || _
         0                 10     4: F || F || F || T
                    0      10     5: F || F || F || F
                      -    10     MC/DC (cond 1): 1 - 5
                      -    10     MC/DC (cond 2): 2 - 5
                      -    10     MC/DC (cond 3): 3 - 5
                      -    10     MC/DC (cond 4): 4 - 5
         0          0 -    12     for (;ps -> _Sh [ 3 ] == 0;)
                           16     }-
         0          0 -    17     for (;ps -> _Sh [ 3 ] < 1 << 4;)
                           26     }-
         0          0 -    27     for (;1 << ( 4 + 1 ) <= ps -> _Sh [ 3 ];)
                           36     }-
                           38   }-
         0            -    40   return ( xchar )
                           41 }

***TER   0 % (  0/ 14) of FUNCTION _Dnorm()
         0 % (  0/ 26) statement
-----------------------------------------------------------------------------


***TER   0 % (  0/ 14) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xdnorm.c
         0 % (  0/ 26) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xdscale.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         0            -     3 FUNCTION _Dscale()
         0            -     5   return ( _Dscalex ( px , lexp , 4 ) )
                            6 }

***TER   0 % (  0/  2) of FUNCTION _Dscale()
         0 % (  0/  1) statement
-----------------------------------------------------------------------------

         0            -     8 FUNCTION _Dscalex()
         0          0 -    13   if (xchar == ( ( unsigned short ) ( ( 1 << ( 15 - 4 ) ) - 1 ) ))
         0          0 -    15     ternary-?: ( ps -> _Sh [ 3 ] & ( ( unsigned short ) ( ( 1 << 4 ) - 1 ) ) ) != 0 || ps -> _Sh [ 2 ] != 0 || ps -> _Sh [ 1 ] != 0 || ps -> _Sh [ 0 ] != 0
         0            -    15     return ( ( short ) ( ( ps -> _Sh [ 3 ] & ( ( unsigned short ) ( ( 1 << 4 ) - 1 ) ) ) != 0 || ps -> _Sh [ 2 ] != 0 || ps -> _Sh [ 1 ] != 0 || ps -> _Sh [ 0 ] != 0 ? 2 : 1 ) )
                           15   }-
         0          0 -    16   else if (xchar == 0 && 0 < ( xchar = _Dnorm ( ps ) ))
         0                 16     1: T && T
                    0      16     2: T && F
                    0      16     3: F && _
                      -    16     MC/DC (cond 1): 1 - 3
                      -    16     MC/DC (cond 2): 1 - 2
         0            -    17     return ( 0 )
                           17   }-
         0          0 -    19   if (0 < lexp && ( ( unsigned short ) ( ( 1 << ( 15 - 4 ) ) - 1 ) ) - xchar <= lexp)
         0                 19     1: T && T
                    0      19     2: T && F
                    0      19     3: F && _
                      -    19     MC/DC (cond 1): 1 - 3
                      -    19     MC/DC (cond 2): 1 - 2
         0          0 -    21     ternary-?: ps -> _Sh [ 3 ] & ( ( unsigned short ) 0x8000 )
         0            -    22     return ( 1 )
                           23   }-
         0          0 -    24   else if (- xchar < lexp)
         0            -    28     return ( ( - 1 ) )
                           29   }-
                           30   else
         0          0 -    36     if (lexp < - ( 48 + 1 + 4 ) || 0 <= lexp)
         0                 36       1: T || _
         0                 36       2: F || T
                    0      36       3: F || F
                      -    36       MC/DC (cond 1): 1 - 3
                      -    36       MC/DC (cond 2): 2 - 3
         0            -    42       return ( 0 )
                           43     }-
                           44     else
         0          0 -    49       for (;xexp <= - 16;)
         0          0 -    51         ternary-?: psx != 0
                           56       }-
         0          0 -    57       if (( xexp = ( short ) - xexp ) != 0)
         0          0 -    59         ternary-?: psx != 0
                           67       }-
         0          0 -    70       if (psx != 0)
         0          0 -    74         if (round_mode == 4)
                           75         }-
                           77         switch (round_mode)
         0            -    79         case 0:
         0            -    80           break
         0            -    82         case 2:
         0          0 -    83           if (! sign)
                           84           }-
         0            -    85           break
         0            -    87         case 3:
         0          0 -    88           if (sign)
                           89           }-
         0            -    90           break
         0            -    92         default:
         0          0 -    94           if (( 0x8000 < psx || ( 0x8000 == psx && ( ps -> _Sh [ 0 ] & 0x0001 ) != 0 ) ))
         0                 94             1: (T || (_ && _))
         0                 94             2: (F || (T && T))
                    0      94             3: (F || (T && F))
                    0      94             4: (F || (F && _))
                      -    94             MC/DC (cond 1): 1 - 3, 1 - 4
                      -    94             MC/DC (cond 2): 2 - 4
                      -    94             MC/DC (cond 3): 2 - 3
                           95           }-
         0            -    96           break
                           97         }-
         0          0 -   102         if (roundup && ( ++ ps -> _Sh [ 0 ] & 0xffff ) == 0 && ( ++ ps -> _Sh [ 1 ] & 0xffff ) == 0 && ( ++ ps -> _Sh [ 2 ] & 0xffff ) == 0)
         0                102           1: T && T && T && T
                    0     102           2: T && T && T && F
                    0     102           3: T && T && F && _
                    0     102           4: T && F && _ && _
                    0     102           5: F && _ && _ && _
                      -   102           MC/DC (cond 1): 1 - 5
                      -   102           MC/DC (cond 2): 1 - 4
                      -   102           MC/DC (cond 3): 1 - 3
                      -   102           MC/DC (cond 4): 1 - 2
                          103         }-
                          104       }-
         0          0 -   109       if (ps -> _Sh [ 3 ] == sign && ps -> _Sh [ 2 ] == 0 && ps -> _Sh [ 1 ] == 0 && ps -> _Sh [ 0 ] == 0)
         0                109         1: T && T && T && T
                    0     109         2: T && T && T && F
                    0     109         3: T && T && F && _
                    0     109         4: T && F && _ && _
                    0     109         5: F && _ && _ && _
                      -   109         MC/DC (cond 1): 1 - 5
                      -   109         MC/DC (cond 2): 1 - 4
                      -   109         MC/DC (cond 3): 1 - 3
                      -   109         MC/DC (cond 4): 1 - 2
         0            -   110         return ( 0 )
                          110       }-
                          111       else
         0            -   112         return ( ( - 1 ) )
                          112       }-
                          113     }-
                          114   }-
                          115 }

***TER   0 % (  0/ 69) of FUNCTION _Dscalex()
         0 % (  0/ 58) statement
-----------------------------------------------------------------------------


***TER   0 % (  0/ 71) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xdscale.c
         0 % (  0/ 59) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xdtest.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         0            -     4 FUNCTION _Dtest()
         0          0 -     8   if (( ps -> _Sh [ 3 ] & ( ( unsigned short ) ( 0x7fff & ~ ( ( unsigned short ) ( ( 1 << 4 ) - 1 ) ) ) ) ) == ( ( unsigned short ) ( ( 1 << ( 15 - 4 ) ) - 1 ) ) << 4)
         0          0 -    10     ternary-?: ( ps -> _Sh [ 3 ] & ( ( unsigned short ) ( ( 1 << 4 ) - 1 ) ) ) != 0 || ps -> _Sh [ 2 ] != 0 || ps -> _Sh [ 1 ] != 0 || ps -> _Sh [ 0 ] != 0
         0            -    10     return ( ( short ) ( ( ps -> _Sh [ 3 ] & ( ( unsigned short ) ( ( 1 << 4 ) - 1 ) ) ) != 0 || ps -> _Sh [ 2 ] != 0 || ps -> _Sh [ 1 ] != 0 || ps -> _Sh [ 0 ] != 0 ? 2 : 1 ) )
                           10   }-
         0          0 -    12   else if (( ps -> _Sh [ 3 ] & ~ ( ( unsigned short ) 0x8000 ) ) != 0 || ps -> _Sh [ 2 ] != 0 || ps -> _Sh [ 1 ] != 0 || ps -> _Sh [ 0 ] != 0)
         0                 12     1: T || _ || _ || _
         0                 12     2: F || T || _ || _
         0                 12     3: F || F || T || _
         0                 12     4: F || F || F || T
                    0      12     5: F || F || F || F
                      -    12     MC/DC (cond 1): 1 - 5
                      -    12     MC/DC (cond 2): 2 - 5
                      -    12     MC/DC (cond 3): 3 - 5
                      -    12     MC/DC (cond 4): 4 - 5
         0          0 -    13     ternary-?: ( ps -> _Sh [ 3 ] & ( ( unsigned short ) ( 0x7fff & ~ ( ( unsigned short ) ( ( 1 << 4 ) - 1 ) ) ) ) ) == 0
         0            -    13     return ( ( ps -> _Sh [ 3 ] & ( ( unsigned short ) ( 0x7fff & ~ ( ( unsigned short ) ( ( 1 << 4 ) - 1 ) ) ) ) ) == 0 ? ( - 2 ) : ( - 1 ) )
                           13   }-
                           14   else
         0            -    15     return ( 0 )
                           15   }-
                           16 }

***TER   0 % (  0/ 16) of FUNCTION _Dtest()
         0 % (  0/  6) statement
-----------------------------------------------------------------------------

         0            -    18 FUNCTION _Plsw()
         0            -    20   return ( & ( ( _Dval * ) ( char * ) px ) -> _Sh [ 0 ] )
                           21 }

***TER   0 % (  0/  2) of FUNCTION _Plsw()
         0 % (  0/  1) statement
-----------------------------------------------------------------------------

         0            -    23 FUNCTION _Pmsw()
         0            -    25   return ( & ( ( _Dval * ) ( char * ) px ) -> _Sh [ 3 ] )
                           26 }

***TER   0 % (  0/  2) of FUNCTION _Pmsw()
         0 % (  0/  1) statement
-----------------------------------------------------------------------------


***TER   0 % (  0/ 20) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xdtest.c
         0 % (  0/  8) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xdunscal.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         0            -     3 FUNCTION _Dunscale()
         0          0 -     8   if (xchar == ( ( unsigned short ) ( ( 1 << ( 15 - 4 ) ) - 1 ) ))
         0          0 -    12     ternary-?: ( ps -> _Sh [ 3 ] & ( ( unsigned short ) ( ( 1 << 4 ) - 1 ) ) ) != 0 || ps -> _Sh [ 2 ] != 0 || ps -> _Sh [ 1 ] != 0 || ps -> _Sh [ 0 ] != 0
         0            -    12     return ( ( ps -> _Sh [ 3 ] & ( ( unsigned short ) ( ( 1 << 4 ) - 1 ) ) ) != 0 || ps -> _Sh [ 2 ] != 0 || ps -> _Sh [ 1 ] != 0 || ps -> _Sh [ 0 ] != 0 ? 2 : 1 )
                           13   }-
         0          0 -    14   else if (0 < xchar || ( xchar = _Dnorm ( ps ) ) <= 0)
         0                 14     1: T || _
         0                 14     2: F || T
                    0      14     3: F || F
                      -    14     MC/DC (cond 1): 1 - 3
                      -    14     MC/DC (cond 2): 2 - 3
         0            -    18     return ( ( - 1 ) )
                           19   }-
                           20   else
         0            -    23     return ( 0 )
                           24   }-
                           25 }

***TER   0 % (  0/ 12) of FUNCTION _Dunscale()
         0 % (  0/ 11) statement
-----------------------------------------------------------------------------


***TER   0 % (  0/ 12) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xdunscal.c
         0 % (  0/ 11) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xfdint.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

     38025                  5 FUNCTION _FDint()
        44      37981      11   if (xchar == ( ( unsigned short ) ( ( 1 << ( 15 - 7 ) ) - 1 ) ))
        32         12      13     ternary-?: ( ps -> _Sh [ 1 ] & ( ( unsigned short ) ( ( 1 << 7 ) - 1 ) ) ) == 0 && ps -> _Sh [ 0 ] == 0
        44                 13     return ( ( ps -> _Sh [ 1 ] & ( ( unsigned short ) ( ( 1 << 7 ) - 1 ) ) ) == 0 && ps -> _Sh [ 0 ] == 0 ? 1 : 2 )
                           13   }+
        30      37951      14   else if (( ps -> _Sh [ 1 ] & ~ ( ( unsigned short ) 0x8000 ) ) == 0 && ps -> _Sh [ 0 ] == 0)
        30                 14     1: T && T
                  315      14     2: T && F
                37636      14     3: F && _
                           14     MC/DC (cond 1): 1 + 3
                           14     MC/DC (cond 2): 1 + 2
        30                 15     return ( 0 )
                           15   }+
         0      37951 -    17   if (xchar <= 0)
         0            -    18     return ( 0 )
                           18   }+
       542      37409      19   else if (( 16 + 7 + 1 ) <= xchar)
       542                 23     return ( ( - 1 ) )
                           24   }+
                           25   else
      6549      30860      37     if (0 < xchar)
                           38     }+
     22824      14585      39     ternary-?: frac != 0
     37409                 39     return ( frac != 0 ? ( - 1 ) : 0 )
                           40   }-
                           41 }

***TER  91 % ( 20/ 22) of FUNCTION _FDint()
        96 % ( 22/ 23) statement
-----------------------------------------------------------------------------


***TER  91 % ( 20/ 22) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xfdint.c
        96 % ( 22/ 23) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xfdnorm.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

     14797                  3 FUNCTION _FDnorm()
       441      14356       9   if (( ps -> _Sh [ 1 ] &= ( ( unsigned short ) ( ( 1 << 7 ) - 1 ) ) ) != 0 || ps -> _Sh [ 0 ])
       126                  9     1: T || _
       315                  9     2: F || T
                14356       9     3: F || F
                            9     MC/DC (cond 1): 1 + 3
                            9     MC/DC (cond 2): 2 + 3
       315        126      11     if (ps -> _Sh [ 1 ] == 0)
                           12     }+
      1155        441      13     for (;ps -> _Sh [ 1 ] < 1 << 7;)
                           18     }+
       672        441      19     for (;1 << ( 7 + 1 ) <= ps -> _Sh [ 1 ];)
                           24     }+
                           26   }+
     14797                 28   return ( xchar )
                           29 }

***TER 100 % ( 12/ 12) of FUNCTION _FDnorm()
       100 % ( 19/ 19) statement
-----------------------------------------------------------------------------


***TER 100 % ( 12/ 12) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xfdnorm.c
       100 % ( 19/ 19) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xfdscale.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

     36641                  5 FUNCTION _FDscale()
     36641                  7   return ( _FDscalex ( px , lexp , 4 ) )
                            8 }

***TER 100 % (  2/  2) of FUNCTION _FDscale()
       100 % (  1/  1) statement
-----------------------------------------------------------------------------

     36641                 10 FUNCTION _FDscalex()
         0      36641 -    15   if (xchar == ( ( unsigned short ) ( ( 1 << ( 15 - 7 ) ) - 1 ) ))
         0          0 -    17     ternary-?: ( ps -> _Sh [ 1 ] & ( ( unsigned short ) ( ( 1 << 7 ) - 1 ) ) ) != 0 || ps -> _Sh [ 0 ] != 0
         0            -    17     return ( ( short ) ( ( ps -> _Sh [ 1 ] & ( ( unsigned short ) ( ( 1 << 7 ) - 1 ) ) ) != 0 || ps -> _Sh [ 0 ] != 0 ? 2 : 1 ) )
                           17   }+
         0      36641 -    18   else if (xchar == 0 && 0 < ( xchar = _FDnorm ( ps ) ))
         0                 18     1: T && T
                    0      18     2: T && F
                36641      18     3: F && _
                      -    18     MC/DC (cond 1): 1 - 3
                      -    18     MC/DC (cond 2): 1 - 2
         0            -    19     return ( 0 )
                           19   }+
        87      36554      21   if (0 < lexp && ( ( unsigned short ) ( ( 1 << ( 15 - 7 ) ) - 1 ) ) - xchar <= lexp)
        87                 21     1: T && T
                 3017      21     2: T && F
                33537      21     3: F && _
                           21     MC/DC (cond 1): 1 + 3
                           21     MC/DC (cond 2): 1 + 2
         0         87 -    23     ternary-?: ps -> _Sh [ 1 ] & ( ( unsigned short ) 0x8000 )
        87                 24     return ( 1 )
                           25   }+
     36371        183      26   else if (- xchar < lexp)
     36371                 30     return ( ( - 1 ) )
                           31   }+
                           32   else
       179          4      38     if (lexp < - ( 16 + 1 + 7 ) || 0 <= lexp)
       179                 38       1: T || _
         0                 38       2: F || T
                    4      38       3: F || F
                           38       MC/DC (cond 1): 1 + 3
                      -    38       MC/DC (cond 2): 2 - 3
       179                 42       return ( 0 )
                           43     }+
                           44     else
         4          0 -    49       if (xexp <= - 16)
         0          4 -    51         ternary-?: psx != 0
                           55       }+
         4          0 -    56       if (( xexp = ( short ) - xexp ) != 0)
         4          0 -    58         ternary-?: psx != 0
                           62       }+
         4          0 -    65       if (psx != 0)
         4          0 -    69         if (round_mode == 4)
                           70         }+
                           71         switch (round_mode)
         0            -    73         case 0:
         0            -    74           break
         0            -    76         case 2:
         0          0 -    77           if (! sign)
                           78           }-
         0            -    79           break
         0            -    81         case 3:
         0          0 -    82           if (sign)
                           83           }-
         0            -    84           break
         4                 86         default:
         4          0 -    88           if (( 0x8000 < psx || ( 0x8000 == psx && ( ps -> _Sh [ 0 ] & 0x0001 ) != 0 ) ))
         4                 88             1: (T || (_ && _))
         0                 88             2: (F || (T && T))
                    0      88             3: (F || (T && F))
                    0      88             4: (F || (F && _))
                      -    88             MC/DC (cond 1): 1 - 3, 1 - 4
                      -    88             MC/DC (cond 2): 2 - 4
                      -    88             MC/DC (cond 3): 2 - 3
                           89           }+
         4                 90           break
                           91         }+
         0          4 -    94         if (roundup && ( ++ ps -> _Sh [ 0 ] & 0xffff ) == 0)
         0                 94           1: T && T
                    4      94           2: T && F
                    0      94           3: F && _
                      -    94           MC/DC (cond 1): 1 - 3
                      -    94           MC/DC (cond 2): 1 - 2
                           95         }+
                           96       }+
         0          4 -    99       if (ps -> _Sh [ 1 ] == sign && ps -> _Sh [ 0 ] == 0)
         0                 99         1: T && T
                    4      99         2: T && F
                    0      99         3: F && _
                      -    99         MC/DC (cond 1): 1 - 3
                      -    99         MC/DC (cond 2): 1 - 2
         0            -   100         return ( 0 )
                          100       }+
                          101       else
         4                102         return ( ( - 1 ) )
                          102       }-
                          103     }-
                          104   }-
                          105 }

***TER  43 % ( 28/ 65) of FUNCTION _FDscalex()
        78 % ( 40/ 51) statement
-----------------------------------------------------------------------------


***TER  45 % ( 30/ 67) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xfdscale.c
        79 % ( 41/ 52) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xfdtest.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

      4714                  4 FUNCTION _FDtest()
         0       4714 -    28   if (( ps -> _Sh [ 1 ] & ( ( unsigned short ) ( 0x7fff & ~ ( ( unsigned short ) ( ( 1 << 7 ) - 1 ) ) ) ) ) == ( ( unsigned short ) ( ( 1 << ( 15 - 7 ) ) - 1 ) ) << 7)
         0          0 -    30     ternary-?: ( ps -> _Sh [ 1 ] & ( ( unsigned short ) ( ( 1 << 7 ) - 1 ) ) ) != 0 || ps -> _Sh [ 0 ] != 0
         0            -    30     return ( ( short ) ( ( ps -> _Sh [ 1 ] & ( ( unsigned short ) ( ( 1 << 7 ) - 1 ) ) ) != 0 || ps -> _Sh [ 0 ] != 0 ? 2 : 1 ) )
                           30   }+
      4643         71      31   else if (( ps -> _Sh [ 1 ] & ~ ( ( unsigned short ) 0x8000 ) ) != 0 || ps -> _Sh [ 0 ] != 0)
      4543                 31     1: T || _
       100                 31     2: F || T
                   71      31     3: F || F
                           31     MC/DC (cond 1): 1 + 3
                           31     MC/DC (cond 2): 2 + 3
       160       4483      32     ternary-?: ( ps -> _Sh [ 1 ] & ( ( unsigned short ) ( 0x7fff & ~ ( ( unsigned short ) ( ( 1 << 7 ) - 1 ) ) ) ) ) == 0
      4643                 32     return ( ( ps -> _Sh [ 1 ] & ( ( unsigned short ) ( 0x7fff & ~ ( ( unsigned short ) ( ( 1 << 7 ) - 1 ) ) ) ) ) == 0 ? ( - 2 ) : ( - 1 ) )
                           32   }+
                           33   else
        71                 36     return ( 0 )
                           37   }-
                           38 }

***TER  71 % ( 10/ 14) of FUNCTION _FDtest()
        92 % ( 11/ 12) statement
-----------------------------------------------------------------------------

         0            -    40 FUNCTION _FPlsw()
         0            -    42   return ( & ( ( _Fval * ) ( char * ) px ) -> _Sh [ 0 ] )
                           43 }

***TER   0 % (  0/  2) of FUNCTION _FPlsw()
         0 % (  0/  1) statement
-----------------------------------------------------------------------------

      2142                 45 FUNCTION _FPmsw()
      2142                 47   return ( & ( ( _Fval * ) ( char * ) px ) -> _Sh [ 1 ] )
                           48 }

***TER 100 % (  2/  2) of FUNCTION _FPmsw()
       100 % (  1/  1) statement
-----------------------------------------------------------------------------


***TER  67 % ( 12/ 18) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xfdtest.c
        86 % ( 12/ 14) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xfdunsca.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

    198859                  3 FUNCTION _FDunscale()
        21     198838       8   if (xchar == ( ( unsigned short ) ( ( 1 << ( 15 - 7 ) ) - 1 ) ))
         7         14      12     ternary-?: ( ps -> _Sh [ 1 ] & ( ( unsigned short ) ( ( 1 << 7 ) - 1 ) ) ) != 0 || ps -> _Sh [ 0 ] != 0
        21                 12     return ( ( ps -> _Sh [ 1 ] & ( ( unsigned short ) ( ( 1 << 7 ) - 1 ) ) ) != 0 || ps -> _Sh [ 0 ] != 0 ? 2 : 1 )
                           13   }+
    184482      14356      14   else if (0 < xchar || ( xchar = _FDnorm ( ps ) ) <= 0)
    184041                 14     1: T || _
       441                 14     2: F || T
                14356      14     3: F || F
                           14     MC/DC (cond 1): 1 + 3
                           14     MC/DC (cond 2): 2 + 3
    184482                 18     return ( ( - 1 ) )
                           19   }+
                           20   else
     14356                 23     return ( 0 )
                           24   }-
                           25 }

***TER 100 % ( 12/ 12) of FUNCTION _FDunscale()
       100 % ( 11/ 11) statement
-----------------------------------------------------------------------------


***TER 100 % ( 12/ 12) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xfdunsca.c
       100 % ( 11/ 11) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xfenv0.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================


***TER 100 % (  0/  0) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xfenv0.c
       100 % (  0/  0) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xferaise.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

      1060                  2 FUNCTION _Feraise()
      1060          0 -     7   if (( errh & 2 ) != 0)
       655        405       9     if (( except & ( 0x04 | 0x08 ) ) != 0)
                           10     }+
                           12   }+
         0       1060 -    14   if (( errh & 1 ) == 0)
                           15   }+
       394        666      16   else if (( except & 0x01 ) != 0)
                           17   }+
       666          0 -    18   else if (( except & ( 0x02 | 0x08 | 0x04 ) ) != 0)
                           19   }+
      1060                 27 }

***TER  75 % (  9/ 12) of FUNCTION _Feraise()
        91 % ( 10/ 11) statement
-----------------------------------------------------------------------------


***TER  75 % (  9/ 12) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xferaise.c
        91 % ( 10/ 11) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xfexp.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         0            -    18 FUNCTION expf()
                           21   switch (_FDtest ( & x ))
         0            -    23   case 2:
         0            -    24     return ( x )
         0            -    26   case 1:
         0          0 -    27     ternary-?: ( ( * _FPmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) )
         0            -    27     return ( ( ( * _FPmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) ) ? 0.0F : x )
         0            -    29   case 0:
         0            -    30     return ( 1.0F )
         0            -    32   default:
         0            -    34     return ( x )
                           35   }-
                           36 }

***TER   0 % (  0/ 11) of FUNCTION expf()
         0 % (  0/  7) statement
-----------------------------------------------------------------------------

      1257                 38 FUNCTION _FExp()
        71       1186      45   if (0 <= errx || 0 <= erry)
        71                 45     1: T || _
         0                 45     2: F || T
                 1186      45     3: F || F
                           45     MC/DC (cond 1): 1 + 3
                      -    45     MC/DC (cond 2): 2 - 3
         0         71 -    48     if (errx == 2)
         0            -    49       return ( 2 )
                           49     }+
         0         71 -    50     else if (erry == 2)
         0            -    53       return ( 2 )
                           54     }+
         0         71 -    55     else if (erry == 0)
         0          0 -    56       if (* px != _FInf . _Float)
         0            -    59         return ( 0 )
                           60       }-
                           61       else
         0            -    65         return ( 2 )
                           66       }-
                           66     }+
         0         71 -    67     else if (erry == 1)
         0          0 -    68       if (* px != - _FInf . _Float)
         0            -    71         return ( 1 )
                           72       }-
                           73       else
         0            -    77         return ( 2 )
                           78       }-
                           78     }+
        71          0 -    79     else if (errx == 0)
                           82       switch (errx = _FDscale ( px , eoff ))
         3                 84       case 0:
         3                 86         break
         2                 88       case 1:
                           90       }+
        71                 91       return ( errx )
                           92     }-
         0          0 -    93     else if (* px == _FInf . _Float)
         0            -    96       return ( 1 )
                           97     }-
                           98     else
         0            -   101       return ( 0 )
                          102     }-
                          103   }+
         0       1186 -   104   else if (* px < - hugexp)
         0            -   107     return ( 0 )
                          108   }+
         0       1186 -   109   else if (hugexp < * px)
         0            -   113     return ( 1 )
                          114   }+
                          115   else
       526        660     118     ternary-?: g < 0.0F
       210        976     122     if (- _FEps . _Float < g && g < _FEps . _Float)
       210                122       1: T && T
                  509     122       2: T && F
                  467     122       3: F && _
                          122       MC/DC (cond 1): 1 + 3
                          122       MC/DC (cond 2): 1 + 2
                          123     }+
                          124     else
                          132     }+
                          134     switch (errx = _FDscale ( px , ( long ) xexp + eoff ))
       176                136     case 0:
       176                138       break
        85                140     case 1:
                          142     }+
      1186                143     return ( errx )
                          144   }-
                          145 }

***TER  51 % ( 25/ 49) of FUNCTION _FExp()
        58 % ( 35/ 60) statement
-----------------------------------------------------------------------------


***TER  42 % ( 25/ 60) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xfexp.c
        52 % ( 35/ 67) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xflog.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         0            -    25 FUNCTION _FLog()
                           29   switch (_FDunscale ( & xexp , & x ))
         0            -    31   case 2:
         0            -    32     return ( x )
         0            -    34   case 0:
         0            -    36     return ( - _FInf . _Float )
         0            -    38   case 1:
         0          0 -    39     if (! ( ( * _FPmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) ))
         0            -    40       return ( x )
                           40     }-
         0            -    42   default:
         0          0 -    43     if (( ( * _FPmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) ))
         0            -    46       return ( _FNan . _Float )
                           47     }-
                           48     else
         0          0 -    52       if (x < rthalf)
                           56       }-
         0          0 -    63       if (baseflag == 0)
                           65       }-
         0          0 -    66       else if (0 < baseflag)
                           69       }-
                           70       else
                           73       }-
         0            -    74       return ( z )
                           75     }-
                           76   }-
                           77 }

***TER   0 % (  0/ 20) of FUNCTION _FLog()
         0 % (  0/ 25) statement
-----------------------------------------------------------------------------

      1380                 79 FUNCTION _FLogpoly()
      1380                 81   return ( ( ( p [ 0 ] * w + p [ 1 ] ) * w + p [ 2 ] ) )
                           82 }

***TER 100 % (  2/  2) of FUNCTION _FLogpoly()
       100 % (  1/  1) statement
-----------------------------------------------------------------------------


***TER   9 % (  2/ 22) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xflog.c
         4 % (  1/ 26) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xfprec.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

       558                  3 FUNCTION _FXp_getw()
         0        558 -     5   if (n == 0)
         0            -     6     return ( 0.0F )
                            6   }+
        38        520       7   else if (n == 1 || p [ 0 ] == 0.0F || p [ 1 ] == 0.0F)
         0                  7     1: T || _ || _
        38                  7     2: F || T || _
         0                  7     3: F || F || T
                  520       7     4: F || F || F
                      -     7     MC/DC (cond 1): 1 - 4
                            7     MC/DC (cond 2): 2 + 4
                      -     7     MC/DC (cond 3): 3 - 4
        38                  8     return ( p [ 0 ] )
                            8   }+
         1        519       9   else if (n == 2 || p [ 2 ] == 0.0F)
         0                  9     1: T || _
         1                  9     2: F || T
                  519       9     3: F || F
                      -     9     MC/DC (cond 1): 1 - 3
                            9     MC/DC (cond 2): 2 + 3
         1                 10     return ( p [ 0 ] + p [ 1 ] )
                           10   }+
                           11   else
       519          0 -    16     if (4 <= n)
                           17     }+
       330        189      18     if (p01 - p [ 0 ] == p [ 1 ])
       330                 19       return ( p01 + p2 )
                           19     }+
                           20     else
       189                 21       return ( p [ 0 ] + ( p [ 1 ] + p2 ) )
                           21     }-
                           22   }-
                           23 }

***TER  71 % ( 15/ 21) of FUNCTION _FXp_getw()
        92 % ( 12/ 13) statement
-----------------------------------------------------------------------------

      1712                 25 FUNCTION _FXp_setw()
         0       1712 -    30   if (n <= 0)
                           31   }+
       114       1598      32   else if (n == 1 || ( errx = _FDunscale ( & xexp , & x0 ) ) == 0)
         0                 32     1: T || _
       114                 32     2: F || T
                 1598      32     3: F || F
                      -    32     MC/DC (cond 1): 1 - 3
                           32     MC/DC (cond 2): 2 + 3
                           33   }+
         0       1598 -    34   else if (0 < errx)
                           38   }+
                           39   else
         0       1598 -    46     if (( 24 & 1 ) != 0 && 2 < n && p [ 1 ] != 0.0F)
         0                 46       1: T && T && T
                    0      46       2: T && T && F
                    0      46       3: T && F && _
                 1598      46       4: F && _ && _
                      -    46       MC/DC (cond 1): 1 - 4
                      -    46       MC/DC (cond 2): 1 - 3
                      -    46       MC/DC (cond 3): 1 - 2
         0          0 -    53       if (3 < n && p [ 2 ] != 0.0F)
         0                 53         1: T && T
                    0      53         2: T && F
                    0      53         3: F && _
                      -    53         MC/DC (cond 1): 1 - 3
                      -    53         MC/DC (cond 2): 1 - 2
                           54       }-
                           55     }+
       520       1078      56     else if (2 < n)
                           57     }+
                           58   }+
      1712                 59   return ( p )
                           60 }

***TER  48 % ( 10/ 21) of FUNCTION _FXp_setw()
        58 % ( 14/ 24) statement
-----------------------------------------------------------------------------

     24016                 62 FUNCTION _FXp_addh()
         0      24016 -    67   if (n == 0)
                           68   }+
         0      24016 -    69   else if (0 < ( errx = _FDunscale ( & xexp , & xscaled ) ))
         0          0 -    70     if (errx == 2 || ( errx = _FDtest ( & p [ 0 ] ) ) <= 0)
         0                 70       1: T || _
         0                 70       2: F || T
                    0      70       3: F || F
                      -    70       MC/DC (cond 1): 1 - 3
                      -    70       MC/DC (cond 2): 2 - 3
                           71     }-
         0          0 -    72     else if (errx == 2 || ( ( * _FPmsw ( & ( x0 ) ) ) & ( ( unsigned short ) 0x8000 ) ) == ( ( * _FPmsw ( & ( p [ 0 ] ) ) ) & ( ( unsigned short ) 0x8000 ) ))
         0                 72       1: T || _
         0                 72       2: F || T
                    0      72       3: F || F
                      -    72       MC/DC (cond 1): 1 - 3
                      -    72       MC/DC (cond 2): 2 - 3
                           73     }-
                           74     else
         0          0 -    78       if (1 < n)
                           79       }-
                           80     }-
                           80   }+
     23080        936      81   else if (errx < 0)
     86589       1982      86     for (;k < n;)
         0      86589 -    93       if (0 < ( errx = _FDunscale ( & yexp , & yscaled ) ))
         0            -    94         break
                           94       }+
     13217      73372      95       else if (errx == 0)
      9369       3848      98         if (k + 1 < n)
                           99         }+
     13217                100         break
                          101       }+
        54      73318     103       else if (( diff = ( long ) yexp - xexp ) <= - mybits && x0 != 0.0F)
        54                103         1: T && T
                 7016     103         2: T && F
                66302     103         3: F && _
                          103         MC/DC (cond 1): 1 + 3
                          103         MC/DC (cond 2): 1 + 2
        54         54     107         for (;++ j < n && p [ j ] != 0.0F;)
        54                107           1: T && T
                    0     107           2: T && F
                   54     107           3: F && _
                          107           MC/DC (cond 1): 1 + 3
                      -   107           MC/DC (cond 2): 1 - 2
                          108         }+
         0         54 -   109         if (j < n - 1)
                          110         }+
        54          0 -   111         else if (j == n)
                          112         }+
        54         54     113         for (;k < j;)
                          114         }+
                          117       }+
     40337      32981     118       else if (mybits <= diff && x0 != 0.0F)
     40337                118         1: T && T
                    0     118         2: T && F
                32981     118         3: F && _
                          118         MC/DC (cond 1): 1 + 3
                      -   118         MC/DC (cond 2): 1 - 2
                          122       }+
                          123       else
       154      32827     125         if (( p [ k ] += x0 ) == 0.0F)
       348        154     127           for (;++ m < n && ( p [ m - 1 ] = p [ m ] ) != 0.0F;)
       348                127             1: T && T
                   38     127             2: T && F
                  116     127             3: F && _
                          127             MC/DC (cond 1): 1 + 3
                          127             MC/DC (cond 2): 1 + 2
                          127           }+
        38        116     128           if (p [ k ] == 0.0F)
        38                129             break
                          129           }+
                          130         }+
      5301      27642     133         if (prevexp - mybits < xexp)
       154       5147     137           if (( p [ k ] -= x0 ) == 0.0F)
       218        154     139             for (;++ m < n && ( p [ m - 1 ] = p [ m ] ) != 0.0F;)
       218                139               1: T && T
                   16     139               2: T && F
                  138     139               3: F && _
                          139               MC/DC (cond 1): 1 + 3
                          139               MC/DC (cond 2): 1 + 2
                          139             }+
                          140           }+
      1914       3387     141           if (-- k == 0)
                          142           }+
                          143           else
                          148           }+
                          149         }+
      7843      19799     150         else if (k + 1 == n)
      7843                151           break
                          151         }+
                          152         else
      7445      12354     161           ternary-?: x0 != 0.0F
                          164         }+
                          165       }+
                          166     }+
                          167   }+
     24016                168   return ( p )
                          169 }

***TER  74 % ( 52/ 70) of FUNCTION _FXp_addh()
        87 % ( 76/ 87) statement
-----------------------------------------------------------------------------

      2200                171 FUNCTION _FXp_mulh()
      2200          0 -   177   if (0 < n)
         0       2200 -   180     if (0 <= ( errx = _FDtest ( & buf [ 0 ] ) ))
         0          0 -   182       if (errx == 2)
                          183       }-
         0          0 -   185       if (0 < errx && 1 < n)
         0                185         1: T && T
                    0     185         2: T && F
                    0     185         3: F && _
                      -   185         MC/DC (cond 1): 1 - 3
                      -   185         MC/DC (cond 2): 1 - 2
                          186       }-
         0            -   187       return ( p )
                          188     }+
                          190   }+
      8724       2162     192   for (;k < n;)
      8686       6524     194     for (;j < 4;)
      6486       2200     195       if (k + j < n && p [ k + j ] != 0.0F)
      6486                195         1: T && T
                   38     195         2: T && F
                 2162     195         3: F && _
                          195         MC/DC (cond 1): 1 + 3
                          195         MC/DC (cond 2): 1 + 2
                          199       }+
                          200       else
      2200                204         break
                          205       }+
                          205     }+
        38       8686     207     if (buf [ 0 ] == 0.0F)
        38                208       break
                          208     }+
                          209     else
     19496       2162     221       for (;++ i < j;)
      6524      12972     222         if (( buf [ i - 1 ] = buf [ i ] ) == 0.0F)
      6524                223           break
                          223         }+
                          223       }+
                          224     }+
                          225   }+
      2200                226   return ( p )
                          227 }

***TER  70 % ( 21/ 30) of FUNCTION _FXp_mulh()
        85 % ( 35/ 41) statement
-----------------------------------------------------------------------------

         0            -   229 FUNCTION _FXp_setn()
         0            -   240   return ( p )
                          241 }

***TER   0 % (  0/  2) of FUNCTION _FXp_setn()
         0 % (  0/  4) statement
-----------------------------------------------------------------------------

         0            -   243 FUNCTION _FXp_movx()
         0            -   246   return ( p )
                          247 }

***TER   0 % (  0/  2) of FUNCTION _FXp_movx()
         0 % (  0/  2) statement
-----------------------------------------------------------------------------

      1680                249 FUNCTION _FXp_addx()
      5528       1680     254   for (;k < m && q [ k ] != 0.0F;)
      5528                254     1: T && T
                   38     254     2: T && F
                 1642     254     3: F && _
                          254     MC/DC (cond 1): 1 + 3
                          254     MC/DC (cond 2): 1 + 2
                          255   }+
      1680                256   return ( p )
                          257 }

***TER 100 % (  6/  6) of FUNCTION _FXp_addx()
       100 % (  6/  6) statement
-----------------------------------------------------------------------------


***TER  68 % (104/152) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xfprec.c
        81 % (143/177) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xfvalues.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================


***TER 100 % (  0/  0) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xfvalues.c
       100 % (  0/  0) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xlog.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         0            -    28 FUNCTION _Log()
                           32   switch (_Dunscale ( & xexp , & x ))
         0            -    34   case 2:
         0            -    35     return ( x )
         0            -    37   case 0:
         0            -    39     return ( - _Inf . _Double )
         0            -    41   case 1:
         0          0 -    42     if (! ( ( * _Pmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) ))
         0            -    43       return ( x )
                           43     }-
         0            -    45   default:
         0          0 -    46     if (( ( * _Pmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) ))
         0            -    49       return ( _Nan . _Double )
                           50     }-
                           51     else
         0          0 -    55       if (x < rthalf)
                           59       }-
         0          0 -    66       if (baseflag == 0)
                           68       }-
         0          0 -    69       else if (0 < baseflag)
                           72       }-
                           73       else
                           76       }-
         0            -    77       return ( z )
                           78     }-
                           79   }-
                           80 }

***TER   0 % (  0/ 20) of FUNCTION _Log()
         0 % (  0/ 25) statement
-----------------------------------------------------------------------------

         0            -    82 FUNCTION _Logpoly()
         0            -    84   return ( ( ( ( ( ( ( p [ 0 ] * w + p [ 1 ] ) * w + p [ 2 ] ) * w + p [ 3 ] ) * w + p [ 4 ] ) * w + p [ 5 ] ) * w + p [ 6 ] ) )
                           85 }

***TER   0 % (  0/  2) of FUNCTION _Logpoly()
         0 % (  0/  1) statement
-----------------------------------------------------------------------------


***TER   0 % (  0/ 22) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xlog.c
         0 % (  0/ 26) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xprec.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         0            -     4 FUNCTION _Xp_getw()
         0          0 -     5   if (n == 0)
         0            -     6     return ( 0.0 )
                            6   }-
         0          0 -     7   else if (n == 1 || p [ 0 ] == 0.0 || p [ 1 ] == 0.0)
         0                  7     1: T || _ || _
         0                  7     2: F || T || _
         0                  7     3: F || F || T
                    0       7     4: F || F || F
                      -     7     MC/DC (cond 1): 1 - 4
                      -     7     MC/DC (cond 2): 2 - 4
                      -     7     MC/DC (cond 3): 3 - 4
         0            -     8     return ( p [ 0 ] )
                            8   }-
         0          0 -     9   else if (n == 2 || p [ 2 ] == 0.0)
         0                  9     1: T || _
         0                  9     2: F || T
                    0       9     3: F || F
                      -     9     MC/DC (cond 1): 1 - 3
                      -     9     MC/DC (cond 2): 2 - 3
         0            -    10     return ( p [ 0 ] + p [ 1 ] )
                           10   }-
                           11   else
         0          0 -    15     if (4 <= n)
                           16     }-
         0          0 -    17     if (p01 - p [ 0 ] == p [ 1 ])
         0            -    18       return ( p01 + p2 )
                           18     }-
                           19     else
         0            -    20       return ( p [ 0 ] + ( p [ 1 ] + p2 ) )
                           20     }-
                           21   }-
                           22 }

***TER   0 % (  0/ 21) of FUNCTION _Xp_getw()
         0 % (  0/ 13) statement
-----------------------------------------------------------------------------

         0            -    23 FUNCTION _Xp_setw()
         0          0 -    27   if (n <= 0)
                           28   }-
         0          0 -    29   else if (n == 1 || ( errx = _Dunscale ( & xexp , & x0 ) ) == 0)
         0                 29     1: T || _
         0                 29     2: F || T
                    0      29     3: F || F
                      -    29     MC/DC (cond 1): 1 - 3
                      -    29     MC/DC (cond 2): 2 - 3
                           30   }-
         0          0 -    31   else if (0 < errx)
                           35   }-
                           36   else
         0          0 -    42     if (( 53 & 1 ) != 0 && 2 < n && p [ 1 ] != 0.0)
         0                 42       1: T && T && T
                    0      42       2: T && T && F
                    0      42       3: T && F && _
                    0      42       4: F && _ && _
                      -    42       MC/DC (cond 1): 1 - 4
                      -    42       MC/DC (cond 2): 1 - 3
                      -    42       MC/DC (cond 3): 1 - 2
         0          0 -    49       if (3 < n && p [ 2 ] != 0.0)
         0                 49         1: T && T
                    0      49         2: T && F
                    0      49         3: F && _
                      -    49         MC/DC (cond 1): 1 - 3
                      -    49         MC/DC (cond 2): 1 - 2
                           50       }-
                           51     }-
         0          0 -    52     else if (2 < n)
                           53     }-
                           54   }-
         0            -    55   return ( p )
                           56 }

***TER   0 % (  0/ 21) of FUNCTION _Xp_setw()
         0 % (  0/ 24) statement
-----------------------------------------------------------------------------

         0            -    57 FUNCTION _Xp_addh()
         0          0 -    61   if (n == 0)
                           62   }-
         0          0 -    63   else if (0 < ( errx = _Dunscale ( & xexp , & xscaled ) ))
         0          0 -    64     if (errx == 2 || ( errx = _Dtest ( & p [ 0 ] ) ) <= 0)
         0                 64       1: T || _
         0                 64       2: F || T
                    0      64       3: F || F
                      -    64       MC/DC (cond 1): 1 - 3
                      -    64       MC/DC (cond 2): 2 - 3
                           65     }-
         0          0 -    66     else if (errx == 2 || ( ( * _Pmsw ( & ( x0 ) ) ) & ( ( unsigned short ) 0x8000 ) ) == ( ( * _Pmsw ( & ( p [ 0 ] ) ) ) & ( ( unsigned short ) 0x8000 ) ))
         0                 66       1: T || _
         0                 66       2: F || T
                    0      66       3: F || F
                      -    66       MC/DC (cond 1): 1 - 3
                      -    66       MC/DC (cond 2): 2 - 3
                           67     }-
                           68     else
         0          0 -    72       if (1 < n)
                           73       }-
                           74     }-
                           74   }-
         0          0 -    75   else if (errx < 0)
         0          0 -    79     for (;k < n;)
         0          0 -    85       if (0 < ( errx = _Dunscale ( & yexp , & yscaled ) ))
         0            -    86         break
                           86       }-
         0          0 -    87       else if (errx == 0)
         0          0 -    90         if (k + 1 < n)
                           91         }-
         0            -    92         break
                           93       }-
         0          0 -    95       else if (( diff = ( long ) yexp - xexp ) <= - mybits && x0 != 0.0)
         0                 95         1: T && T
                    0      95         2: T && F
                    0      95         3: F && _
                      -    95         MC/DC (cond 1): 1 - 3
                      -    95         MC/DC (cond 2): 1 - 2
         0          0 -    98         for (;++ j < n && p [ j ] != 0.0;)
         0                 98           1: T && T
                    0      98           2: T && F
                    0      98           3: F && _
                      -    98           MC/DC (cond 1): 1 - 3
                      -    98           MC/DC (cond 2): 1 - 2
                           99         }-
         0          0 -   100         if (j < n - 1)
                          101         }-
         0          0 -   102         else if (j == n)
                          103         }-
         0          0 -   104         for (;k < j;)
                          105         }-
                          108       }-
         0          0 -   109       else if (mybits <= diff && x0 != 0.0)
         0                109         1: T && T
                    0     109         2: T && F
                    0     109         3: F && _
                      -   109         MC/DC (cond 1): 1 - 3
                      -   109         MC/DC (cond 2): 1 - 2
                          113       }-
                          114       else
         0          0 -   116         if (( p [ k ] += x0 ) == 0.0)
         0          0 -   118           for (;++ m < n && ( p [ m - 1 ] = p [ m ] ) != 0.0;)
         0                118             1: T && T
                    0     118             2: T && F
                    0     118             3: F && _
                      -   118             MC/DC (cond 1): 1 - 3
                      -   118             MC/DC (cond 2): 1 - 2
                          118           }-
         0          0 -   119           if (p [ k ] == 0.0)
         0            -   120             break
                          120           }-
                          121         }-
         0          0 -   124         if (prevexp - mybits < xexp)
         0          0 -   128           if (( p [ k ] -= x0 ) == 0.0)
         0          0 -   130             for (;++ m < n && ( p [ m - 1 ] = p [ m ] ) != 0.0;)
         0                130               1: T && T
                    0     130               2: T && F
                    0     130               3: F && _
                      -   130               MC/DC (cond 1): 1 - 3
                      -   130               MC/DC (cond 2): 1 - 2
                          130             }-
                          131           }-
         0          0 -   132           if (-- k == 0)
                          133           }-
                          134           else
                          139           }-
                          140         }-
         0          0 -   141         else if (k + 1 == n)
         0            -   142           break
                          142         }-
                          143         else
         0          0 -   151           ternary-?: x0 != 0.0
                          154         }-
                          155       }-
                          156     }-
                          157   }-
         0            -   158   return ( p )
                          159 }

***TER   0 % (  0/ 70) of FUNCTION _Xp_addh()
         0 % (  0/ 87) statement
-----------------------------------------------------------------------------

         0            -   160 FUNCTION _Xp_mulh()
         0          0 -   166   if (0 < n)
         0          0 -   169     if (0 <= ( errx = _Dtest ( & buf [ 0 ] ) ))
         0          0 -   171       if (errx == 2)
                          172       }-
         0          0 -   174       if (0 < errx && 1 < n)
         0                174         1: T && T
                    0     174         2: T && F
                    0     174         3: F && _
                      -   174         MC/DC (cond 1): 1 - 3
                      -   174         MC/DC (cond 2): 1 - 2
                          175       }-
         0            -   176       return ( p )
                          177     }-
                          179   }-
         0          0 -   180   for (;k < n;)
         0          0 -   182     for (;j < 4;)
         0          0 -   183       if (k + j < n && p [ k + j ] != 0.0)
         0                183         1: T && T
                    0     183         2: T && F
                    0     183         3: F && _
                      -   183         MC/DC (cond 1): 1 - 3
                      -   183         MC/DC (cond 2): 1 - 2
                          187       }-
                          188       else
         0            -   192         break
                          193       }-
                          193     }-
         0          0 -   194     if (buf [ 0 ] == 0.0)
         0            -   195       break
                          195     }-
                          196     else
         0          0 -   206       for (;++ i < j;)
         0          0 -   207         if (( buf [ i - 1 ] = buf [ i ] ) == 0.0)
         0            -   208           break
                          208         }-
                          208       }-
                          209     }-
                          210   }-
         0            -   211   return ( p )
                          212 }

***TER   0 % (  0/ 30) of FUNCTION _Xp_mulh()
         0 % (  0/ 41) statement
-----------------------------------------------------------------------------

         0            -   213 FUNCTION _Xp_setn()
         0            -   216   return ( p )
                          217 }

***TER   0 % (  0/  2) of FUNCTION _Xp_setn()
         0 % (  0/  2) statement
-----------------------------------------------------------------------------

         0            -   218 FUNCTION _Xp_movx()
         0            -   221   return ( p )
                          222 }

***TER   0 % (  0/  2) of FUNCTION _Xp_movx()
         0 % (  0/  2) statement
-----------------------------------------------------------------------------

         0            -   223 FUNCTION _Xp_addx()
         0          0 -   227   for (;k < m && q [ k ] != 0.0;)
         0                227     1: T && T
                    0     227     2: T && F
                    0     227     3: F && _
                      -   227     MC/DC (cond 1): 1 - 3
                      -   227     MC/DC (cond 2): 1 - 2
                          228   }-
         0            -   229   return ( p )
                          230 }

***TER   0 % (  0/  6) of FUNCTION _Xp_addx()
         0 % (  0/  6) statement
-----------------------------------------------------------------------------

         0            -   231 FUNCTION _Xp_subx()
         0          0 -   235   for (;k < m && q [ k ] != 0.0;)
         0                235     1: T && T
                    0     235     2: T && F
                    0     235     3: F && _
                      -   235     MC/DC (cond 1): 1 - 3
                      -   235     MC/DC (cond 2): 1 - 2
                          236   }-
         0            -   237   return ( p )
                          238 }

***TER   0 % (  0/  6) of FUNCTION _Xp_subx()
         0 % (  0/  6) statement
-----------------------------------------------------------------------------

         0            -   239 FUNCTION _Xp_ldexpx()
         0          0 -   242   for (;k < n;)
         0          0 -   245     if (p [ k ] == 0.0)
         0            -   246       break
                          246     }-
                          247   }-
         0            -   248   return ( p )
                          249 }

***TER   0 % (  0/  7) of FUNCTION _Xp_ldexpx()
         0 % (  0/  8) statement
-----------------------------------------------------------------------------

         0            -   250 FUNCTION _Xp_mulx()
         0          0 -   254   if (n == 0 || m == 0)
         0                254     1: T || _
         0                254     2: F || T
                    0     254     3: F || F
                      -   254     MC/DC (cond 1): 1 - 3
                      -   254     MC/DC (cond 2): 2 - 3
                          255   }-
         0          0 -   256   else if (q [ 0 ] == 0.0 || q [ 1 ] == 0.0)
         0                256     1: T || _
         0                256     2: F || T
                    0     256     3: F || F
                      -   256     MC/DC (cond 1): 1 - 3
                      -   256     MC/DC (cond 2): 2 - 3
                          257   }-
                          258   else
         0          0 -   265     for (;j < m && q [ j ] != 0.0;)
         0                265       1: T && T
                    0     265       2: T && F
                    0     265       3: F && _
                      -   265       MC/DC (cond 1): 1 - 3
                      -   265       MC/DC (cond 2): 1 - 2
                          270     }-
                          271   }-
         0            -   272   return ( p )
                          273 }

***TER   0 % (  0/ 14) of FUNCTION _Xp_mulx()
         0 % (  0/ 16) statement
-----------------------------------------------------------------------------

         0            -   274 FUNCTION _Xp_invx()
         0          0 -   277   if (n == 0)
                          278   }-
         0          0 -   279   else if (0 <= ( errx = _Dtest ( & p [ 0 ] ) ))
         0          0 -   281     if (errx == 1)
                          282     }-
         0          0 -   283     else if (errx == 0)
                          284     }-
                          285   }-
                          286   else
         0          0 -   295     if (1 < n)
                          296     }-
         0          0 -   298     for (;k < n;)
                          305     }-
                          306   }-
         0            -   307   return ( p )
                          308 }

***TER   0 % (  0/ 14) of FUNCTION _Xp_invx()
         0 % (  0/ 27) statement
-----------------------------------------------------------------------------

         0            -   309 FUNCTION _Xp_sqrtx()
         0          0 -   311   if (n == 0)
                          312   }-
         0          0 -   313   else if (0 <= _Dtest ( & p [ 0 ] ) || p [ 0 ] < 0.0)
         0                313     1: T || _
         0                313     2: F || T
                    0     313     3: F || F
                      -   313     MC/DC (cond 1): 1 - 3
                      -   313     MC/DC (cond 2): 2 - 3
         0          0 -   315     if (p [ 0 ] < 0.0)
                          319     }-
                          320   }-
                          321   else
         0          0 -   328     if (1 < n)
                          329     }-
         0          0 -   331     for (;k < n;)
                          339     }-
                          341   }-
         0            -   342   return ( p )
                          343 }

***TER   0 % (  0/ 14) of FUNCTION _Xp_sqrtx()
         0 % (  0/ 25) statement
-----------------------------------------------------------------------------


***TER   0 % (  0/207) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xprec.c
         0 % (  0/257) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xquad.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         0            -   245 FUNCTION _Quad_multiply()
         0          0 -   248   if (ans == 0.0)
                          255   }-
         0            -   256   return ( ans )
                          257 }

***TER   0 % (  0/  4) of FUNCTION _Quad_multiply()
         0 % (  0/  8) statement
-----------------------------------------------------------------------------

         0            -   258 FUNCTION _Quad()
         0          0 -   262   if (retcode & 1)
         0          0 -   266     if (x == 0.0)
                          267     }-
                          268     else
                          272     }-
         0          0 -   275     if (* px != 0.0)
                          276     }-
         0          0 -   277     if (0.25 < x)
                          281     }-
         0          0 -   282     else if (x < - 0.25)
                          286     }-
         0            -   288     return ( qoff )
                          289   }-
         0          0 -   290   if (- piby4 < x && x < piby4)
         0                290     1: T && T
                    0     290     2: T && F
                    0     290     3: F && _
                      -   290     MC/DC (cond 1): 1 - 3
                      -   290     MC/DC (cond 2): 1 - 2
         0            -   293     return ( 0 )
                          294   }-
         0          0 -   295   else if (- huge_rad < x && x < huge_rad)
         0                295     1: T && T
                    0     295     2: T && F
                    0     295     3: F && _
                      -   295     MC/DC (cond 1): 1 - 3
                      -   295     MC/DC (cond 2): 1 - 2
         0          0 -   298     if (0.0 <= g)
                          299     }-
                          300     else
                          301     }-
         0          0 -   303     if (g != 0.0)
                          311     }-
                          313   }-
                          314   else
         0          0 -   320     if (xexp < 53 + 5 + ( 1 << 5 ))
                          321     }-
                          322     else
         0          0 -   329       if (xpx [ 1 ] != 0.0)
                          334       }-
                          335     }-
         0          0 -   336     for (;xpz [ 0 ] < - huge_rad || huge_rad < xpz [ 0 ];)
         0                336       1: T || _
         0                336       2: F || T
                    0     336       3: F || F
                      -   336       MC/DC (cond 1): 1 - 3
                      -   336       MC/DC (cond 2): 2 - 3
         0          0 -   343       if (xpx [ 1 ] != 0.0)
                          349       }-
                          351     }-
         0          0 -   353     if (0.0 <= g)
                          354     }-
                          355     else
                          356     }-
         0          0 -   358     if (g != 0.0)
                          364     }-
                          366   }-
         0          0 -   368   if (g < - ( double ) 0x7fffffffL || ( double ) 0x7fffffffL < g)
         0                368     1: T || _
         0                368     2: F || T
                    0     368     3: F || F
                      -   368     MC/DC (cond 1): 1 - 3
                      -   368     MC/DC (cond 2): 2 - 3
                          369   }-
         0            -   370   return ( ( unsigned int ) ( long ) g & 0x3 )
                          371 }

***TER   0 % (  0/ 44) of FUNCTION _Quad()
         0 % (  0/ 81) statement
-----------------------------------------------------------------------------

         0            -   372 FUNCTION _Quadph()
         0          0 -   380   if (ph0 < - ( double ) ( 0x7fffffffL / 2 ) || ( double ) ( 0x7fffffffL / 2 ) < ph0)
         0                380     1: T || _
         0                380     2: F || T
                    0     380     3: F || F
                      -   380     MC/DC (cond 1): 1 - 3
                      -   380     MC/DC (cond 2): 2 - 3
                          381   }-
         0          0 -   384   if (piby4 <= ans)
                          389   }-
         0          0 -   390   else if (ans <= - piby4)
                          395   }-
                          396   else
                          397   }-
         0            -   398   return ( qoff )
                          399 }

***TER   0 % (  0/ 10) of FUNCTION _Quadph()
         0 % (  0/ 19) statement
-----------------------------------------------------------------------------


***TER   0 % (  0/ 58) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xquad.c
         0 % (  0/108) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xsin.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================

         0            -    19 FUNCTION _Sinx()
                           21   switch (_Dtest ( & x ))
         0            -    23   case 2:
         0            -    24     return ( x )
         0            -    25   case 0:
         0          0 -    26     if (( qoff & 0x1 ) != 0)
                           27     }-
         0          0 -    28     ternary-?: ( qoff & 0x2 ) != 0
         0            -    28     return ( ( qoff & 0x2 ) != 0 ? - x : x )
         0            -    29   case 1:
         0            -    31     return ( _Nan . _Double )
         0            -    32   default:
         0          0 -    34     if (- _Rteps . _Double < x && x < _Rteps . _Double)
         0                 34       1: T && T
                    0      34       2: T && F
                    0      34       3: F && _
                      -    34       MC/DC (cond 1): 1 - 3
                      -    34       MC/DC (cond 2): 1 - 2
         0          0 -    36       if (( qoff & 0x1 ) != 0)
                           37       }-
                           38     }-
                           39     else
         0          0 -    42       if (( qoff & 0x1 ) != 0)
                           43       }-
                           44       else
                           45       }-
                           46     }-
         0          0 -    47     if (qoff & 0x2)
                           48     }-
         0            -    49     return ( x )
                           50   }-
                           51 }

***TER   0 % (  0/ 23) of FUNCTION _Sinx()
         0 % (  0/ 18) statement
-----------------------------------------------------------------------------


***TER   0 % (  0/ 23) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xsin.c
         0 % (  0/ 18) statement
-----------------------------------------------------------------------------



MONITORED SOURCE FILE : X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xvalues.c
INSTRUMENTATION MODE  : multicondition

 HITS/TRUE      FALSE    LINE DESCRIPTION
=============================================================================


***TER 100 % (  0/  0) of FILE X:\Daten\hightecARM\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xvalues.c
       100 % (  0/  0) statement
-----------------------------------------------------------------------------



SUMMARY
=======

Source files       : 61
Headers extracted  : 0
Functions          : 252
Source lines       : 18902
TER                : 22 % (691/3200) MC/DC
TER                : 29 % (1430/4916) statement
