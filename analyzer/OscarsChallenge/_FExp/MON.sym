CTC++ sym 8
Sat Jun 29 14:39:26 2019
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\atanh.c
7 1561811938 0 0
0 4 0 0 0 atanh
90 0 0 0 0 ( double x )
42 10 2 0 1 _Dtest ( & x )
14 12 2 0 1 2
14 13 2 1 1 0
13 14 3 2 2 ( x )
15 15 3 3 1
20 16 3 0 2 x < 0.0
3 22 5 0 2
40 23 5 0 2
3 24 6 0 2
20 28 6 1 2 1.0 < x
13 31 8 4 3 ( _Nan . _Double )
3 32 8 0 2
21 33 8 2 2 x == 1.0
25 36 9 3 3 neg
13 36 10 5 3 ( neg ? - _Inf . _Double : _Inf . _Double )
3 37 10 0 2
78 0 0 0 0 2
79 0 0 0 0 0,1
71 38 10 0 2 - _Rteps . _Double < x && x < _Rteps . _Double
75 38 10 2 2 T && T
76 38 10 1 2 T && F
76 38 10 0 2 F && _
80 0 0 0 0 1,2
81 0 0 0 0 0
77 38 10 0 2 - _Rteps . _Double < x
80 0 0 0 0 2
81 0 0 0 0 1
77 38 10 0 2 x < _Rteps . _Double
20 40 10 4 3 neg
3 41 11 0 3
13 42 12 6 3 ( x )
3 43 12 0 2
40 44 12 0 2
25 48 13 5 3 neg
13 48 14 7 3 ( neg ? - y : y )
3 49 14 0 2
3 50 14 0 1
2 51 14 0 0 atanh
%51,1,8,6,3,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\cos.c
7 1561811938 0 0
0 2 0 0 0 cos
90 0 0 0 0 ( double x )
13 4 1 0 1 ( _Sinx ( x , 1 , 0 ) )
2 5 1 0 0 cos
%5,1,1,0,0,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\cosh.c
7 1561811939 0 0
0 5 0 0 0 _Cosh
90 0 0 0 0 ( double x , double y )
78 0 0 0 0 1,2
79 0 0 0 0 0
70 10 2 0 1 0 <= errx || 0 <= erry
75 10 2 2 1 T || _
75 10 2 1 1 F || T
76 10 2 0 1 F || F
80 0 0 0 0 2
81 0 0 0 0 0,1
77 10 2 0 1 0 <= errx
80 0 0 0 0 1
81 0 0 0 0 0
77 10 2 0 1 0 <= erry
20 12 2 0 2 errx == 2
13 13 3 0 3 ( x )
3 13 3 0 2
21 14 3 1 2 erry == 2
13 15 4 1 3 ( y )
3 15 4 0 2
21 16 4 2 2 errx == 1
20 17 4 3 3 erry != 0
25 18 4 4 4 y < 0.0
13 19 5 2 4 ( y < 0.0 ? - _Inf . _Double : _Inf . _Double )
3 19 5 0 3
40 20 5 0 3
13 23 7 3 4 ( _Nan . _Double )
3 24 7 0 3
3 24 7 0 2
40 25 7 0 2
13 26 8 4 3 ( y )
3 26 8 0 2
3 27 8 0 1
40 28 8 0 1
20 32 9 5 2 x < xbig
13 35 11 5 3 ( y * ( x + ( ( 0.25 ) / ( x ) ) ) )
3 36 11 0 2
40 37 11 0 2
13 40 13 6 3 ( x )
3 41 13 0 2
3 42 13 0 1
2 43 13 0 0 _Cosh
0 45 0 1 0 cosh
90 0 0 0 0 ( double x )
13 47 1 7 1 ( _Cosh ( x , 1.0 ) )
2 48 1 0 0 cosh
%48,2,8,6,3,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\double_analysis.c
7 1561811939 0 0
0 3 0 0 0 double_getDeltaULP
90 0 0 0 0 ( double x , double y )
78 0 0 0 0 1,2
79 0 0 0 0 0
70 8 4 0 1 x != x || y != y
75 8 4 2 1 T || _
75 8 4 1 1 F || T
76 8 4 0 1 F || F
80 0 0 0 0 2
81 0 0 0 0 0,1
77 8 4 0 1 x != x
80 0 0 0 0 1
81 0 0 0 0 0
77 8 4 0 1 y != y
3 10 5 0 1
78 0 0 3 0 1,2,3,4
79 0 0 3 0 0
71 10 5 0 1 x == __builtin_inff ( ) || y == __builtin_inff ( ) || x == - __builtin_inff ( ) || y == - __builtin_inff ( )
75 10 5 7 1 T || _ || _ || _
75 10 5 6 1 F || T || _ || _
75 10 5 5 1 F || F || T || _
75 10 5 4 1 F || F || F || T
76 10 5 3 1 F || F || F || F
80 0 0 3 0 4
81 0 0 3 0 0,1,2,3
77 10 5 0 1 x == __builtin_inff ( )
80 0 0 3 0 3
81 0 0 3 0 0,1,2
77 10 5 0 1 y == __builtin_inff ( )
80 0 0 3 0 2
81 0 0 3 0 0,1
77 10 5 0 1 x == - __builtin_inff ( )
80 0 0 3 0 1
81 0 0 3 0 0
77 10 5 0 1 y == - __builtin_inff ( )
3 12 6 0 1
40 12 6 0 1
20 16 9 0 2 x_bits . s == y_bits . s
20 17 9 1 3 x_bits . e > y_bits . e
20 19 10 2 4 x_bits . m >= y_bits . m
3 21 11 0 4
40 21 11 0 4
3 24 13 0 4
3 25 13 0 3
21 25 13 3 3 x_bits . e < y_bits . e
20 27 14 4 4 x_bits . m <= y_bits . m
3 29 15 0 4
40 29 15 0 4
3 32 17 0 4
3 33 17 0 3
40 33 17 0 3
20 35 18 5 4 x_bits . m <= y_bits . m
3 37 19 0 4
40 37 19 0 4
3 39 20 0 4
3 40 20 0 3
3 42 20 0 2
40 42 20 0 2
3 45 22 0 2
3 48 23 0 1
13 49 24 0 1 res_u64
2 50 24 0 0 double_getDeltaULP
0 52 0 1 0 double_computeAndPrint
90 0 0 0 0 ( double x , double y )
1 56 1 1 0 double_computeAndPrint
%56,2,2,6,8,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\double_cmp_ulp.c
7 1561811940 0 0
0 9 0 0 0 double_equal_ulp
90 0 0 0 0 ( double val , double ref , uint8 n_ulp )
20 16 6 0 1 n_ulp == 0U
3 19 7 0 1
40 19 7 0 1
42 21 8 0 2 fmc_ref
14 22 8 0 2 FMC_NAN
12 25 10 1 3
14 26 10 2 2 FMC_INF
12 28 12 3 3
15 29 12 4 2
12 33 16 5 3
3 34 16 0 2
3 35 16 0 1
13 36 17 6 1 res
2 37 17 0 0 double_equal_ulp
0 39 0 1 0 double_ulp
90 0 0 0 0 ( double ref )
20 42 2 1 1 db . e == 0x7FF
3 46 4 0 1
21 46 4 2 1 db . e >= 53U
3 51 7 0 1
40 51 7 0 1
20 56 8 3 2 db . e > 0U
3 62 9 0 2
40 62 9 0 2
3 65 10 0 2
3 67 11 0 1
13 68 12 7 1 db2double ( db )
2 69 12 0 0 double_ulp
%69,2,8,4,0,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\double_compares.c
7 1561811940 0 0
0 22 0 0 0 test_compare_double
90 0 0 0 0 ( double found , double expected , int comparetype , double maxtol_below , double maxtol_above , double limit , double * maxdeviation_below , double * maxdeviation_above )
20 26 1 0 1 __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , double ) , __isnan ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , float ) , __isnanf ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , long double ) , __isnanl ( found ) , ( __builtin_trap ( ) , found ) ) ) ) != __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , double ) , __isnan ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , float ) , __isnanf ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , long double ) , __isnanl ( expected ) , ( __builtin_trap ( ) , expected ) ) ) )
13 30 3 0 2 0
3 31 3 0 1
78 0 0 0 0 2
79 0 0 0 0 0,1
70 32 3 0 1 __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , double ) , __isnan ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , float ) , __isnanf ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , long double ) , __isnanl ( found ) , ( __builtin_trap ( ) , found ) ) ) ) && __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , double ) , __isnan ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , float ) , __isnanf ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , long double ) , __isnanl ( expected ) , ( __builtin_trap ( ) , expected ) ) ) )
75 32 3 2 1 T && T
76 32 3 1 1 T && F
76 32 3 0 1 F && _
80 0 0 0 0 1,2
81 0 0 0 0 0
77 32 3 0 1 __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , double ) , __isnan ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , float ) , __isnanf ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , long double ) , __isnanl ( found ) , ( __builtin_trap ( ) , found ) ) ) )
80 0 0 0 0 2
81 0 0 0 0 1
77 32 3 0 1 __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , double ) , __isnan ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , float ) , __isnanf ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , long double ) , __isnanl ( expected ) , ( __builtin_trap ( ) , expected ) ) ) )
13 33 4 1 2 1
3 34 4 0 1
20 35 4 1 1 ( __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , double ) , __fpclassify ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , float ) , __fpclassifyf ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , long double ) , __fpclassifyl ( found ) , ( __builtin_trap ( ) , 0 ) ) ) ) == ( 0x0100 | 0x0400 ) ) != ( __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , double ) , __fpclassify ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , float ) , __fpclassifyf ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , long double ) , __fpclassifyl ( expected ) , ( __builtin_trap ( ) , 0 ) ) ) ) == ( 0x0100 | 0x0400 ) )
13 39 6 2 2 0
3 40 6 0 1
78 0 0 3 0 3
79 0 0 3 0 0,1,2
70 41 6 0 1 ( __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , double ) , __fpclassify ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , float ) , __fpclassifyf ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , long double ) , __fpclassifyl ( found ) , ( __builtin_trap ( ) , 0 ) ) ) ) == ( 0x0100 | 0x0400 ) ) && ( __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , double ) , __fpclassify ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , float ) , __fpclassifyf ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , long double ) , __fpclassifyl ( expected ) , ( __builtin_trap ( ) , 0 ) ) ) ) == ( 0x0100 | 0x0400 ) ) && found != expected
75 41 6 6 1 (T) && (T) && T
76 41 6 5 1 (T) && (T) && F
76 41 6 4 1 (T) && (F) && _
76 41 6 3 1 (F) && (_) && _
80 0 0 3 0 1,2,3
81 0 0 3 0 0
77 41 6 0 1 __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , double ) , __fpclassify ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , float ) , __fpclassifyf ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , long double ) , __fpclassifyl ( found ) , ( __builtin_trap ( ) , 0 ) ) ) ) == ( 0x0100 | 0x0400 )
80 0 0 3 0 2,3
81 0 0 3 0 1
77 41 6 0 1 __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , double ) , __fpclassify ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , float ) , __fpclassifyf ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , long double ) , __fpclassifyl ( expected ) , ( __builtin_trap ( ) , 0 ) ) ) ) == ( 0x0100 | 0x0400 )
80 0 0 3 0 3
81 0 0 3 0 2
77 41 6 0 1 found != expected
13 45 8 3 2 0
3 46 8 0 1
78 0 0 7 0 3
79 0 0 7 0 0,1,2
70 47 8 0 1 ( __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , double ) , __fpclassify ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , float ) , __fpclassifyf ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , long double ) , __fpclassifyl ( found ) , ( __builtin_trap ( ) , 0 ) ) ) ) == ( 0x0100 | 0x0400 ) ) && ( __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , double ) , __fpclassify ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , float ) , __fpclassifyf ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , long double ) , __fpclassifyl ( expected ) , ( __builtin_trap ( ) , 0 ) ) ) ) == ( 0x0100 | 0x0400 ) ) && found == expected
75 47 8 10 1 (T) && (T) && T
76 47 8 9 1 (T) && (T) && F
76 47 8 8 1 (T) && (F) && _
76 47 8 7 1 (F) && (_) && _
80 0 0 7 0 1,2,3
81 0 0 7 0 0
77 47 8 0 1 __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , double ) , __fpclassify ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , float ) , __fpclassifyf ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , long double ) , __fpclassifyl ( found ) , ( __builtin_trap ( ) , 0 ) ) ) ) == ( 0x0100 | 0x0400 )
80 0 0 7 0 2,3
81 0 0 7 0 1
77 47 8 0 1 __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , double ) , __fpclassify ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , float ) , __fpclassifyf ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , long double ) , __fpclassifyl ( expected ) , ( __builtin_trap ( ) , 0 ) ) ) ) == ( 0x0100 | 0x0400 )
80 0 0 7 0 3
81 0 0 7 0 2
77 47 8 0 1 found == expected
13 48 9 4 2 1
3 49 9 0 1
20 51 9 2 1 comparetype & 1
20 53 9 3 2 fabs ( found - expected ) > maxtol_below
20 58 11 4 3 fabs ( found - expected ) > * maxdeviation_below
3 60 12 0 3
3 61 12 0 2
40 61 12 0 2
20 62 12 5 3 result == - 1
3 64 13 0 3
3 65 13 0 2
3 66 13 0 1
20 67 13 6 1 comparetype & 2
78 0 0 11 0 2
79 0 0 11 0 0,1
70 69 13 0 2 expected != 0.0 && fabs ( ( found - expected ) / expected ) > maxtol_below
75 69 13 13 2 T && T
76 69 13 12 2 T && F
76 69 13 11 2 F && _
80 0 0 11 0 1,2
81 0 0 11 0 0
77 69 13 0 2 expected != 0.0
80 0 0 11 0 2
81 0 0 11 0 1
77 69 13 0 2 fabs ( ( found - expected ) / expected ) > maxtol_below
20 74 15 7 3 fabs ( ( found - expected ) / expected ) > * maxdeviation_below
3 76 16 0 3
3 77 16 0 2
40 77 16 0 2
20 78 16 8 3 result == - 1
3 80 17 0 3
3 81 17 0 2
3 82 17 0 1
20 83 17 9 1 comparetype & 128
20 85 17 10 2 fabs ( expected ) <= limit
20 87 17 11 3 fabs ( found - expected ) > maxtol_below
20 92 19 12 4 fabs ( found - expected ) > * maxdeviation_below
3 94 20 0 4
3 95 20 0 3
40 95 20 0 3
20 96 20 13 4 result == - 1
3 98 21 0 4
3 99 21 0 3
3 100 21 0 2
40 100 21 0 2
20 102 21 14 3 fabs ( ( found - expected ) / expected ) > maxtol_above
20 107 23 15 4 fabs ( found - expected ) > * maxdeviation_above
3 109 24 0 4
3 110 24 0 3
40 110 24 0 3
20 111 24 16 4 result == - 1
3 113 25 0 4
3 114 25 0 3
3 115 25 0 2
3 116 25 0 1
20 117 25 17 1 comparetype & 4
20 119 25 18 2 ! double_equal_ulp ( found , expected , ( uint64 ) maxtol_below )
20 131 30 19 3 dif > * maxdeviation_below
3 133 31 0 3
3 134 31 0 2
40 134 31 0 2
20 135 31 20 3 result == - 1
3 137 32 0 3
3 138 32 0 2
3 139 32 0 1
20 140 32 21 1 comparetype & 8
20 142 32 22 2 fabs ( expected ) <= limit
20 143 32 23 3 fabs ( found - expected ) > maxtol_below
20 148 34 24 4 fabs ( found - expected ) > * maxdeviation_below
3 150 35 0 4
3 151 35 0 3
40 151 35 0 3
20 152 35 25 4 result == - 1
3 154 36 0 4
3 155 36 0 3
3 156 36 0 2
40 156 36 0 2
20 157 36 26 3 ! double_equal_ulp ( found , expected , ( uint64 ) maxtol_above )
20 169 41 27 4 dif > * maxdeviation_above
3 171 42 0 4
3 172 42 0 3
40 172 42 0 3
20 173 42 28 4 result == - 1
3 175 43 0 4
3 176 43 0 3
3 177 43 0 2
3 178 43 0 1
20 179 43 29 1 comparetype & 16
20 183 44 30 2 expected != 0.0
25 184 45 31 3 ( sqrt ( fabs ( found * expected ) ) ) > ( 1 )
3 185 45 0 2
20 186 45 32 2 exakt > maxtol_below
20 191 47 33 3 exakt > * maxdeviation_below
3 193 48 0 3
3 194 48 0 2
40 194 48 0 2
20 195 48 34 3 result == - 1
3 197 49 0 3
3 198 49 0 2
3 199 49 0 1
20 200 49 35 1 comparetype & 32
20 202 49 36 2 found != expected
20 207 51 37 3 fabs ( found - expected ) > * maxdeviation_below
3 209 52 0 3
3 210 52 0 2
40 210 52 0 2
20 211 52 38 3 result == - 1
3 213 53 0 3
3 214 53 0 2
3 215 53 0 1
20 216 53 39 1 comparetype & 64
20 222 57 40 2 hfFound . x_val != hfExpected . x_val
20 227 59 41 3 fabs ( found - expected ) > * maxdeviation_below
3 229 60 0 3
3 230 60 0 2
40 230 60 0 2
20 231 60 42 3 result == - 1
3 233 61 0 3
3 234 61 0 2
3 235 61 0 1
13 237 62 5 1 result
2 238 62 0 0 test_compare_double
%238,1,6,43,14,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\double_data.c
7 1561811941 0 0
0 7 0 0 0 db_int2double
90 0 0 0 0 ( uint64 val )
13 10 3 0 1 tmp . dval
2 11 3 0 0 db_int2double
0 13 0 1 0 db_double2int
90 0 0 0 0 ( double val )
13 16 3 1 1 tmp . ival
2 17 3 0 0 db_double2int
0 21 0 2 0 double2db
90 0 0 0 0 ( double v )
13 28 7 2 1 res
2 29 7 0 0 double2db
0 31 0 3 0 db2double
90 0 0 0 0 ( double_bits db )
13 34 3 3 1 res . dval
2 35 3 0 0 db2double
0 37 0 4 0 sem2double
90 0 0 0 0 ( uint64 s , uint64 e , uint64 m )
13 40 3 4 1 res . dval
2 41 3 0 0 sem2double
0 43 0 5 0 sem2db
90 0 0 0 0 ( uint64 s , uint64 e , uint64 m )
13 44 1 5 1 double2db ( sem2double ( s , e , m ) )
2 45 1 0 0 sem2db
0 47 0 6 0 double_NaN_or_Inf
90 0 0 0 0 ( double val )
13 51 3 6 1 ( ( tmp . ival & 0x7FF0000000000000 ) == 0x7FF0000000000000 )
2 52 3 0 0 double_NaN_or_Inf
0 54 0 7 0 classify_double_mag
90 0 0 0 0 ( double val )
20 58 3 0 1 tmp . e == 2047U
20 59 3 1 2 tmp . m == 0U
3 59 4 0 2
40 60 4 0 2
3 60 5 0 2
3 61 5 0 1
21 62 5 2 1 tmp . e == 0U
20 63 5 3 2 tmp . m == 0U
3 63 6 0 2
40 64 6 0 2
3 64 7 0 2
3 65 7 0 1
40 66 7 0 1
3 68 8 0 1
13 69 9 7 1 res
2 70 9 0 0 classify_double_mag
%70,8,8,4,0,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\errno.c
7 1561811941 0 0
%2,0,0,0,0,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\exp.c
7 1561811941 0 0
0 19 0 0 0 _Exp
90 0 0 0 0 ( double * px , double y , long eoff )
78 0 0 0 0 1,2
79 0 0 0 0 0
70 24 2 0 1 0 <= errx || 0 <= erry
75 24 2 2 1 T || _
75 24 2 1 1 F || T
76 24 2 0 1 F || F
80 0 0 0 0 2
81 0 0 0 0 0,1
77 24 2 0 1 0 <= errx
80 0 0 0 0 1
81 0 0 0 0 0
77 24 2 0 1 0 <= erry
20 26 2 0 2 errx == 2
13 27 3 0 3 ( 2 )
3 27 3 0 2
21 28 3 1 2 erry == 2
13 31 5 1 3 ( 2 )
3 32 5 0 2
21 33 5 2 2 erry == 0
20 34 5 3 3 * px != _Inf . _Double
13 37 7 2 4 ( 0 )
3 38 7 0 3
40 39 7 0 3
13 43 10 3 4 ( 2 )
3 44 10 0 3
3 44 10 0 2
21 45 10 4 2 erry == 1
20 46 10 5 3 * px != - _Inf . _Double
13 49 12 4 4 ( 1 )
3 50 12 0 3
40 51 12 0 3
13 55 15 5 4 ( 2 )
3 56 15 0 3
3 56 15 0 2
21 57 15 6 2 errx == 0
42 60 16 0 3 errx = _Dscale ( px , eoff )
14 62 16 6 3 0
12 64 18 7 4
14 66 18 8 3 1
3 68 19 0 3
13 69 20 9 3 ( errx )
3 70 20 0 2
21 71 20 7 2 * px == _Inf . _Double
13 74 22 10 3 ( 1 )
3 75 22 0 2
40 76 22 0 2
13 79 24 11 3 ( 0 )
3 80 24 0 2
3 81 24 0 1
21 82 24 8 1 * px < - hugexp
13 85 26 12 2 ( 0 )
3 86 26 0 1
21 87 26 9 1 hugexp < * px
13 91 29 13 2 ( 1 )
3 92 29 0 1
40 93 29 0 1
25 96 31 10 2 g < 0.0
78 0 0 3 0 2
79 0 0 3 0 0,1
70 100 33 0 2 - _Eps . _Double < g && g < _Eps . _Double
75 100 33 5 2 T && T
76 100 33 4 2 T && F
76 100 33 3 2 F && _
80 0 0 3 0 1,2
81 0 0 3 0 0
77 100 33 0 2 - _Eps . _Double < g
80 0 0 3 0 2
81 0 0 3 0 1
77 100 33 0 2 g < _Eps . _Double
3 101 34 0 2
40 102 34 0 2
3 110 39 0 2
42 112 39 0 2 errx = _Dscale ( px , ( long ) xexp + eoff )
14 114 39 14 2 0
12 116 41 15 3
14 118 41 16 2 1
3 120 42 0 2
13 121 43 17 2 ( errx )
3 122 43 0 1
2 123 43 0 0 _Exp
%123,1,18,11,6,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\expf_uv__uv_extreme.c
7 1561811942 0 0
0 256 0 0 0 expf_uv__uv_extreme_extreme_values
90 0 0 0 0 ( )
23 267 7 0 1 ind < 3
20 270 9 1 2 test_compare_float ( res , expf_uv__uv_extreme_extreme_values_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1
3 275 11 0 2
40 275 11 0 2
3 277 12 0 2
3 278 12 0 1
78 0 0 0 0 2
79 0 0 0 0 0,1
70 280 12 0 1 errors == 0 && passes == 3
75 280 12 2 1 T && T
76 280 12 1 1 T && F
76 280 12 0 1 F && _
80 0 0 0 0 1,2
81 0 0 0 0 0
77 280 12 0 1 errors == 0
80 0 0 0 0 2
81 0 0 0 0 1
77 280 12 0 1 passes == 3
3 282 13 0 1
40 282 13 0 1
3 284 14 0 1
13 286 15 0 1 errors
2 287 15 0 0 expf_uv__uv_extreme_extreme_values
0 299 0 1 0 expf_uv__uv_extreme_expf_nan
90 0 0 0 0 ( )
23 310 7 2 1 ind < 1
20 313 9 3 2 test_compare_float ( res , expf_uv__uv_extreme_expf_nan_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1
3 318 11 0 2
40 318 11 0 2
3 320 12 0 2
3 321 12 0 1
78 0 0 3 0 2
79 0 0 3 0 0,1
70 323 12 0 1 errors == 0 && passes == 1
75 323 12 5 1 T && T
76 323 12 4 1 T && F
76 323 12 3 1 F && _
80 0 0 3 0 1,2
81 0 0 3 0 0
77 323 12 0 1 errors == 0
80 0 0 3 0 2
81 0 0 3 0 1
77 323 12 0 1 passes == 1
3 325 13 0 1
40 325 13 0 1
3 327 14 0 1
13 329 15 1 1 errors
2 330 15 0 0 expf_uv__uv_extreme_expf_nan
0 343 0 2 0 expf_uv__uv_extreme_expf_infinity
90 0 0 0 0 ( )
23 354 7 4 1 ind < 2
20 357 9 5 2 test_compare_float ( res , expf_uv__uv_extreme_expf_infinity_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1
3 362 11 0 2
40 362 11 0 2
3 364 12 0 2
3 365 12 0 1
78 0 0 6 0 2
79 0 0 6 0 0,1
70 367 12 0 1 errors == 0 && passes == 2
75 367 12 8 1 T && T
76 367 12 7 1 T && F
76 367 12 6 1 F && _
80 0 0 6 0 1,2
81 0 0 6 0 0
77 367 12 0 1 errors == 0
80 0 0 6 0 2
81 0 0 6 0 1
77 367 12 0 1 passes == 2
3 369 13 0 1
40 369 13 0 1
3 371 14 0 1
13 373 15 2 1 errors
2 374 15 0 0 expf_uv__uv_extreme_expf_infinity
0 408 0 3 0 expf_uv__uv_extreme_expf_denormalized_pos_float_2_0
90 0 0 0 0 ( )
23 419 7 6 1 ind < 23
20 422 9 7 2 test_compare_float ( res , expf_uv__uv_extreme_expf_denormalized_pos_float_2_0_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1
3 427 11 0 2
40 427 11 0 2
3 429 12 0 2
3 430 12 0 1
78 0 0 9 0 2
79 0 0 9 0 0,1
70 432 12 0 1 errors == 0 && passes == 23
75 432 12 11 1 T && T
76 432 12 10 1 T && F
76 432 12 9 1 F && _
80 0 0 9 0 1,2
81 0 0 9 0 0
77 432 12 0 1 errors == 0
80 0 0 9 0 2
81 0 0 9 0 1
77 432 12 0 1 passes == 23
3 434 13 0 1
40 434 13 0 1
3 436 14 0 1
13 438 15 3 1 errors
2 439 15 0 0 expf_uv__uv_extreme_expf_denormalized_pos_float_2_0
0 473 0 4 0 expf_uv__uv_extreme_expf_denormalized_neg_float_2_0
90 0 0 0 0 ( )
23 484 7 8 1 ind < 23
20 487 9 9 2 test_compare_float ( res , expf_uv__uv_extreme_expf_denormalized_neg_float_2_0_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1
3 492 11 0 2
40 492 11 0 2
3 494 12 0 2
3 495 12 0 1
78 0 0 12 0 2
79 0 0 12 0 0,1
70 497 12 0 1 errors == 0 && passes == 23
75 497 12 14 1 T && T
76 497 12 13 1 T && F
76 497 12 12 1 F && _
80 0 0 12 0 1,2
81 0 0 12 0 0
77 497 12 0 1 errors == 0
80 0 0 12 0 2
81 0 0 12 0 1
77 497 12 0 1 passes == 23
3 499 13 0 1
40 499 13 0 1
3 501 14 0 1
13 503 15 4 1 errors
2 504 15 0 0 expf_uv__uv_extreme_expf_denormalized_neg_float_2_0
0 595 0 5 0 expf_uv__uv_extreme_expf_denormalized_pos_float_1_2
90 0 0 0 0 ( )
23 606 7 10 1 ind < 80
20 609 9 11 2 test_compare_float ( res , expf_uv__uv_extreme_expf_denormalized_pos_float_1_2_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1
3 614 11 0 2
40 614 11 0 2
3 616 12 0 2
3 617 12 0 1
78 0 0 15 0 2
79 0 0 15 0 0,1
70 619 12 0 1 errors == 0 && passes == 80
75 619 12 17 1 T && T
76 619 12 16 1 T && F
76 619 12 15 1 F && _
80 0 0 15 0 1,2
81 0 0 15 0 0
77 619 12 0 1 errors == 0
80 0 0 15 0 2
81 0 0 15 0 1
77 619 12 0 1 passes == 80
3 621 13 0 1
40 621 13 0 1
3 623 14 0 1
13 625 15 5 1 errors
2 626 15 0 0 expf_uv__uv_extreme_expf_denormalized_pos_float_1_2
0 694 0 6 0 expf_uv__uv_extreme_expf_denormalized_neg_float_1_3
90 0 0 0 0 ( )
23 705 7 12 1 ind < 57
20 708 9 13 2 test_compare_float ( res , expf_uv__uv_extreme_expf_denormalized_neg_float_1_3_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1
3 713 11 0 2
40 713 11 0 2
3 715 12 0 2
3 716 12 0 1
78 0 0 18 0 2
79 0 0 18 0 0,1
70 718 12 0 1 errors == 0 && passes == 57
75 718 12 20 1 T && T
76 718 12 19 1 T && F
76 718 12 18 1 F && _
80 0 0 18 0 1,2
81 0 0 18 0 0
77 718 12 0 1 errors == 0
80 0 0 18 0 2
81 0 0 18 0 1
77 718 12 0 1 passes == 57
3 720 13 0 1
40 720 13 0 1
3 722 14 0 1
13 724 15 6 1 errors
2 725 15 0 0 expf_uv__uv_extreme_expf_denormalized_neg_float_1_3
0 756 0 7 0 expf_uv__uv_extreme_expf_extreme_range
90 0 0 0 0 ( )
23 767 7 14 1 ind < 20
20 770 9 15 2 test_compare_float ( res , expf_uv__uv_extreme_expf_extreme_range_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1
3 775 11 0 2
40 775 11 0 2
3 777 12 0 2
3 778 12 0 1
78 0 0 21 0 2
79 0 0 21 0 0,1
70 780 12 0 1 errors == 0 && passes == 20
75 780 12 23 1 T && T
76 780 12 22 1 T && F
76 780 12 21 1 F && _
80 0 0 21 0 1,2
81 0 0 21 0 0
77 780 12 0 1 errors == 0
80 0 0 21 0 2
81 0 0 21 0 1
77 780 12 0 1 passes == 20
3 782 13 0 1
40 782 13 0 1
3 784 14 0 1
13 786 15 7 1 errors
2 787 15 0 0 expf_uv__uv_extreme_expf_extreme_range
0 848 0 8 0 expf_uv__uv_extreme_expf_extreme_range_rnd
90 0 0 0 0 ( )
23 859 7 16 1 ind < 50
20 862 9 17 2 test_compare_float ( res , expf_uv__uv_extreme_expf_extreme_range_rnd_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1
3 867 11 0 2
40 867 11 0 2
3 869 12 0 2
3 870 12 0 1
78 0 0 24 0 2
79 0 0 24 0 0,1
70 872 12 0 1 errors == 0 && passes == 50
75 872 12 26 1 T && T
76 872 12 25 1 T && F
76 872 12 24 1 F && _
80 0 0 24 0 1,2
81 0 0 24 0 0
77 872 12 0 1 errors == 0
80 0 0 24 0 2
81 0 0 24 0 1
77 872 12 0 1 passes == 50
3 874 13 0 1
40 874 13 0 1
3 876 14 0 1
13 878 15 8 1 errors
2 879 15 0 0 expf_uv__uv_extreme_expf_extreme_range_rnd
0 913 0 9 0 expf_uv__uv_extreme_expf_extreme_ramp_up
90 0 0 0 0 ( )
23 924 7 18 1 ind < 24
20 927 9 19 2 test_compare_float ( res , expf_uv__uv_extreme_expf_extreme_ramp_up_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1
3 932 11 0 2
40 932 11 0 2
3 934 12 0 2
3 935 12 0 1
78 0 0 27 0 2
79 0 0 27 0 0,1
70 937 12 0 1 errors == 0 && passes == 24
75 937 12 29 1 T && T
76 937 12 28 1 T && F
76 937 12 27 1 F && _
80 0 0 27 0 1,2
81 0 0 27 0 0
77 937 12 0 1 errors == 0
80 0 0 27 0 2
81 0 0 27 0 1
77 937 12 0 1 passes == 24
3 939 13 0 1
40 939 13 0 1
3 941 14 0 1
13 943 15 9 1 errors
2 944 15 0 0 expf_uv__uv_extreme_expf_extreme_ramp_up
0 978 0 10 0 expf_uv__uv_extreme_expf_extreme_ramp_down
90 0 0 0 0 ( )
23 989 7 20 1 ind < 24
20 992 9 21 2 test_compare_float ( res , expf_uv__uv_extreme_expf_extreme_ramp_down_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1
3 997 11 0 2
40 997 11 0 2
3 999 12 0 2
3 1000 12 0 1
78 0 0 30 0 2
79 0 0 30 0 0,1
70 1002 12 0 1 errors == 0 && passes == 24
75 1002 12 32 1 T && T
76 1002 12 31 1 T && F
76 1002 12 30 1 F && _
80 0 0 30 0 1,2
81 0 0 30 0 0
77 1002 12 0 1 errors == 0
80 0 0 30 0 2
81 0 0 30 0 1
77 1002 12 0 1 passes == 24
3 1004 13 0 1
40 1004 13 0 1
3 1006 14 0 1
13 1008 15 10 1 errors
2 1009 15 0 0 expf_uv__uv_extreme_expf_extreme_ramp_down
0 1022 0 11 0 expf_uv__uv_extreme_corner_values
90 0 0 0 0 ( )
23 1033 7 22 1 ind < 2
20 1036 9 23 2 test_compare_float ( res , expf_uv__uv_extreme_corner_values_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1
3 1041 11 0 2
40 1041 11 0 2
3 1043 12 0 2
3 1044 12 0 1
78 0 0 33 0 2
79 0 0 33 0 0,1
70 1046 12 0 1 errors == 0 && passes == 2
75 1046 12 35 1 T && T
76 1046 12 34 1 T && F
76 1046 12 33 1 F && _
80 0 0 33 0 1,2
81 0 0 33 0 0
77 1046 12 0 1 errors == 0
80 0 0 33 0 2
81 0 0 33 0 1
77 1046 12 0 1 passes == 2
3 1048 13 0 1
40 1048 13 0 1
3 1050 14 0 1
13 1052 15 11 1 errors
2 1053 15 0 0 expf_uv__uv_extreme_corner_values
0 1084 0 12 0 expf_uv__uv_extreme_pi_half
90 0 0 0 0 ( )
23 1095 7 24 1 ind < 20
20 1098 9 25 2 test_compare_float ( res , expf_uv__uv_extreme_pi_half_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1
3 1103 11 0 2
40 1103 11 0 2
3 1105 12 0 2
3 1106 12 0 1
78 0 0 36 0 2
79 0 0 36 0 0,1
70 1108 12 0 1 errors == 0 && passes == 20
75 1108 12 38 1 T && T
76 1108 12 37 1 T && F
76 1108 12 36 1 F && _
80 0 0 36 0 1,2
81 0 0 36 0 0
77 1108 12 0 1 errors == 0
80 0 0 36 0 2
81 0 0 36 0 1
77 1108 12 0 1 passes == 20
3 1110 13 0 1
40 1110 13 0 1
3 1112 14 0 1
13 1114 15 12 1 errors
2 1115 15 0 0 expf_uv__uv_extreme_pi_half
0 1176 0 13 0 expf_uv__uv_extreme_pi_half_rnd
90 0 0 0 0 ( )
23 1187 7 26 1 ind < 50
20 1190 9 27 2 test_compare_float ( res , expf_uv__uv_extreme_pi_half_rnd_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1
3 1195 11 0 2
40 1195 11 0 2
3 1197 12 0 2
3 1198 12 0 1
78 0 0 39 0 2
79 0 0 39 0 0,1
70 1200 12 0 1 errors == 0 && passes == 50
75 1200 12 41 1 T && T
76 1200 12 40 1 T && F
76 1200 12 39 1 F && _
80 0 0 39 0 1,2
81 0 0 39 0 0
77 1200 12 0 1 errors == 0
80 0 0 39 0 2
81 0 0 39 0 1
77 1200 12 0 1 passes == 50
3 1202 13 0 1
40 1202 13 0 1
3 1204 14 0 1
13 1206 15 13 1 errors
2 1207 15 0 0 expf_uv__uv_extreme_pi_half_rnd
0 1238 0 14 0 expf_uv__uv_extreme_mi_thousand
90 0 0 0 0 ( )
23 1249 7 28 1 ind < 20
20 1252 9 29 2 test_compare_float ( res , expf_uv__uv_extreme_mi_thousand_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1
3 1257 11 0 2
40 1257 11 0 2
3 1259 12 0 2
3 1260 12 0 1
78 0 0 42 0 2
79 0 0 42 0 0,1
70 1262 12 0 1 errors == 0 && passes == 20
75 1262 12 44 1 T && T
76 1262 12 43 1 T && F
76 1262 12 42 1 F && _
80 0 0 42 0 1,2
81 0 0 42 0 0
77 1262 12 0 1 errors == 0
80 0 0 42 0 2
81 0 0 42 0 1
77 1262 12 0 1 passes == 20
3 1264 13 0 1
40 1264 13 0 1
3 1266 14 0 1
13 1268 15 14 1 errors
2 1269 15 0 0 expf_uv__uv_extreme_mi_thousand
0 1330 0 15 0 expf_uv__uv_extreme_mi_thousand_rnd
90 0 0 0 0 ( )
23 1341 7 30 1 ind < 50
20 1344 9 31 2 test_compare_float ( res , expf_uv__uv_extreme_mi_thousand_rnd_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1
3 1349 11 0 2
40 1349 11 0 2
3 1351 12 0 2
3 1352 12 0 1
78 0 0 45 0 2
79 0 0 45 0 0,1
70 1354 12 0 1 errors == 0 && passes == 50
75 1354 12 47 1 T && T
76 1354 12 46 1 T && F
76 1354 12 45 1 F && _
80 0 0 45 0 1,2
81 0 0 45 0 0
77 1354 12 0 1 errors == 0
80 0 0 45 0 2
81 0 0 45 0 1
77 1354 12 0 1 passes == 50
3 1356 13 0 1
40 1356 13 0 1
3 1358 14 0 1
13 1360 15 15 1 errors
2 1361 15 0 0 expf_uv__uv_extreme_mi_thousand_rnd
0 1392 0 16 0 expf_uv__uv_extreme_ten_thousand
90 0 0 0 0 ( )
23 1403 7 32 1 ind < 20
20 1406 9 33 2 test_compare_float ( res , expf_uv__uv_extreme_ten_thousand_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1
3 1411 11 0 2
40 1411 11 0 2
3 1413 12 0 2
3 1414 12 0 1
78 0 0 48 0 2
79 0 0 48 0 0,1
70 1416 12 0 1 errors == 0 && passes == 20
75 1416 12 50 1 T && T
76 1416 12 49 1 T && F
76 1416 12 48 1 F && _
80 0 0 48 0 1,2
81 0 0 48 0 0
77 1416 12 0 1 errors == 0
80 0 0 48 0 2
81 0 0 48 0 1
77 1416 12 0 1 passes == 20
3 1418 13 0 1
40 1418 13 0 1
3 1420 14 0 1
13 1422 15 16 1 errors
2 1423 15 0 0 expf_uv__uv_extreme_ten_thousand
0 1472 0 17 0 expf_uv__uv_extreme_ten_thousand_rnd
90 0 0 0 0 ( )
23 1483 7 34 1 ind < 38
20 1486 9 35 2 test_compare_float ( res , expf_uv__uv_extreme_ten_thousand_rnd_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1
3 1491 11 0 2
40 1491 11 0 2
3 1493 12 0 2
3 1494 12 0 1
78 0 0 51 0 2
79 0 0 51 0 0,1
70 1496 12 0 1 errors == 0 && passes == 38
75 1496 12 53 1 T && T
76 1496 12 52 1 T && F
76 1496 12 51 1 F && _
80 0 0 51 0 1,2
81 0 0 51 0 0
77 1496 12 0 1 errors == 0
80 0 0 51 0 2
81 0 0 51 0 1
77 1496 12 0 1 passes == 38
3 1498 13 0 1
40 1498 13 0 1
3 1500 14 0 1
13 1502 15 17 1 errors
2 1503 15 0 0 expf_uv__uv_extreme_ten_thousand_rnd
0 1572 0 18 0 expf_uv__uv_extreme_approx_zero
90 0 0 0 0 ( )
23 1583 7 36 1 ind < 59
20 1586 9 37 2 test_compare_float ( res , expf_uv__uv_extreme_approx_zero_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1
3 1591 11 0 2
40 1591 11 0 2
3 1593 12 0 2
3 1594 12 0 1
78 0 0 54 0 2
79 0 0 54 0 0,1
70 1596 12 0 1 errors == 0 && passes == 59
75 1596 12 56 1 T && T
76 1596 12 55 1 T && F
76 1596 12 54 1 F && _
80 0 0 54 0 1,2
81 0 0 54 0 0
77 1596 12 0 1 errors == 0
80 0 0 54 0 2
81 0 0 54 0 1
77 1596 12 0 1 passes == 59
3 1598 13 0 1
40 1598 13 0 1
3 1600 14 0 1
13 1602 15 18 1 errors
2 1603 15 0 0 expf_uv__uv_extreme_approx_zero
0 1639 0 19 0 expf_uv__uv_extreme_approx_pi_34
90 0 0 0 0 ( )
23 1650 7 38 1 ind < 26
20 1653 9 39 2 test_compare_float ( res , expf_uv__uv_extreme_approx_pi_34_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1
3 1658 11 0 2
40 1658 11 0 2
3 1660 12 0 2
3 1661 12 0 1
78 0 0 57 0 2
79 0 0 57 0 0,1
70 1663 12 0 1 errors == 0 && passes == 26
75 1663 12 59 1 T && T
76 1663 12 58 1 T && F
76 1663 12 57 1 F && _
80 0 0 57 0 1,2
81 0 0 57 0 0
77 1663 12 0 1 errors == 0
80 0 0 57 0 2
81 0 0 57 0 1
77 1663 12 0 1 passes == 26
3 1665 13 0 1
40 1665 13 0 1
3 1667 14 0 1
13 1669 15 19 1 errors
2 1670 15 0 0 expf_uv__uv_extreme_approx_pi_34
0 1682 0 20 0 expf_uv__uv_extreme_manual_values
90 0 0 0 0 ( )
23 1693 7 40 1 ind < 1
20 1696 9 41 2 test_compare_float ( res , expf_uv__uv_extreme_manual_values_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1
3 1701 11 0 2
40 1701 11 0 2
3 1703 12 0 2
3 1704 12 0 1
78 0 0 60 0 2
79 0 0 60 0 0,1
70 1706 12 0 1 errors == 0 && passes == 1
75 1706 12 62 1 T && T
76 1706 12 61 1 T && F
76 1706 12 60 1 F && _
80 0 0 60 0 1,2
81 0 0 60 0 0
77 1706 12 0 1 errors == 0
80 0 0 60 0 2
81 0 0 60 0 1
77 1706 12 0 1 passes == 1
3 1708 13 0 1
40 1708 13 0 1
3 1710 14 0 1
13 1712 15 20 1 errors
2 1713 15 0 0 expf_uv__uv_extreme_manual_values
0 1726 0 21 0 expf_uv__uv_extreme_coverage_values
90 0 0 0 0 ( )
23 1737 7 42 1 ind < 2
20 1740 9 43 2 test_compare_float ( res , expf_uv__uv_extreme_coverage_values_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1
3 1745 11 0 2
40 1745 11 0 2
3 1747 12 0 2
3 1748 12 0 1
78 0 0 63 0 2
79 0 0 63 0 0,1
70 1750 12 0 1 errors == 0 && passes == 2
75 1750 12 65 1 T && T
76 1750 12 64 1 T && F
76 1750 12 63 1 F && _
80 0 0 63 0 1,2
81 0 0 63 0 0
77 1750 12 0 1 errors == 0
80 0 0 63 0 2
81 0 0 63 0 1
77 1750 12 0 1 passes == 2
3 1752 13 0 1
40 1752 13 0 1
3 1754 14 0 1
13 1756 15 21 1 errors
2 1757 15 0 0 expf_uv__uv_extreme_coverage_values
0 1821 0 22 0 expf_uv__uv_extreme_coverage_floats
90 0 0 0 0 ( )
23 1832 7 44 1 ind < 53
20 1835 9 45 2 test_compare_float ( res , expf_uv__uv_extreme_coverage_floats_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1
3 1840 11 0 2
40 1840 11 0 2
3 1842 12 0 2
3 1843 12 0 1
78 0 0 66 0 2
79 0 0 66 0 0,1
70 1845 12 0 1 errors == 0 && passes == 53
75 1845 12 68 1 T && T
76 1845 12 67 1 T && F
76 1845 12 66 1 F && _
80 0 0 66 0 1,2
81 0 0 66 0 0
77 1845 12 0 1 errors == 0
80 0 0 66 0 2
81 0 0 66 0 1
77 1845 12 0 1 passes == 53
3 1847 13 0 1
40 1847 13 0 1
3 1849 14 0 1
13 1851 15 22 1 errors
2 1852 15 0 0 expf_uv__uv_extreme_coverage_floats
0 1963 0 23 0 expf_uv__uv_extreme_coverage_floats3
90 0 0 0 0 ( )
23 1974 7 46 1 ind < 100
20 1977 9 47 2 test_compare_float ( res , expf_uv__uv_extreme_coverage_floats3_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_extreme , & max_dif_above_expf_uv__uv_extreme ) != 1
3 1982 11 0 2
40 1982 11 0 2
3 1984 12 0 2
3 1985 12 0 1
78 0 0 69 0 2
79 0 0 69 0 0,1
70 1987 12 0 1 errors == 0 && passes == 100
75 1987 12 71 1 T && T
76 1987 12 70 1 T && F
76 1987 12 69 1 F && _
80 0 0 69 0 1,2
81 0 0 69 0 0
77 1987 12 0 1 errors == 0
80 0 0 69 0 2
81 0 0 69 0 1
77 1987 12 0 1 passes == 100
3 1989 13 0 1
40 1989 13 0 1
3 1991 14 0 1
13 1993 15 23 1 errors
2 1994 15 0 0 expf_uv__uv_extreme_coverage_floats3
0 1999 0 24 0 expf_uv__uv_extreme_main_test
90 0 0 0 0 ( )
20 2027 26 48 1 errors == 0
3 2029 27 0 1
40 2029 27 0 1
3 2031 28 0 1
13 2085 30 24 1 errors
2 2086 30 0 0 expf_uv__uv_extreme_main_test
%2086,25,25,49,72,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\expf_uv__uv_normal.c
7 1561811943 0 0
0 130 0 0 0 expf_uv__uv_normal_normal_values
90 0 0 0 0 ( )
23 141 7 0 1 ind < 3
20 144 9 1 2 test_compare_float ( res , expf_uv__uv_normal_normal_values_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_normal , & max_dif_above_expf_uv__uv_normal ) != 1
3 149 11 0 2
40 149 11 0 2
3 151 12 0 2
3 152 12 0 1
78 0 0 0 0 2
79 0 0 0 0 0,1
70 154 12 0 1 errors == 0 && passes == 3
75 154 12 2 1 T && T
76 154 12 1 1 T && F
76 154 12 0 1 F && _
80 0 0 0 0 1,2
81 0 0 0 0 0
77 154 12 0 1 errors == 0
80 0 0 0 0 2
81 0 0 0 0 1
77 154 12 0 1 passes == 3
3 156 13 0 1
40 156 13 0 1
3 158 14 0 1
13 160 15 0 1 errors
2 161 15 0 0 expf_uv__uv_normal_normal_values
0 192 0 1 0 expf_uv__uv_normal_expf_normal_range
90 0 0 0 0 ( )
23 203 7 2 1 ind < 20
20 206 9 3 2 test_compare_float ( res , expf_uv__uv_normal_expf_normal_range_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_normal , & max_dif_above_expf_uv__uv_normal ) != 1
3 211 11 0 2
40 211 11 0 2
3 213 12 0 2
3 214 12 0 1
78 0 0 3 0 2
79 0 0 3 0 0,1
70 216 12 0 1 errors == 0 && passes == 20
75 216 12 5 1 T && T
76 216 12 4 1 T && F
76 216 12 3 1 F && _
80 0 0 3 0 1,2
81 0 0 3 0 0
77 216 12 0 1 errors == 0
80 0 0 3 0 2
81 0 0 3 0 1
77 216 12 0 1 passes == 20
3 218 13 0 1
40 218 13 0 1
3 220 14 0 1
13 222 15 1 1 errors
2 223 15 0 0 expf_uv__uv_normal_expf_normal_range
0 284 0 2 0 expf_uv__uv_normal_expf_normal_range_rnd
90 0 0 0 0 ( )
23 295 7 4 1 ind < 50
20 298 9 5 2 test_compare_float ( res , expf_uv__uv_normal_expf_normal_range_rnd_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_normal , & max_dif_above_expf_uv__uv_normal ) != 1
3 303 11 0 2
40 303 11 0 2
3 305 12 0 2
3 306 12 0 1
78 0 0 6 0 2
79 0 0 6 0 0,1
70 308 12 0 1 errors == 0 && passes == 50
75 308 12 8 1 T && T
76 308 12 7 1 T && F
76 308 12 6 1 F && _
80 0 0 6 0 1,2
81 0 0 6 0 0
77 308 12 0 1 errors == 0
80 0 0 6 0 2
81 0 0 6 0 1
77 308 12 0 1 passes == 50
3 310 13 0 1
40 310 13 0 1
3 312 14 0 1
13 314 15 2 1 errors
2 315 15 0 0 expf_uv__uv_normal_expf_normal_range_rnd
0 338 0 3 0 expf_uv__uv_normal_base_values
90 0 0 0 0 ( )
23 349 7 6 1 ind < 12
20 352 9 7 2 test_compare_float ( res , expf_uv__uv_normal_base_values_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_normal , & max_dif_above_expf_uv__uv_normal ) != 1
3 357 11 0 2
40 357 11 0 2
3 359 12 0 2
3 360 12 0 1
78 0 0 9 0 2
79 0 0 9 0 0,1
70 362 12 0 1 errors == 0 && passes == 12
75 362 12 11 1 T && T
76 362 12 10 1 T && F
76 362 12 9 1 F && _
80 0 0 9 0 1,2
81 0 0 9 0 0
77 362 12 0 1 errors == 0
80 0 0 9 0 2
81 0 0 9 0 1
77 362 12 0 1 passes == 12
3 364 13 0 1
40 364 13 0 1
3 366 14 0 1
13 368 15 3 1 errors
2 369 15 0 0 expf_uv__uv_normal_base_values
0 400 0 4 0 expf_uv__uv_normal_around_one
90 0 0 0 0 ( )
23 411 7 8 1 ind < 20
20 414 9 9 2 test_compare_float ( res , expf_uv__uv_normal_around_one_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_normal , & max_dif_above_expf_uv__uv_normal ) != 1
3 419 11 0 2
40 419 11 0 2
3 421 12 0 2
3 422 12 0 1
78 0 0 12 0 2
79 0 0 12 0 0,1
70 424 12 0 1 errors == 0 && passes == 20
75 424 12 14 1 T && T
76 424 12 13 1 T && F
76 424 12 12 1 F && _
80 0 0 12 0 1,2
81 0 0 12 0 0
77 424 12 0 1 errors == 0
80 0 0 12 0 2
81 0 0 12 0 1
77 424 12 0 1 passes == 20
3 426 13 0 1
40 426 13 0 1
3 428 14 0 1
13 430 15 4 1 errors
2 431 15 0 0 expf_uv__uv_normal_around_one
0 492 0 5 0 expf_uv__uv_normal_around_one_rnd
90 0 0 0 0 ( )
23 503 7 10 1 ind < 50
20 506 9 11 2 test_compare_float ( res , expf_uv__uv_normal_around_one_rnd_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_normal , & max_dif_above_expf_uv__uv_normal ) != 1
3 511 11 0 2
40 511 11 0 2
3 513 12 0 2
3 514 12 0 1
78 0 0 15 0 2
79 0 0 15 0 0,1
70 516 12 0 1 errors == 0 && passes == 50
75 516 12 17 1 T && T
76 516 12 16 1 T && F
76 516 12 15 1 F && _
80 0 0 15 0 1,2
81 0 0 15 0 0
77 516 12 0 1 errors == 0
80 0 0 15 0 2
81 0 0 15 0 1
77 516 12 0 1 passes == 50
3 518 13 0 1
40 518 13 0 1
3 520 14 0 1
13 522 15 5 1 errors
2 523 15 0 0 expf_uv__uv_normal_around_one_rnd
0 554 0 6 0 expf_uv__uv_normal_around_minus_one
90 0 0 0 0 ( )
23 565 7 12 1 ind < 20
20 568 9 13 2 test_compare_float ( res , expf_uv__uv_normal_around_minus_one_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_normal , & max_dif_above_expf_uv__uv_normal ) != 1
3 573 11 0 2
40 573 11 0 2
3 575 12 0 2
3 576 12 0 1
78 0 0 18 0 2
79 0 0 18 0 0,1
70 578 12 0 1 errors == 0 && passes == 20
75 578 12 20 1 T && T
76 578 12 19 1 T && F
76 578 12 18 1 F && _
80 0 0 18 0 1,2
81 0 0 18 0 0
77 578 12 0 1 errors == 0
80 0 0 18 0 2
81 0 0 18 0 1
77 578 12 0 1 passes == 20
3 580 13 0 1
40 580 13 0 1
3 582 14 0 1
13 584 15 6 1 errors
2 585 15 0 0 expf_uv__uv_normal_around_minus_one
0 646 0 7 0 expf_uv__uv_normal_around_minus_one_rnd
90 0 0 0 0 ( )
23 657 7 14 1 ind < 50
20 660 9 15 2 test_compare_float ( res , expf_uv__uv_normal_around_minus_one_rnd_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_normal , & max_dif_above_expf_uv__uv_normal ) != 1
3 665 11 0 2
40 665 11 0 2
3 667 12 0 2
3 668 12 0 1
78 0 0 21 0 2
79 0 0 21 0 0,1
70 670 12 0 1 errors == 0 && passes == 50
75 670 12 23 1 T && T
76 670 12 22 1 T && F
76 670 12 21 1 F && _
80 0 0 21 0 1,2
81 0 0 21 0 0
77 670 12 0 1 errors == 0
80 0 0 21 0 2
81 0 0 21 0 1
77 670 12 0 1 passes == 50
3 672 13 0 1
40 672 13 0 1
3 674 14 0 1
13 676 15 7 1 errors
2 677 15 0 0 expf_uv__uv_normal_around_minus_one_rnd
0 712 0 8 0 expf_uv__uv_normal_approx_two
90 0 0 0 0 ( )
23 723 7 16 1 ind < 25
20 726 9 17 2 test_compare_float ( res , expf_uv__uv_normal_approx_two_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_normal , & max_dif_above_expf_uv__uv_normal ) != 1
3 731 11 0 2
40 731 11 0 2
3 733 12 0 2
3 734 12 0 1
78 0 0 24 0 2
79 0 0 24 0 0,1
70 736 12 0 1 errors == 0 && passes == 25
75 736 12 26 1 T && T
76 736 12 25 1 T && F
76 736 12 24 1 F && _
80 0 0 24 0 1,2
81 0 0 24 0 0
77 736 12 0 1 errors == 0
80 0 0 24 0 2
81 0 0 24 0 1
77 736 12 0 1 passes == 25
3 738 13 0 1
40 738 13 0 1
3 740 14 0 1
13 742 15 8 1 errors
2 743 15 0 0 expf_uv__uv_normal_approx_two
0 779 0 9 0 expf_uv__uv_normal_approx_minus_one
90 0 0 0 0 ( )
23 790 7 18 1 ind < 26
20 793 9 19 2 test_compare_float ( res , expf_uv__uv_normal_approx_minus_one_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_normal , & max_dif_above_expf_uv__uv_normal ) != 1
3 798 11 0 2
40 798 11 0 2
3 800 12 0 2
3 801 12 0 1
78 0 0 27 0 2
79 0 0 27 0 0,1
70 803 12 0 1 errors == 0 && passes == 26
75 803 12 29 1 T && T
76 803 12 28 1 T && F
76 803 12 27 1 F && _
80 0 0 27 0 1,2
81 0 0 27 0 0
77 803 12 0 1 errors == 0
80 0 0 27 0 2
81 0 0 27 0 1
77 803 12 0 1 passes == 26
3 805 13 0 1
40 805 13 0 1
3 807 14 0 1
13 809 15 9 1 errors
2 810 15 0 0 expf_uv__uv_normal_approx_minus_one
0 815 0 10 0 expf_uv__uv_normal_main_test
90 0 0 0 0 ( )
20 829 12 20 1 errors == 0
3 831 13 0 1
40 831 13 0 1
3 833 14 0 1
13 887 16 10 1 errors
2 888 16 0 0 expf_uv__uv_normal_main_test
%888,11,11,21,30,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\expf_uv__uv_terms.c
7 1561811944 0 0
0 118 0 0 0 expf_uv__uv_terms_expf_deterministic
90 0 0 0 0 ( )
23 131 9 0 1 ind < 50
20 134 11 1 2 res != expf_uv__uv_terms_expf_deterministic_io_table [ ind ] . expf_out
78 0 0 0 0 2
79 0 0 0 0 0,1
70 136 11 0 3 ( expf ( x ) == expf ( x ) ) >= - 2147483648.0 && ( expf ( x ) == expf ( x ) ) <= 2147483647.0
75 136 11 2 3 T && T
76 136 11 1 3 T && F
76 136 11 0 3 F && _
80 0 0 0 0 1,2
81 0 0 0 0 0
77 136 11 0 3 ( expf ( x ) == expf ( x ) ) >= - 2147483648.0
80 0 0 0 0 2
81 0 0 0 0 1
77 136 11 0 3 ( expf ( x ) == expf ( x ) ) <= 2147483647.0
78 0 0 3 0 2
79 0 0 3 0 0,1
70 141 13 0 4 ( res1 != expf_uv__uv_terms_expf_deterministic_io_table [ ind ] . expf_out ) && ( res2 != expf_uv__uv_terms_expf_deterministic_io_table [ ind ] . expf_out )
75 141 13 5 4 (T) && (T)
76 141 13 4 4 (T) && (F)
76 141 13 3 4 (F) && (_)
80 0 0 3 0 1,2
81 0 0 3 0 0
77 141 13 0 4 res1 != expf_uv__uv_terms_expf_deterministic_io_table [ ind ] . expf_out
80 0 0 3 0 2
81 0 0 3 0 1
77 141 13 0 4 res2 != expf_uv__uv_terms_expf_deterministic_io_table [ ind ] . expf_out
3 146 15 0 4
40 146 15 0 4
3 148 16 0 4
3 149 16 0 3
40 149 16 0 3
3 151 17 0 3
3 152 17 0 2
40 152 17 0 2
3 154 18 0 2
3 155 18 0 1
78 0 0 6 0 2
79 0 0 6 0 0,1
70 157 18 0 1 errors == 0 && passes == 50
75 157 18 8 1 T && T
76 157 18 7 1 T && F
76 157 18 6 1 F && _
80 0 0 6 0 1,2
81 0 0 6 0 0
77 157 18 0 1 errors == 0
80 0 0 6 0 2
81 0 0 6 0 1
77 157 18 0 1 passes == 50
3 159 19 0 1
40 159 19 0 1
3 161 20 0 1
13 163 21 0 1 errors
2 164 21 0 0 expf_uv__uv_terms_expf_deterministic
0 226 0 1 0 expf_uv__uv_terms_expf_combine
90 0 0 0 0 ( )
23 237 7 2 1 ind < 50
20 240 9 3 2 test_compare_float ( res , expf_uv__uv_terms_expf_combine_io_table [ ind ] . expf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_expf_uv__uv_terms , & max_dif_above_expf_uv__uv_terms ) != 1
3 245 11 0 2
40 245 11 0 2
3 247 12 0 2
3 248 12 0 1
78 0 0 9 0 2
79 0 0 9 0 0,1
70 250 12 0 1 errors == 0 && passes == 50
75 250 12 11 1 T && T
76 250 12 10 1 T && F
76 250 12 9 1 F && _
80 0 0 9 0 1,2
81 0 0 9 0 0
77 250 12 0 1 errors == 0
80 0 0 9 0 2
81 0 0 9 0 1
77 250 12 0 1 passes == 50
3 252 13 0 1
40 252 13 0 1
3 254 14 0 1
13 256 15 1 1 errors
2 257 15 0 0 expf_uv__uv_terms_expf_combine
0 262 0 2 0 expf_uv__uv_terms_main_test
90 0 0 0 0 ( )
20 268 4 4 1 errors == 0
3 270 5 0 1
40 270 5 0 1
3 272 6 0 1
13 326 8 2 1 errors
2 327 8 0 0 expf_uv__uv_terms_main_test
%327,3,3,5,12,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\expf_uv__uv_trivial.c
7 1561811945 0 0
0 75 0 0 0 expf_uv__uv_trivial_zero_one
90 0 0 0 0 ( )
23 86 7 0 1 ind < 2
20 89 9 1 2 test_compare_float ( res , expf_uv__uv_trivial_zero_one_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_trivial , & max_dif_above_expf_uv__uv_trivial ) != 1
3 94 11 0 2
40 94 11 0 2
3 96 12 0 2
3 97 12 0 1
78 0 0 0 0 2
79 0 0 0 0 0,1
70 99 12 0 1 errors == 0 && passes == 2
75 99 12 2 1 T && T
76 99 12 1 1 T && F
76 99 12 0 1 F && _
80 0 0 0 0 1,2
81 0 0 0 0 0
77 99 12 0 1 errors == 0
80 0 0 0 0 2
81 0 0 0 0 1
77 99 12 0 1 passes == 2
3 101 13 0 1
40 101 13 0 1
3 103 14 0 1
13 105 15 0 1 errors
2 106 15 0 0 expf_uv__uv_trivial_zero_one
0 124 0 1 0 expf_uv__uv_trivial_simple_values
90 0 0 0 0 ( )
23 135 7 2 1 ind < 7
20 138 9 3 2 test_compare_float ( res , expf_uv__uv_trivial_simple_values_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_trivial , & max_dif_above_expf_uv__uv_trivial ) != 1
3 143 11 0 2
40 143 11 0 2
3 145 12 0 2
3 146 12 0 1
78 0 0 3 0 2
79 0 0 3 0 0,1
70 148 12 0 1 errors == 0 && passes == 7
75 148 12 5 1 T && T
76 148 12 4 1 T && F
76 148 12 3 1 F && _
80 0 0 3 0 1,2
81 0 0 3 0 0
77 148 12 0 1 errors == 0
80 0 0 3 0 2
81 0 0 3 0 1
77 148 12 0 1 passes == 7
3 150 13 0 1
40 150 13 0 1
3 152 14 0 1
13 154 15 1 1 errors
2 155 15 0 0 expf_uv__uv_trivial_simple_values
0 173 0 2 0 expf_uv__uv_trivial_seven
90 0 0 0 0 ( )
23 184 7 4 1 ind < 7
20 187 9 5 2 test_compare_float ( res , expf_uv__uv_trivial_seven_io_table [ ind ] . expf_out , 128 , 1.0E-6 , 1.0E-6 , 10.0 , & max_dif_below_expf_uv__uv_trivial , & max_dif_above_expf_uv__uv_trivial ) != 1
3 192 11 0 2
40 192 11 0 2
3 194 12 0 2
3 195 12 0 1
78 0 0 6 0 2
79 0 0 6 0 0,1
70 197 12 0 1 errors == 0 && passes == 7
75 197 12 8 1 T && T
76 197 12 7 1 T && F
76 197 12 6 1 F && _
80 0 0 6 0 1,2
81 0 0 6 0 0
77 197 12 0 1 errors == 0
80 0 0 6 0 2
81 0 0 6 0 1
77 197 12 0 1 passes == 7
3 199 13 0 1
40 199 13 0 1
3 201 14 0 1
13 203 15 2 1 errors
2 204 15 0 0 expf_uv__uv_trivial_seven
0 209 0 3 0 expf_uv__uv_trivial_main_test
90 0 0 0 0 ( )
20 216 5 6 1 errors == 0
3 218 6 0 1
40 218 6 0 1
3 220 7 0 1
13 274 9 3 1 errors
2 275 9 0 0 expf_uv__uv_trivial_main_test
%275,4,4,7,9,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\fegetenv.c
7 1561811945 0 0
0 2 0 0 0 fegetenv
90 0 0 0 0 ( fenv_t * penv )
13 7 2 0 1 ( 0 )
2 8 2 0 0 fegetenv
%8,1,1,0,0,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\feraiseexcept.c
7 1561811946 0 0
0 3 0 0 0 feraiseexcept
90 0 0 0 0 ( int except )
20 5 0 0 1 ( except &= ( 0x02 | 0x10 | 0x01 | 0x04 | 0x08 ) ) != 0
20 20 4 1 2 ( except &= ( env >> 8 ) ) != 0
3 21 5 0 2
3 22 5 0 1
13 23 6 0 1 ( 0 )
2 24 6 0 0 feraiseexcept
%24,1,1,2,0,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\fesetenv.c
7 1561811946 0 0
0 12 0 0 0 _Force_raise
90 0 0 0 0 ( int except )
23 21 4 0 1 i < sizeof ( table ) / sizeof ( table [ 0 ] )
20 22 4 1 2 ( except & table [ i ] . except ) != 0
3 23 5 0 2
3 23 5 0 1
13 24 6 0 1 ( ans )
2 25 6 0 0 _Force_raise
0 28 0 1 0 fesetenv
90 0 0 0 0 ( const fenv_t * penv )
13 32 1 1 1 ( 0 )
2 33 1 0 0 fesetenv
%33,2,2,2,0,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\float_analysis.c
7 1561811946 0 0
0 3 0 0 0 printfloat
90 0 0 0 0 ( float v )
1 9 5 0 0 printfloat
0 11 0 1 0 getDeltaULP
90 0 0 0 0 ( float x , float y )
78 0 0 0 0 1,2
79 0 0 0 0 0
70 14 2 0 1 x != x || y != y
75 14 2 2 1 T || _
75 14 2 1 1 F || T
76 14 2 0 1 F || F
80 0 0 0 0 2
81 0 0 0 0 0,1
77 14 2 0 1 x != x
80 0 0 0 0 1
81 0 0 0 0 0
77 14 2 0 1 y != y
3 16 3 0 1
78 0 0 3 0 1,2,3,4
79 0 0 3 0 0
71 16 3 0 1 x == __builtin_inff ( ) || y == __builtin_inff ( ) || x == - __builtin_inff ( ) || y == - __builtin_inff ( )
75 16 3 7 1 T || _ || _ || _
75 16 3 6 1 F || T || _ || _
75 16 3 5 1 F || F || T || _
75 16 3 4 1 F || F || F || T
76 16 3 3 1 F || F || F || F
80 0 0 3 0 4
81 0 0 3 0 0,1,2,3
77 16 3 0 1 x == __builtin_inff ( )
80 0 0 3 0 3
81 0 0 3 0 0,1,2
77 16 3 0 1 y == __builtin_inff ( )
80 0 0 3 0 2
81 0 0 3 0 0,1
77 16 3 0 1 x == - __builtin_inff ( )
80 0 0 3 0 1
81 0 0 3 0 0
77 16 3 0 1 y == - __builtin_inff ( )
3 18 4 0 1
40 18 4 0 1
25 19 5 0 2 ( y > x )
22 22 7 1 2 y != z
20 25 9 2 3 res_u32 >= ( 0x7fffffff * 2U + 1U )
12 27 10 1 4
3 28 10 0 3
3 29 10 0 2
3 30 10 0 1
13 31 11 2 1 res_u32
2 32 11 0 0 getDeltaULP
0 34 0 2 0 getDeltaULP_BIT
90 0 0 0 0 ( float x , float y )
78 0 0 8 0 1,2
79 0 0 8 0 0
70 39 4 0 1 x != x || y != y
75 39 4 10 1 T || _
75 39 4 9 1 F || T
76 39 4 8 1 F || F
80 0 0 8 0 2
81 0 0 8 0 0,1
77 39 4 0 1 x != x
80 0 0 8 0 1
81 0 0 8 0 0
77 39 4 0 1 y != y
3 41 5 0 1
78 0 0 11 0 1,2,3,4
79 0 0 11 0 0
71 41 5 0 1 x == __builtin_inff ( ) || y == __builtin_inff ( ) || x == - __builtin_inff ( ) || y == - __builtin_inff ( )
75 41 5 15 1 T || _ || _ || _
75 41 5 14 1 F || T || _ || _
75 41 5 13 1 F || F || T || _
75 41 5 12 1 F || F || F || T
76 41 5 11 1 F || F || F || F
80 0 0 11 0 4
81 0 0 11 0 0,1,2,3
77 41 5 0 1 x == __builtin_inff ( )
80 0 0 11 0 3
81 0 0 11 0 0,1,2
77 41 5 0 1 y == __builtin_inff ( )
80 0 0 11 0 2
81 0 0 11 0 0,1
77 41 5 0 1 x == - __builtin_inff ( )
80 0 0 11 0 1
81 0 0 11 0 0
77 41 5 0 1 y == - __builtin_inff ( )
3 43 6 0 1
40 43 6 0 1
20 47 9 3 2 x_bits . s == y_bits . s
20 48 9 4 3 x_bits . e > y_bits . e
20 50 10 5 4 x_bits . m >= y_bits . m
3 52 11 0 4
40 52 11 0 4
3 55 13 0 4
3 56 13 0 3
21 56 13 6 3 x_bits . e < y_bits . e
20 58 14 7 4 x_bits . m <= y_bits . m
3 60 15 0 4
40 60 15 0 4
3 63 17 0 4
3 64 17 0 3
40 64 17 0 3
20 66 18 8 4 x_bits . m <= y_bits . m
3 68 19 0 4
40 68 19 0 4
3 70 20 0 4
3 71 20 0 3
3 73 20 0 2
40 73 20 0 2
3 76 22 0 2
3 79 23 0 1
13 80 24 3 1 res_u32
2 81 24 0 0 getDeltaULP_BIT
0 83 0 3 0 computeAndPrint
90 0 0 0 0 ( float x , float y )
1 88 4 4 0 computeAndPrint
%88,4,5,9,16,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\float_cmp_ulp.c
7 1561811947 0 0
0 11 0 0 0 float_equal_ulp
90 0 0 0 0 ( float val , float ref , uint32 n_ulp )
20 18 6 0 1 n_ulp == 0U
3 21 7 0 1
40 21 7 0 1
42 23 8 0 2 fmc_ref
14 24 8 0 2 FMC_NAN_FLOAT
12 27 10 1 3
14 28 10 2 2 FMC_INF_FLOAT
12 30 12 3 3
15 31 12 4 2
12 35 16 5 3
3 36 16 0 2
3 37 16 0 1
13 38 17 6 1 res
2 39 17 0 0 float_equal_ulp
0 41 0 1 0 float_ulp
90 0 0 0 0 ( float ref )
20 44 2 1 1 fb . e == 0xFF
3 48 4 0 1
21 48 4 2 1 fb . e >= 24U
3 53 7 0 1
40 53 7 0 1
20 58 8 3 2 fb . e > 0U
3 64 9 0 2
40 64 9 0 2
3 67 10 0 2
3 69 11 0 1
13 70 12 7 1 fb2float ( fb )
2 71 12 0 0 float_ulp
%71,2,8,4,0,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\float_compares.c
7 1561811947 0 0
0 22 0 0 0 test_compare_float
90 0 0 0 0 ( float found , float expected , int comparetype , float maxtol_below , float maxtol_above , float limit , float * maxdeviation_below , float * maxdeviation_above )
20 26 1 0 1 __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , double ) , __isnan ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , float ) , __isnanf ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , long double ) , __isnanl ( found ) , ( __builtin_trap ( ) , found ) ) ) ) != __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , double ) , __isnan ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , float ) , __isnanf ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , long double ) , __isnanl ( expected ) , ( __builtin_trap ( ) , expected ) ) ) )
13 30 3 0 2 0
3 31 3 0 1
78 0 0 0 0 2
79 0 0 0 0 0,1
70 32 3 0 1 __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , double ) , __isnan ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , float ) , __isnanf ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , long double ) , __isnanl ( found ) , ( __builtin_trap ( ) , found ) ) ) ) && __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , double ) , __isnan ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , float ) , __isnanf ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , long double ) , __isnanl ( expected ) , ( __builtin_trap ( ) , expected ) ) ) )
75 32 3 2 1 T && T
76 32 3 1 1 T && F
76 32 3 0 1 F && _
80 0 0 0 0 1,2
81 0 0 0 0 0
77 32 3 0 1 __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , double ) , __isnan ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , float ) , __isnanf ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , long double ) , __isnanl ( found ) , ( __builtin_trap ( ) , found ) ) ) )
80 0 0 0 0 2
81 0 0 0 0 1
77 32 3 0 1 __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , double ) , __isnan ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , float ) , __isnanf ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , long double ) , __isnanl ( expected ) , ( __builtin_trap ( ) , expected ) ) ) )
13 33 4 1 2 1
3 34 4 0 1
20 35 4 1 1 ( __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , double ) , __fpclassify ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , float ) , __fpclassifyf ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , long double ) , __fpclassifyl ( found ) , ( __builtin_trap ( ) , 0 ) ) ) ) == ( 0x0100 | 0x0400 ) ) != ( __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , double ) , __fpclassify ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , float ) , __fpclassifyf ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , long double ) , __fpclassifyl ( expected ) , ( __builtin_trap ( ) , 0 ) ) ) ) == ( 0x0100 | 0x0400 ) )
13 39 6 2 2 0
3 40 6 0 1
78 0 0 3 0 3
79 0 0 3 0 0,1,2
70 41 6 0 1 ( __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , double ) , __fpclassify ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , float ) , __fpclassifyf ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , long double ) , __fpclassifyl ( found ) , ( __builtin_trap ( ) , 0 ) ) ) ) == ( 0x0100 | 0x0400 ) ) && ( __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , double ) , __fpclassify ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , float ) , __fpclassifyf ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , long double ) , __fpclassifyl ( expected ) , ( __builtin_trap ( ) , 0 ) ) ) ) == ( 0x0100 | 0x0400 ) ) && found != expected
75 41 6 6 1 (T) && (T) && T
76 41 6 5 1 (T) && (T) && F
76 41 6 4 1 (T) && (F) && _
76 41 6 3 1 (F) && (_) && _
80 0 0 3 0 1,2,3
81 0 0 3 0 0
77 41 6 0 1 __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , double ) , __fpclassify ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , float ) , __fpclassifyf ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , long double ) , __fpclassifyl ( found ) , ( __builtin_trap ( ) , 0 ) ) ) ) == ( 0x0100 | 0x0400 )
80 0 0 3 0 2,3
81 0 0 3 0 1
77 41 6 0 1 __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , double ) , __fpclassify ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , float ) , __fpclassifyf ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , long double ) , __fpclassifyl ( expected ) , ( __builtin_trap ( ) , 0 ) ) ) ) == ( 0x0100 | 0x0400 )
80 0 0 3 0 3
81 0 0 3 0 2
77 41 6 0 1 found != expected
13 45 8 3 2 0
3 46 8 0 1
78 0 0 7 0 3
79 0 0 7 0 0,1,2
70 47 8 0 1 ( __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , double ) , __fpclassify ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , float ) , __fpclassifyf ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , long double ) , __fpclassifyl ( found ) , ( __builtin_trap ( ) , 0 ) ) ) ) == ( 0x0100 | 0x0400 ) ) && ( __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , double ) , __fpclassify ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , float ) , __fpclassifyf ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , long double ) , __fpclassifyl ( expected ) , ( __builtin_trap ( ) , 0 ) ) ) ) == ( 0x0100 | 0x0400 ) ) && found == expected
75 47 8 10 1 (T) && (T) && T
76 47 8 9 1 (T) && (T) && F
76 47 8 8 1 (T) && (F) && _
76 47 8 7 1 (F) && (_) && _
80 0 0 7 0 1,2,3
81 0 0 7 0 0
77 47 8 0 1 __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , double ) , __fpclassify ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , float ) , __fpclassifyf ( found ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( found ) , long double ) , __fpclassifyl ( found ) , ( __builtin_trap ( ) , 0 ) ) ) ) == ( 0x0100 | 0x0400 )
80 0 0 7 0 2,3
81 0 0 7 0 1
77 47 8 0 1 __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , double ) , __fpclassify ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , float ) , __fpclassifyf ( expected ) , __builtin_choose_expr ( __builtin_types_compatible_p ( __typeof__ ( expected ) , long double ) , __fpclassifyl ( expected ) , ( __builtin_trap ( ) , 0 ) ) ) ) == ( 0x0100 | 0x0400 )
80 0 0 7 0 3
81 0 0 7 0 2
77 47 8 0 1 found == expected
13 48 9 4 2 1
3 49 9 0 1
20 50 9 2 1 comparetype & 1
20 52 9 3 2 fabs ( found - expected ) > maxtol_below
20 57 11 4 3 fabs ( found - expected ) > * maxdeviation_below
3 59 12 0 3
3 60 12 0 2
40 60 12 0 2
20 61 12 5 3 result == - 1
3 63 13 0 3
3 64 13 0 2
3 65 13 0 1
20 66 13 6 1 comparetype & 2
78 0 0 11 0 2
79 0 0 11 0 0,1
70 68 13 0 2 expected != 0.0 && fabs ( ( found - expected ) / expected ) > maxtol_below
75 68 13 13 2 T && T
76 68 13 12 2 T && F
76 68 13 11 2 F && _
80 0 0 11 0 1,2
81 0 0 11 0 0
77 68 13 0 2 expected != 0.0
80 0 0 11 0 2
81 0 0 11 0 1
77 68 13 0 2 fabs ( ( found - expected ) / expected ) > maxtol_below
20 73 15 7 3 fabs ( ( found - expected ) / expected ) > * maxdeviation_below
3 75 16 0 3
3 76 16 0 2
40 76 16 0 2
20 77 16 8 3 result == - 1
3 79 17 0 3
3 80 17 0 2
3 81 17 0 1
20 82 17 9 1 comparetype & 128
20 84 17 10 2 fabs ( expected ) <= limit
20 86 17 11 3 fabs ( found - expected ) > maxtol_below
20 91 19 12 4 fabs ( found - expected ) > * maxdeviation_below
3 93 20 0 4
3 94 20 0 3
40 94 20 0 3
20 95 20 13 4 result == - 1
3 97 21 0 4
3 98 21 0 3
3 99 21 0 2
40 99 21 0 2
20 101 21 14 3 fabs ( ( found - expected ) / expected ) > maxtol_above
20 106 23 15 4 fabs ( found - expected ) > * maxdeviation_above
3 108 24 0 4
3 109 24 0 3
40 109 24 0 3
20 110 24 16 4 result == - 1
3 112 25 0 4
3 113 25 0 3
3 114 25 0 2
3 115 25 0 1
20 116 25 17 1 comparetype & 4
20 118 25 18 2 ! float_equal_ulp ( found , expected , ( uint32 ) maxtol_below )
20 130 30 19 3 dif > * maxdeviation_below
3 132 31 0 3
3 133 31 0 2
40 133 31 0 2
20 134 31 20 3 result == - 1
3 136 32 0 3
3 137 32 0 2
3 138 32 0 1
20 139 32 21 1 comparetype & 8
20 141 32 22 2 fabs ( expected ) <= limit
20 142 32 23 3 fabs ( found - expected ) > maxtol_below
20 147 34 24 4 fabs ( found - expected ) > * maxdeviation_below
3 149 35 0 4
3 150 35 0 3
40 150 35 0 3
20 151 35 25 4 result == - 1
3 153 36 0 4
3 154 36 0 3
3 155 36 0 2
40 155 36 0 2
20 156 36 26 3 ! float_equal_ulp ( found , expected , ( uint32 ) maxtol_above )
20 168 41 27 4 dif > * maxdeviation_above
3 170 42 0 4
3 171 42 0 3
40 171 42 0 3
20 172 42 28 4 result == - 1
3 174 43 0 4
3 175 43 0 3
3 176 43 0 2
3 177 43 0 1
20 178 43 29 1 comparetype & 16
20 182 44 30 2 expected != 0.0
25 183 45 31 3 ( sqrt ( fabs ( found * expected ) ) ) > ( 1 )
3 184 45 0 2
20 185 45 32 2 exakt > maxtol_below
20 190 47 33 3 exakt > * maxdeviation_below
3 192 48 0 3
3 193 48 0 2
40 193 48 0 2
20 194 48 34 3 result == - 1
3 196 49 0 3
3 197 49 0 2
3 198 49 0 1
20 199 49 35 1 comparetype & 32
20 201 49 36 2 found != expected
20 206 51 37 3 fabs ( found - expected ) > * maxdeviation_below
3 208 52 0 3
3 209 52 0 2
40 209 52 0 2
20 210 52 38 3 result == - 1
3 212 53 0 3
3 213 53 0 2
3 214 53 0 1
20 215 53 39 1 comparetype & 64
20 221 57 40 2 hfFound . x_val != hfExpected . x_val
20 226 59 41 3 fabs ( found - expected ) > * maxdeviation_below
3 228 60 0 3
3 229 60 0 2
40 229 60 0 2
20 230 60 42 3 result == - 1
3 232 61 0 3
3 233 61 0 2
3 234 61 0 1
13 236 62 5 1 result
2 237 62 0 0 test_compare_float
%237,1,6,43,14,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\float_data.c
7 1561811948 0 0
0 7 0 0 0 fb_int2float
90 0 0 0 0 ( uint32 val )
13 10 3 0 1 tmp . fval
2 11 3 0 0 fb_int2float
0 13 0 1 0 fb_float2int
90 0 0 0 0 ( float val )
13 16 3 1 1 tmp . ival
2 17 3 0 0 fb_float2int
0 21 0 2 0 float2fb
90 0 0 0 0 ( float v )
13 28 7 2 1 res
2 29 7 0 0 float2fb
0 31 0 3 0 fb2float
90 0 0 0 0 ( float_bits fb )
13 34 3 3 1 res . fval
2 35 3 0 0 fb2float
0 37 0 4 0 sem2float
90 0 0 0 0 ( uint32 s , uint32 e , uint32 m )
13 40 3 4 1 res . fval
2 41 3 0 0 sem2float
0 43 0 5 0 sem2fb
90 0 0 0 0 ( uint32 s , uint32 e , uint32 m )
13 44 1 5 1 float2fb ( sem2float ( s , e , m ) )
2 45 1 0 0 sem2fb
0 47 0 6 0 float_NaN_or_Inf
90 0 0 0 0 ( float val )
13 51 3 6 1 ( ( tmp . ival & 0x7F800000 ) == 0x7F800000 )
2 52 3 0 0 float_NaN_or_Inf
0 54 0 7 0 classify_float_mag
90 0 0 0 0 ( float val )
20 58 3 0 1 tmp . e == 255U
20 59 3 1 2 tmp . m == 0U
3 59 4 0 2
40 60 4 0 2
3 60 5 0 2
3 61 5 0 1
21 62 5 2 1 tmp . e == 0U
20 63 5 3 2 tmp . m == 0U
3 63 6 0 2
40 64 6 0 2
3 64 7 0 2
3 65 7 0 1
40 66 7 0 1
3 68 8 0 1
13 69 9 7 1 res
2 70 9 0 0 classify_float_mag
%70,8,8,4,0,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\fma.c
7 1561811948 0 0
0 3 0 0 0 fma
90 0 0 0 0 ( double x , double y , double z )
20 9 4 0 1 ( errx = _Dunscale ( & expx , & xp ) ) == 2
3 10 5 0 1
21 11 5 1 1 ( erry = _Dunscale ( & expy , & yp ) ) == 2
3 12 6 0 1
21 13 6 2 1 ( errz = _Dunscale ( & expz , & zp ) ) == 2
3 14 7 0 1
78 0 0 0 0 1,2
79 0 0 0 0 0
71 15 7 0 1 errx == 1 || erry == 1
75 15 7 2 1 T || _
75 15 7 1 1 F || T
76 15 7 0 1 F || F
80 0 0 0 0 2
81 0 0 0 0 0,1
77 15 7 0 1 errx == 1
80 0 0 0 0 1
81 0 0 0 0 0
77 15 7 0 1 erry == 1
78 0 0 3 0 2,3,4
79 0 0 3 0 0,1
70 17 7 0 2 errx == 0 || erry == 0 || ( errz == 1 && ( ( ( * _Pmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) ) ^ ( ( * _Pmsw ( & ( y ) ) ) & ( ( unsigned short ) 0x8000 ) ) ) != ( ( * _Pmsw ( & ( z ) ) ) & ( ( unsigned short ) 0x8000 ) ) )
75 17 7 7 2 T || _ || (_ && _)
75 17 7 6 2 F || T || (_ && _)
75 17 7 5 2 F || F || (T && T)
76 17 7 4 2 F || F || (T && F)
76 17 7 3 2 F || F || (F && _)
80 0 0 3 0 4
81 0 0 3 0 0,1,2,3
77 17 7 0 2 errx == 0
80 0 0 3 0 3
81 0 0 3 0 0,1,2
77 17 7 0 2 erry == 0
80 0 0 3 0 1,2
81 0 0 3 0 0
77 17 7 0 2 errz == 1
80 0 0 3 0 2
81 0 0 3 0 1
77 17 7 0 2 ( ( ( * _Pmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) ) ^ ( ( * _Pmsw ( & ( y ) ) ) & ( ( unsigned short ) 0x8000 ) ) ) != ( ( * _Pmsw ( & ( z ) ) ) & ( ( unsigned short ) 0x8000 ) )
3 21 9 0 2
21 22 9 3 2 errz == 1
3 23 10 0 2
21 24 10 4 2 ( ( ( * _Pmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) ) ^ ( ( * _Pmsw ( & ( y ) ) ) & ( ( unsigned short ) 0x8000 ) ) ) == 0
3 25 11 0 2
40 26 11 0 2
3 27 12 0 2
3 27 12 0 1
78 0 0 8 0 1,2,3
79 0 0 8 0 0
71 28 12 0 1 errz == 1 || errx == 0 || erry == 0
75 28 12 11 1 T || _ || _
75 28 12 10 1 F || T || _
75 28 12 9 1 F || F || T
76 28 12 8 1 F || F || F
80 0 0 8 0 3
81 0 0 8 0 0,1,2
77 28 12 0 1 errz == 1
80 0 0 8 0 2
81 0 0 8 0 0,1
77 28 12 0 1 errx == 0
80 0 0 8 0 1
81 0 0 8 0 0
77 28 12 0 1 erry == 0
3 29 13 0 1
21 30 13 5 1 errz == 0
3 31 14 0 1
40 32 14 0 1
20 38 17 6 2 2 * 53 < exp_diff
25 44 20 7 3 ( xp < 0.0 ) ^ ( yp < 0.0 )
3 46 21 0 2
40 47 21 0 2
20 49 21 8 3 exp_diff < - 2 * 53
25 51 22 9 4 zp < 0.0
3 51 22 0 3
40 52 22 0 3
3 53 23 0 3
20 59 27 10 3 xpy [ 1 ] != 0.0
3 66 31 0 3
3 67 31 0 2
20 70 33 11 2 exp_prod != 0
3 71 34 0 2
20 73 34 12 2 _Dtest ( & ans ) != 1
3 74 35 0 2
21 75 35 13 2 0.0 < ans
3 76 36 0 2
40 77 36 0 2
3 78 37 0 2
3 79 37 0 1
13 80 38 0 1 ( ans )
2 81 38 0 0 fma
%81,1,1,14,12,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\fmod.c
7 1561811948 0 0
0 2 0 0 0 fmod
90 0 0 0 0 ( double x , double y )
78 0 0 0 0 1,2
79 0 0 0 0 0
70 6 2 0 1 0 <= errx || 0 <= erry
75 6 2 2 1 T || _
75 6 2 1 1 F || T
76 6 2 0 1 F || F
80 0 0 0 0 2
81 0 0 0 0 0,1
77 6 2 0 1 0 <= errx
80 0 0 0 0 1
81 0 0 0 0 0
77 6 2 0 1 0 <= erry
20 8 2 0 2 errx == 2
13 9 3 0 3 ( x )
3 9 3 0 2
21 10 3 1 2 erry == 2
13 11 4 1 3 ( y )
3 11 4 0 2
78 0 0 3 0 1,2
79 0 0 3 0 0
71 12 4 0 2 errx == 1 || erry == 0
75 12 4 5 2 T || _
75 12 4 4 2 F || T
76 12 4 3 2 F || F
80 0 0 3 0 2
81 0 0 3 0 0,1
77 12 4 0 2 errx == 1
80 0 0 3 0 1
81 0 0 3 0 0
77 12 4 0 2 erry == 0
13 15 6 2 3 ( _Nan . _Double )
3 16 6 0 2
40 17 6 0 2
13 18 7 3 3 ( x )
3 18 7 0 2
3 19 7 0 1
40 20 7 0 1
20 26 11 2 2 x < 0.0
3 30 13 0 2
40 31 13 0 2
3 32 14 0 2
33 33 16 3 2
78 0 0 6 0 1,2,3
79 0 0 6 0 0
70 38 18 0 3 n < 0 || _Dunscale ( & xchar , & t ) == 0 || ( n = ( long ) xchar - ychar ) < 0
75 38 18 9 3 T || _ || _
75 38 18 8 3 F || T || _
75 38 18 7 3 F || F || T
76 38 18 6 3 F || F || F
80 0 0 6 0 3
81 0 0 6 0 0,1,2
77 38 18 0 3 n < 0
80 0 0 6 0 2
81 0 0 6 0 0,1
77 38 18 0 3 _Dunscale ( & xchar , & t ) == 0
80 0 0 6 0 1
81 0 0 6 0 0
77 38 18 0 3 ( n = ( long ) xchar - ychar ) < 0
20 40 18 4 4 neg
3 41 19 0 4
13 42 20 4 4 ( x )
3 43 20 0 3
23 44 22 5 3 0 <= n
20 47 23 6 4 x < t
3 48 24 0 4
21 49 24 7 4 x == t
13 50 25 5 5 ( 0.0 )
3 50 25 0 4
40 51 25 0 4
3 57 29 0 4
3 58 29 0 3
3 59 29 0 2
3 60 29 0 1
2 61 29 0 0 fmod
%61,1,6,8,10,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\ldexp.c
7 1561811949 0 0
0 2 0 0 0 ldexp
90 0 0 0 0 ( double x , int xexp )
78 0 0 0 0 2
79 0 0 0 0 0,1
70 4 0 0 1 xexp != 0 && _Dtest ( & x ) < 0
75 4 0 2 1 T && T
76 4 0 1 1 T && F
76 4 0 0 1 F && _
80 0 0 0 0 1,2
81 0 0 0 0 0
77 4 0 0 1 xexp != 0
80 0 0 0 0 2
81 0 0 0 0 1
77 4 0 0 1 _Dtest ( & x ) < 0
42 5 0 0 2 _Dscalex ( & x , xexp , 1 )
14 7 0 0 2 0
12 9 2 1 3
14 10 2 2 2 1
3 12 3 0 2
3 12 3 0 1
13 13 4 3 1 ( x )
2 14 4 0 0 ldexp
%14,1,4,0,3,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\log.c
7 1561811949 0 0
0 3 0 0 0 log
90 0 0 0 0 ( double x )
13 5 1 0 1 ( _Log ( x , 0 ) )
2 6 1 0 0 log
%6,1,1,0,0,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\log1p.c
7 1561811949 0 0
0 4 0 0 0 log1p
90 0 0 0 0 ( double x )
42 6 0 0 1 _Dtest ( & x )
14 8 0 0 1 2
14 9 0 1 1 0
13 10 1 2 2 ( x )
14 12 1 3 1 1
20 13 1 0 2 ! ( ( * _Pmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) )
13 14 2 4 3 ( x )
3 14 2 0 2
15 16 2 5 1
20 17 2 1 2 x < - 1.0
13 20 4 6 3 ( _Nan . _Double )
3 21 4 0 2
21 22 4 2 2 x == - 1.0
13 25 6 7 3 ( - _Inf . _Double )
3 26 6 0 2
78 0 0 0 0 2
79 0 0 0 0 0,1
71 27 6 0 2 - _Eps . _Double <= x && x < _Eps . _Double
75 27 6 2 2 T && T
76 27 6 1 2 T && F
76 27 6 0 2 F && _
80 0 0 0 0 1,2
81 0 0 0 0 0
77 27 6 0 2 - _Eps . _Double <= x
80 0 0 0 0 2
81 0 0 0 0 1
77 27 6 0 2 x < _Eps . _Double
13 28 7 8 3 ( x )
3 28 7 0 2
40 29 7 0 2
13 33 9 9 3 ( log ( y ) - ( ( ( y - 1.0 ) - x ) * ( 1.0 / ( y ) ) ) )
3 34 9 0 2
3 35 9 0 1
2 36 9 0 0 log1p
%36,1,10,3,3,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\main.c
7 1561811950 0 0
0 15 0 0 0 my_atof
90 0 0 0 0 ( char * s )
20 16 0 0 1 strcmp ( s , "NAN" ) == 0
13 17 1 0 2 __builtin_nanf ( "" )
3 18 1 0 1
78 0 0 0 0 1,2
79 0 0 0 0 0
70 19 1 0 1 strcmp ( s , "DENORM" ) == 0 || strcmp ( s , "DEN" ) == 0
75 19 1 2 1 T || _
75 19 1 1 1 F || T
76 19 1 0 1 F || F
80 0 0 0 0 2
81 0 0 0 0 0,1
77 19 1 0 1 strcmp ( s , "DENORM" ) == 0
80 0 0 0 0 1
81 0 0 0 0 0
77 19 1 0 1 strcmp ( s , "DEN" ) == 0
22 21 2 1 2 d / 2 > 0
3 23 3 0 2
13 24 4 1 2 d
3 25 4 0 1
78 0 0 3 0 1,2
79 0 0 3 0 0
70 26 4 0 1 strcmp ( s , "-DENORM" ) == 0 || strcmp ( s , "-DEN" ) == 0
75 26 4 5 1 T || _
75 26 4 4 1 F || T
76 26 4 3 1 F || F
80 0 0 3 0 2
81 0 0 3 0 0,1
77 26 4 0 1 strcmp ( s , "-DENORM" ) == 0
80 0 0 3 0 1
81 0 0 3 0 0
77 26 4 0 1 strcmp ( s , "-DEN" ) == 0
22 28 5 2 2 d / 2 < 0
3 30 6 0 2
13 31 7 2 2 d
3 32 7 0 1
78 0 0 6 0 1,2
79 0 0 6 0 0
70 33 7 0 1 strcmp ( s , "INF" ) == 0 || strcmp ( s , "INFINITY" ) == 0
75 33 7 8 1 T || _
75 33 7 7 1 F || T
76 33 7 6 1 F || F
80 0 0 6 0 2
81 0 0 6 0 0,1
77 33 7 0 1 strcmp ( s , "INF" ) == 0
80 0 0 6 0 1
81 0 0 6 0 0
77 33 7 0 1 strcmp ( s , "INFINITY" ) == 0
13 34 8 3 2 ( ( double ) __builtin_inff ( ) )
3 35 8 0 1
78 0 0 9 0 1,2
79 0 0 9 0 0
70 36 8 0 1 strcmp ( s , "-INF" ) == 0 || strcmp ( s , "-INFINITY" ) == 0
75 36 8 11 1 T || _
75 36 8 10 1 F || T
76 36 8 9 1 F || F
80 0 0 9 0 2
81 0 0 9 0 0,1
77 36 8 0 1 strcmp ( s , "-INF" ) == 0
80 0 0 9 0 1
81 0 0 9 0 0
77 36 8 0 1 strcmp ( s , "-INFINITY" ) == 0
13 37 9 4 2 - ( ( double ) __builtin_inff ( ) )
3 38 9 0 1
20 39 9 3 1 strncmp ( s , "0x" , 2 ) == 0
13 43 12 5 2 hv . val
3 44 12 0 1
13 45 13 6 1 atof ( s )
2 46 13 0 0 my_atof
0 64 0 1 0 toRep
90 0 0 0 0 ( float x )
13 66 4 7 1 rep . i
2 67 4 0 0 toRep
0 72 0 2 0 main
90 0 0 0 0 ( )
13 114 11 8 1 errors
2 116 11 0 0 main
%116,3,9,4,12,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\memcpy.c
7 1561811950 0 0
0 3 0 0 0 memcpy_HighTecARMImpl
90 0 0 0 0 ( void * , const void * , size_t )
23 7 4 0 1 0 < n
3 8 5 0 1
13 9 6 0 1 ( s1 )
2 10 6 0 0 memcpy_HighTecARMImpl
%10,1,1,1,0,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\pow.c
7 1561811951 0 0
0 183 0 0 0 _Pow
90 0 0 0 0 ( double x , double y , short * pex )
20 193 6 0 1 y == 1.0
13 194 7 0 2 ( x )
3 194 7 0 1
20 210 14 1 1 pex != 0
3 211 15 0 1
78 0 0 0 0 4,5,10,11,12
79 0 0 0 0 0,1,2,3,6,7,8,9
70 214 15 0 1 ( erry == 0 && y == 0.0 ) || ( errx < 0 && xexp == 1 && ( x == 0.5 || ( erry == 1 && x == - 0.5 ) ) )
75 214 15 12 1 (T && T) || (_ && _ && (_ || (_ && _)))
75 214 15 11 1 (T && F) || (T && T && (T || (_ && _)))
75 214 15 10 1 (T && F) || (T && T && (F || (T && T)))
75 214 15 5 1 (F && _) || (T && T && (T || (_ && _)))
75 214 15 4 1 (F && _) || (T && T && (F || (T && T)))
76 214 15 9 1 (T && F) || (T && T && (F || (T && F)))
76 214 15 8 1 (T && F) || (T && T && (F || (F && _)))
76 214 15 7 1 (T && F) || (T && F && (_ || (_ && _)))
76 214 15 6 1 (T && F) || (F && _ && (_ || (_ && _)))
76 214 15 3 1 (F && _) || (T && T && (F || (T && F)))
76 214 15 2 1 (F && _) || (T && T && (F || (F && _)))
76 214 15 1 1 (F && _) || (T && F && (_ || (_ && _)))
76 214 15 0 1 (F && _) || (F && _ && (_ || (_ && _)))
80 0 0 0 0 6,7,8,9,10,11,12
81 0 0 0 0 0,1,2,3,4,5
77 214 15 0 1 erry == 0
80 0 0 0 0 12
81 0 0 0 0 6,7,8,9,10,11
77 214 15 0 1 y == 0.0
80 0 0 0 0 1,2,3,7,8,9,4,5,10,11
81 0 0 0 0 0,6
77 214 15 0 1 errx < 0
80 0 0 0 0 2,3,8,9,4,5,10,11
81 0 0 0 0 1,7
77 214 15 0 1 xexp == 1
80 0 0 0 0 5,11
81 0 0 0 0 2,3,8,9,4,10
77 214 15 0 1 x == 0.5
80 0 0 0 0 3,9,4,10
81 0 0 0 0 2,8
77 214 15 0 1 erry == 1
80 0 0 0 0 4,10
81 0 0 0 0 3,9
77 214 15 0 1 x == - 0.5
13 215 16 1 2 ( 1.0 )
3 215 16 0 1
78 0 0 13 0 1,2
79 0 0 13 0 0
71 216 16 0 1 0 <= errx || 0 < erry
75 216 16 15 1 T || _
75 216 16 14 1 F || T
76 216 16 13 1 F || F
80 0 0 13 0 2
81 0 0 13 0 0,1
77 216 16 0 1 0 <= errx
80 0 0 13 0 1
81 0 0 13 0 0
77 216 16 0 1 0 < erry
20 218 16 2 2 errx == 2
13 219 17 2 3 ( x )
3 219 17 0 2
21 220 17 3 2 erry == 2
13 221 18 3 3 ( y )
3 221 18 0 2
21 222 18 4 2 errx == 1
20 223 18 5 3 ! ( ( * _Pmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) )
25 224 18 6 4 ( ( * _Pmsw ( & ( y ) ) ) & ( ( unsigned short ) 0x8000 ) )
13 224 19 4 4 ( ( ( * _Pmsw ( & ( y ) ) ) & ( ( unsigned short ) 0x8000 ) ) ? 0.0 : _Inf . _Double )
3 224 19 0 3
21 225 19 7 3 ! ( ( * _Pmsw ( & ( y ) ) ) & ( ( unsigned short ) 0x8000 ) )
25 227 19 8 4 erry == 0 && _Dint ( & yi , - 1 ) < 0
13 228 20 5 4 ( erry == 0 && _Dint ( & yi , - 1 ) < 0 ? - _Inf . _Double : _Inf . _Double )
3 228 20 0 3
40 229 20 0 3
25 231 20 9 4 erry == 0 && _Dint ( & yi , - 1 ) < 0
13 231 21 6 4 ( erry == 0 && _Dint ( & yi , - 1 ) < 0 ? - _Zero : 0.0 )
3 231 21 0 3
3 231 21 0 2
21 232 21 10 2 erry == 1
20 233 21 11 3 ! ( ( * _Pmsw ( & ( y ) ) ) & ( ( unsigned short ) 0x8000 ) )
25 234 21 12 4 xexp <= 0
13 234 22 7 4 ( xexp <= 0 ? 0.0 : _Inf . _Double )
3 234 22 0 3
40 235 22 0 3
25 236 22 13 4 xexp <= 0
13 236 23 8 4 ( xexp <= 0 ? _Inf . _Double : 0.0 )
3 236 23 0 3
3 236 23 0 2
21 238 23 14 2 ! ( ( * _Pmsw ( & ( y ) ) ) & ( ( unsigned short ) 0x8000 ) )
25 240 23 15 3 erry == 0 && _Dint ( & yi , - 1 ) < 0 && ( ( * _Pmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) )
13 240 24 9 3 ( erry == 0 && _Dint ( & yi , - 1 ) < 0 && ( ( * _Pmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) ) ? - _Zero : 0.0 )
3 240 24 0 2
40 241 24 0 2
25 245 25 16 3 erry == 0 && _Dint ( & yi , - 1 ) < 0 && ( ( * _Pmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) )
13 245 26 10 3 ( erry == 0 && _Dint ( & yi , - 1 ) < 0 && ( ( * _Pmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) ) ? - _Inf . _Double : _Inf . _Double )
3 246 26 0 2
3 247 26 0 1
78 0 0 16 0 2
79 0 0 16 0 0,1
71 248 26 0 1 ( ( * _Pmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) ) && erry < 0
75 248 26 18 1 (T) && T
76 248 26 17 1 (T) && F
76 248 26 16 1 (F) && _
80 0 0 16 0 1,2
81 0 0 16 0 0
77 248 26 0 1 ( * _Pmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 )
80 0 0 16 0 2
81 0 0 16 0 1
77 248 26 0 1 erry < 0
13 251 28 11 2 ( _Nan . _Double )
3 252 28 0 1
20 254 28 17 1 0.0 < x
3 255 29 0 1
40 256 29 0 1
3 260 31 0 1
20 266 32 18 1 x < rthalf
3 270 34 0 1
20 284 42 19 1 z < - maxexp
3 285 43 0 1
78 0 0 19 0 4
79 0 0 19 0 0,1,2,3
71 287 43 0 1 - 15.0 <= z && z <= 15.0 && - 40.0 < y && y < 40.0
75 287 43 23 1 T && T && T && T
76 287 43 22 1 T && T && T && F
76 287 43 21 1 T && T && F && _
76 287 43 20 1 T && F && _ && _
76 287 43 19 1 F && _ && _ && _
80 0 0 19 0 1,2,3,4
81 0 0 19 0 0
77 287 43 0 1 - 15.0 <= z
80 0 0 19 0 2,3,4
81 0 0 19 0 1
77 287 43 0 1 z <= 15.0
80 0 0 19 0 3,4
81 0 0 19 0 2
77 287 43 0 1 - 40.0 < y
80 0 0 19 0 4
81 0 0 19 0 3
77 287 43 0 1 y < 40.0
25 289 44 20 2 z < 0.0
3 301 47 0 1
21 302 47 21 1 maxexp < z
3 303 48 0 1
40 304 48 0 1
20 313 53 22 2 xpx [ 0 ] == 0.0
3 314 54 0 2
40 315 54 0 2
78 0 0 24 0 2
79 0 0 24 0 0,1
73 319 58 0 3 i < 4 && xpx [ i ] != 0.0
75 319 58 26 3 T && T
76 319 58 25 3 T && F
76 319 58 24 3 F && _
80 0 0 24 0 1,2
81 0 0 24 0 0
77 319 58 0 3 i < 4
80 0 0 24 0 2
81 0 0 24 0 1
77 319 58 0 3 xpx [ i ] != 0.0
3 327 63 0 3
3 328 63 0 2
20 335 67 23 2 xpx [ 1 ] != 0.0
3 342 71 0 2
78 0 0 27 0 2
79 0 0 27 0 0,1
70 346 73 0 2 xpz [ 0 ] != 0.0 && xpz [ 1 ] != 0.0
75 346 73 29 2 T && T
76 346 73 28 2 T && F
76 346 73 27 2 F && _
80 0 0 27 0 1,2
81 0 0 27 0 0
77 346 73 0 2 xpz [ 0 ] != 0.0
80 0 0 27 0 2
81 0 0 27 0 1
77 346 73 0 2 xpz [ 1 ] != 0.0
3 347 74 0 2
3 354 80 0 1
20 356 80 24 1 errx < 0
20 358 80 25 2 pex != 0
3 362 82 0 2
3 366 85 0 1
42 367 85 0 1 errx
14 369 85 12 1 0
12 372 88 13 2
14 374 88 14 1 1
20 376 89 26 2 z < 0.0
3 380 91 0 2
40 381 91 0 2
3 385 93 0 2
3 386 93 0 1
20 388 93 27 1 neg
3 389 94 0 1
13 390 95 15 1 ( z )
2 391 95 0 0 _Pow
0 393 0 1 0 pow
90 0 0 0 0 ( double x , double y )
13 396 2 16 1 ( _Pow ( x , y , 0 ) )
2 397 2 0 0 pow
%397,2,17,28,30,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\pow_uv__uv_extreme.c
7 1561811951 0 0
0 280 0 0 0 pow_uv__uv_extreme_nan
90 0 0 0 0 ( )
23 292 8 0 1 ind < 5
20 296 11 1 2 test_compare_double ( res , pow_uv__uv_extreme_nan_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1
3 301 13 0 2
40 301 13 0 2
3 303 14 0 2
3 304 14 0 1
78 0 0 0 0 2
79 0 0 0 0 0,1
70 306 14 0 1 errors == 0 && passes == 5
75 306 14 2 1 T && T
76 306 14 1 1 T && F
76 306 14 0 1 F && _
80 0 0 0 0 1,2
81 0 0 0 0 0
77 306 14 0 1 errors == 0
80 0 0 0 0 2
81 0 0 0 0 1
77 306 14 0 1 passes == 5
3 308 15 0 1
40 308 15 0 1
3 310 16 0 1
13 312 17 0 1 errors
2 313 17 0 0 pow_uv__uv_extreme_nan
0 329 0 1 0 pow_uv__uv_extreme_pos_infinity
90 0 0 0 0 ( )
23 341 8 2 1 ind < 5
20 345 11 3 2 test_compare_double ( res , pow_uv__uv_extreme_pos_infinity_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1
3 350 13 0 2
40 350 13 0 2
3 352 14 0 2
3 353 14 0 1
78 0 0 3 0 2
79 0 0 3 0 0,1
70 355 14 0 1 errors == 0 && passes == 5
75 355 14 5 1 T && T
76 355 14 4 1 T && F
76 355 14 3 1 F && _
80 0 0 3 0 1,2
81 0 0 3 0 0
77 355 14 0 1 errors == 0
80 0 0 3 0 2
81 0 0 3 0 1
77 355 14 0 1 passes == 5
3 357 15 0 1
40 357 15 0 1
3 359 16 0 1
13 361 17 1 1 errors
2 362 17 0 0 pow_uv__uv_extreme_pos_infinity
0 378 0 2 0 pow_uv__uv_extreme_neg_infinity
90 0 0 0 0 ( )
23 390 8 4 1 ind < 5
20 394 11 5 2 test_compare_double ( res , pow_uv__uv_extreme_neg_infinity_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1
3 399 13 0 2
40 399 13 0 2
3 401 14 0 2
3 402 14 0 1
78 0 0 6 0 2
79 0 0 6 0 0,1
70 404 14 0 1 errors == 0 && passes == 5
75 404 14 8 1 T && T
76 404 14 7 1 T && F
76 404 14 6 1 F && _
80 0 0 6 0 1,2
81 0 0 6 0 0
77 404 14 0 1 errors == 0
80 0 0 6 0 2
81 0 0 6 0 1
77 404 14 0 1 passes == 5
3 406 15 0 1
40 406 15 0 1
3 408 16 0 1
13 410 17 2 1 errors
2 411 17 0 0 pow_uv__uv_extreme_neg_infinity
0 428 0 3 0 pow_uv__uv_extreme_infinity
90 0 0 0 0 ( )
23 440 8 6 1 ind < 6
20 444 11 7 2 test_compare_double ( res , pow_uv__uv_extreme_infinity_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1
3 449 13 0 2
40 449 13 0 2
3 451 14 0 2
3 452 14 0 1
78 0 0 9 0 2
79 0 0 9 0 0,1
70 454 14 0 1 errors == 0 && passes == 6
75 454 14 11 1 T && T
76 454 14 10 1 T && F
76 454 14 9 1 F && _
80 0 0 9 0 1,2
81 0 0 9 0 0
77 454 14 0 1 errors == 0
80 0 0 9 0 2
81 0 0 9 0 1
77 454 14 0 1 passes == 6
3 456 15 0 1
40 456 15 0 1
3 458 16 0 1
13 460 17 3 1 errors
2 461 17 0 0 pow_uv__uv_extreme_infinity
0 481 0 4 0 pow_uv__uv_extreme_extreme_values
90 0 0 0 0 ( )
23 493 8 8 1 ind < 9
20 497 11 9 2 test_compare_double ( res , pow_uv__uv_extreme_extreme_values_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1
3 502 13 0 2
40 502 13 0 2
3 504 14 0 2
3 505 14 0 1
78 0 0 12 0 2
79 0 0 12 0 0,1
70 507 14 0 1 errors == 0 && passes == 9
75 507 14 14 1 T && T
76 507 14 13 1 T && F
76 507 14 12 1 F && _
80 0 0 12 0 1,2
81 0 0 12 0 0
77 507 14 0 1 errors == 0
80 0 0 12 0 2
81 0 0 12 0 1
77 507 14 0 1 passes == 9
3 509 15 0 1
40 509 15 0 1
3 511 16 0 1
13 513 17 4 1 errors
2 514 17 0 0 pow_uv__uv_extreme_extreme_values
0 781 0 5 0 pow_uv__uv_extreme_pow_denom_pos_pos
90 0 0 0 0 ( )
23 793 8 10 1 ind < 256
20 797 11 11 2 test_compare_double ( res , pow_uv__uv_extreme_pow_denom_pos_pos_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1
3 802 13 0 2
40 802 13 0 2
3 804 14 0 2
3 805 14 0 1
78 0 0 15 0 2
79 0 0 15 0 0,1
70 807 14 0 1 errors == 0 && passes == 256
75 807 14 17 1 T && T
76 807 14 16 1 T && F
76 807 14 15 1 F && _
80 0 0 15 0 1,2
81 0 0 15 0 0
77 807 14 0 1 errors == 0
80 0 0 15 0 2
81 0 0 15 0 1
77 807 14 0 1 passes == 256
3 809 15 0 1
40 809 15 0 1
3 811 16 0 1
13 813 17 5 1 errors
2 814 17 0 0 pow_uv__uv_extreme_pow_denom_pos_pos
0 1097 0 6 0 pow_uv__uv_extreme_pow_denom_pos_neg
90 0 0 0 0 ( )
23 1109 8 12 1 ind < 272
20 1113 11 13 2 test_compare_double ( res , pow_uv__uv_extreme_pow_denom_pos_neg_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1
3 1118 13 0 2
40 1118 13 0 2
3 1120 14 0 2
3 1121 14 0 1
78 0 0 18 0 2
79 0 0 18 0 0,1
70 1123 14 0 1 errors == 0 && passes == 272
75 1123 14 20 1 T && T
76 1123 14 19 1 T && F
76 1123 14 18 1 F && _
80 0 0 18 0 1,2
81 0 0 18 0 0
77 1123 14 0 1 errors == 0
80 0 0 18 0 2
81 0 0 18 0 1
77 1123 14 0 1 passes == 272
3 1125 15 0 1
40 1125 15 0 1
3 1127 16 0 1
13 1129 17 6 1 errors
2 1130 17 0 0 pow_uv__uv_extreme_pow_denom_pos_neg
0 1413 0 7 0 pow_uv__uv_extreme_pow_denom_neg_pos
90 0 0 0 0 ( )
23 1425 8 14 1 ind < 272
20 1429 11 15 2 test_compare_double ( res , pow_uv__uv_extreme_pow_denom_neg_pos_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1
3 1434 13 0 2
40 1434 13 0 2
3 1436 14 0 2
3 1437 14 0 1
78 0 0 21 0 2
79 0 0 21 0 0,1
70 1439 14 0 1 errors == 0 && passes == 272
75 1439 14 23 1 T && T
76 1439 14 22 1 T && F
76 1439 14 21 1 F && _
80 0 0 21 0 1,2
81 0 0 21 0 0
77 1439 14 0 1 errors == 0
80 0 0 21 0 2
81 0 0 21 0 1
77 1439 14 0 1 passes == 272
3 1441 15 0 1
40 1441 15 0 1
3 1443 16 0 1
13 1445 17 7 1 errors
2 1446 17 0 0 pow_uv__uv_extreme_pow_denom_neg_pos
0 1746 0 8 0 pow_uv__uv_extreme_pow_denom_neg_neg
90 0 0 0 0 ( )
23 1758 8 16 1 ind < 289
20 1762 11 17 2 test_compare_double ( res , pow_uv__uv_extreme_pow_denom_neg_neg_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1
3 1767 13 0 2
40 1767 13 0 2
3 1769 14 0 2
3 1770 14 0 1
78 0 0 24 0 2
79 0 0 24 0 0,1
70 1772 14 0 1 errors == 0 && passes == 289
75 1772 14 26 1 T && T
76 1772 14 25 1 T && F
76 1772 14 24 1 F && _
80 0 0 24 0 1,2
81 0 0 24 0 0
77 1772 14 0 1 errors == 0
80 0 0 24 0 2
81 0 0 24 0 1
77 1772 14 0 1 passes == 289
3 1774 15 0 1
40 1774 15 0 1
3 1776 16 0 1
13 1778 17 8 1 errors
2 1779 17 0 0 pow_uv__uv_extreme_pow_denom_neg_neg
0 1791 0 9 0 pow_uv__uv_extreme_zero
90 0 0 0 0 ( )
23 1803 8 18 1 ind < 1
20 1807 11 19 2 test_compare_double ( res , pow_uv__uv_extreme_zero_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1
3 1812 13 0 2
40 1812 13 0 2
3 1814 14 0 2
3 1815 14 0 1
78 0 0 27 0 2
79 0 0 27 0 0,1
70 1817 14 0 1 errors == 0 && passes == 1
75 1817 14 29 1 T && T
76 1817 14 28 1 T && F
76 1817 14 27 1 F && _
80 0 0 27 0 1,2
81 0 0 27 0 0
77 1817 14 0 1 errors == 0
80 0 0 27 0 2
81 0 0 27 0 1
77 1817 14 0 1 passes == 1
3 1819 15 0 1
40 1819 15 0 1
3 1821 16 0 1
13 1823 17 9 1 errors
2 1824 17 0 0 pow_uv__uv_extreme_zero
0 1885 0 10 0 pow_uv__uv_extreme_random_small_squares
90 0 0 0 0 ( )
23 1897 8 20 1 ind < 50
20 1901 11 21 2 test_compare_double ( res , pow_uv__uv_extreme_random_small_squares_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1
3 1906 13 0 2
40 1906 13 0 2
3 1908 14 0 2
3 1909 14 0 1
78 0 0 30 0 2
79 0 0 30 0 0,1
70 1911 14 0 1 errors == 0 && passes == 50
75 1911 14 32 1 T && T
76 1911 14 31 1 T && F
76 1911 14 30 1 F && _
80 0 0 30 0 1,2
81 0 0 30 0 0
77 1911 14 0 1 errors == 0
80 0 0 30 0 2
81 0 0 30 0 1
77 1911 14 0 1 passes == 50
3 1913 15 0 1
40 1913 15 0 1
3 1915 16 0 1
13 1917 17 10 1 errors
2 1918 17 0 0 pow_uv__uv_extreme_random_small_squares
0 1979 0 11 0 pow_uv__uv_extreme_random_small_neg_sqr
90 0 0 0 0 ( )
23 1991 8 22 1 ind < 50
20 1995 11 23 2 test_compare_double ( res , pow_uv__uv_extreme_random_small_neg_sqr_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1
3 2000 13 0 2
40 2000 13 0 2
3 2002 14 0 2
3 2003 14 0 1
78 0 0 33 0 2
79 0 0 33 0 0,1
70 2005 14 0 1 errors == 0 && passes == 50
75 2005 14 35 1 T && T
76 2005 14 34 1 T && F
76 2005 14 33 1 F && _
80 0 0 33 0 1,2
81 0 0 33 0 0
77 2005 14 0 1 errors == 0
80 0 0 33 0 2
81 0 0 33 0 1
77 2005 14 0 1 passes == 50
3 2007 15 0 1
40 2007 15 0 1
3 2009 16 0 1
13 2011 17 11 1 errors
2 2012 17 0 0 pow_uv__uv_extreme_random_small_neg_sqr
0 2073 0 12 0 pow_uv__uv_extreme_random_negative
90 0 0 0 0 ( )
23 2085 8 24 1 ind < 50
20 2089 11 25 2 test_compare_double ( res , pow_uv__uv_extreme_random_negative_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1
3 2094 13 0 2
40 2094 13 0 2
3 2096 14 0 2
3 2097 14 0 1
78 0 0 36 0 2
79 0 0 36 0 0,1
70 2099 14 0 1 errors == 0 && passes == 50
75 2099 14 38 1 T && T
76 2099 14 37 1 T && F
76 2099 14 36 1 F && _
80 0 0 36 0 1,2
81 0 0 36 0 0
77 2099 14 0 1 errors == 0
80 0 0 36 0 2
81 0 0 36 0 1
77 2099 14 0 1 passes == 50
3 2101 15 0 1
40 2101 15 0 1
3 2103 16 0 1
13 2105 17 12 1 errors
2 2106 17 0 0 pow_uv__uv_extreme_random_negative
0 2166 0 13 0 pow_uv__uv_extreme_big_powers
90 0 0 0 0 ( )
23 2178 8 26 1 ind < 49
20 2182 11 27 2 test_compare_double ( res , pow_uv__uv_extreme_big_powers_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1
3 2187 13 0 2
40 2187 13 0 2
3 2189 14 0 2
3 2190 14 0 1
78 0 0 39 0 2
79 0 0 39 0 0,1
70 2192 14 0 1 errors == 0 && passes == 49
75 2192 14 41 1 T && T
76 2192 14 40 1 T && F
76 2192 14 39 1 F && _
80 0 0 39 0 1,2
81 0 0 39 0 0
77 2192 14 0 1 errors == 0
80 0 0 39 0 2
81 0 0 39 0 1
77 2192 14 0 1 passes == 49
3 2194 15 0 1
40 2194 15 0 1
3 2196 16 0 1
13 2198 17 13 1 errors
2 2199 17 0 0 pow_uv__uv_extreme_big_powers
0 2259 0 14 0 pow_uv__uv_extreme_overflowing_powers
90 0 0 0 0 ( )
23 2271 8 28 1 ind < 49
20 2275 11 29 2 test_compare_double ( res , pow_uv__uv_extreme_overflowing_powers_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1
3 2280 13 0 2
40 2280 13 0 2
3 2282 14 0 2
3 2283 14 0 1
78 0 0 42 0 2
79 0 0 42 0 0,1
70 2285 14 0 1 errors == 0 && passes == 49
75 2285 14 44 1 T && T
76 2285 14 43 1 T && F
76 2285 14 42 1 F && _
80 0 0 42 0 1,2
81 0 0 42 0 0
77 2285 14 0 1 errors == 0
80 0 0 42 0 2
81 0 0 42 0 1
77 2285 14 0 1 passes == 49
3 2287 15 0 1
40 2287 15 0 1
3 2289 16 0 1
13 2291 17 14 1 errors
2 2292 17 0 0 pow_uv__uv_extreme_overflowing_powers
0 2367 0 15 0 pow_uv__uv_extreme_overflowing_powers_pos
90 0 0 0 0 ( )
23 2379 8 30 1 ind < 64
20 2383 11 31 2 test_compare_double ( res , pow_uv__uv_extreme_overflowing_powers_pos_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1
3 2388 13 0 2
40 2388 13 0 2
3 2390 14 0 2
3 2391 14 0 1
78 0 0 45 0 2
79 0 0 45 0 0,1
70 2393 14 0 1 errors == 0 && passes == 64
75 2393 14 47 1 T && T
76 2393 14 46 1 T && F
76 2393 14 45 1 F && _
80 0 0 45 0 1,2
81 0 0 45 0 0
77 2393 14 0 1 errors == 0
80 0 0 45 0 2
81 0 0 45 0 1
77 2393 14 0 1 passes == 64
3 2395 15 0 1
40 2395 15 0 1
3 2397 16 0 1
13 2399 17 15 1 errors
2 2400 17 0 0 pow_uv__uv_extreme_overflowing_powers_pos
0 2475 0 16 0 pow_uv__uv_extreme_overflowing_powers_neg
90 0 0 0 0 ( )
23 2487 8 32 1 ind < 64
20 2491 11 33 2 test_compare_double ( res , pow_uv__uv_extreme_overflowing_powers_neg_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1
3 2496 13 0 2
40 2496 13 0 2
3 2498 14 0 2
3 2499 14 0 1
78 0 0 48 0 2
79 0 0 48 0 0,1
70 2501 14 0 1 errors == 0 && passes == 64
75 2501 14 50 1 T && T
76 2501 14 49 1 T && F
76 2501 14 48 1 F && _
80 0 0 48 0 1,2
81 0 0 48 0 0
77 2501 14 0 1 errors == 0
80 0 0 48 0 2
81 0 0 48 0 1
77 2501 14 0 1 passes == 64
3 2503 15 0 1
40 2503 15 0 1
3 2505 16 0 1
13 2507 17 16 1 errors
2 2508 17 0 0 pow_uv__uv_extreme_overflowing_powers_neg
0 2583 0 17 0 pow_uv__uv_extreme_undeflowing_powers
90 0 0 0 0 ( )
23 2595 8 34 1 ind < 64
20 2599 11 35 2 test_compare_double ( res , pow_uv__uv_extreme_undeflowing_powers_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1
3 2604 13 0 2
40 2604 13 0 2
3 2606 14 0 2
3 2607 14 0 1
78 0 0 51 0 2
79 0 0 51 0 0,1
70 2609 14 0 1 errors == 0 && passes == 64
75 2609 14 53 1 T && T
76 2609 14 52 1 T && F
76 2609 14 51 1 F && _
80 0 0 51 0 1,2
81 0 0 51 0 0
77 2609 14 0 1 errors == 0
80 0 0 51 0 2
81 0 0 51 0 1
77 2609 14 0 1 passes == 64
3 2611 15 0 1
40 2611 15 0 1
3 2613 16 0 1
13 2615 17 17 1 errors
2 2616 17 0 0 pow_uv__uv_extreme_undeflowing_powers
0 2691 0 18 0 pow_uv__uv_extreme_undeflowing_powers2
90 0 0 0 0 ( )
23 2703 8 36 1 ind < 64
20 2707 11 37 2 test_compare_double ( res , pow_uv__uv_extreme_undeflowing_powers2_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1
3 2712 13 0 2
40 2712 13 0 2
3 2714 14 0 2
3 2715 14 0 1
78 0 0 54 0 2
79 0 0 54 0 0,1
70 2717 14 0 1 errors == 0 && passes == 64
75 2717 14 56 1 T && T
76 2717 14 55 1 T && F
76 2717 14 54 1 F && _
80 0 0 54 0 1,2
81 0 0 54 0 0
77 2717 14 0 1 errors == 0
80 0 0 54 0 2
81 0 0 54 0 1
77 2717 14 0 1 passes == 64
3 2719 15 0 1
40 2719 15 0 1
3 2721 16 0 1
13 2723 17 18 1 errors
2 2724 17 0 0 pow_uv__uv_extreme_undeflowing_powers2
0 2799 0 19 0 pow_uv__uv_extreme_undeflowing_powers3
90 0 0 0 0 ( )
23 2811 8 38 1 ind < 64
20 2815 11 39 2 test_compare_double ( res , pow_uv__uv_extreme_undeflowing_powers3_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1
3 2820 13 0 2
40 2820 13 0 2
3 2822 14 0 2
3 2823 14 0 1
78 0 0 57 0 2
79 0 0 57 0 0,1
70 2825 14 0 1 errors == 0 && passes == 64
75 2825 14 59 1 T && T
76 2825 14 58 1 T && F
76 2825 14 57 1 F && _
80 0 0 57 0 1,2
81 0 0 57 0 0
77 2825 14 0 1 errors == 0
80 0 0 57 0 2
81 0 0 57 0 1
77 2825 14 0 1 passes == 64
3 2827 15 0 1
40 2827 15 0 1
3 2829 16 0 1
13 2831 17 19 1 errors
2 2832 17 0 0 pow_uv__uv_extreme_undeflowing_powers3
0 2907 0 20 0 pow_uv__uv_extreme_undeflowing_powers4
90 0 0 0 0 ( )
23 2919 8 40 1 ind < 64
20 2923 11 41 2 test_compare_double ( res , pow_uv__uv_extreme_undeflowing_powers4_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1
3 2928 13 0 2
40 2928 13 0 2
3 2930 14 0 2
3 2931 14 0 1
78 0 0 60 0 2
79 0 0 60 0 0,1
70 2933 14 0 1 errors == 0 && passes == 64
75 2933 14 62 1 T && T
76 2933 14 61 1 T && F
76 2933 14 60 1 F && _
80 0 0 60 0 1,2
81 0 0 60 0 0
77 2933 14 0 1 errors == 0
80 0 0 60 0 2
81 0 0 60 0 1
77 2933 14 0 1 passes == 64
3 2935 15 0 1
40 2935 15 0 1
3 2937 16 0 1
13 2939 17 20 1 errors
2 2940 17 0 0 pow_uv__uv_extreme_undeflowing_powers4
0 3005 0 21 0 pow_uv__uv_extreme_roots_of_minus_two
90 0 0 0 0 ( )
23 3017 8 42 1 ind < 54
20 3021 11 43 2 test_compare_double ( res , pow_uv__uv_extreme_roots_of_minus_two_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1
3 3026 13 0 2
40 3026 13 0 2
3 3028 14 0 2
3 3029 14 0 1
78 0 0 63 0 2
79 0 0 63 0 0,1
70 3031 14 0 1 errors == 0 && passes == 54
75 3031 14 65 1 T && T
76 3031 14 64 1 T && F
76 3031 14 63 1 F && _
80 0 0 63 0 1,2
81 0 0 63 0 0
77 3031 14 0 1 errors == 0
80 0 0 63 0 2
81 0 0 63 0 1
77 3031 14 0 1 passes == 54
3 3033 15 0 1
40 3033 15 0 1
3 3035 16 0 1
13 3037 17 21 1 errors
2 3038 17 0 0 pow_uv__uv_extreme_roots_of_minus_two
0 3103 0 22 0 pow_uv__uv_extreme_roots_to_minus_ten
90 0 0 0 0 ( )
23 3115 8 44 1 ind < 54
20 3119 11 45 2 test_compare_double ( res , pow_uv__uv_extreme_roots_to_minus_ten_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1
3 3124 13 0 2
40 3124 13 0 2
3 3126 14 0 2
3 3127 14 0 1
78 0 0 66 0 2
79 0 0 66 0 0,1
70 3129 14 0 1 errors == 0 && passes == 54
75 3129 14 68 1 T && T
76 3129 14 67 1 T && F
76 3129 14 66 1 F && _
80 0 0 66 0 1,2
81 0 0 66 0 0
77 3129 14 0 1 errors == 0
80 0 0 66 0 2
81 0 0 66 0 1
77 3129 14 0 1 passes == 54
3 3131 15 0 1
40 3131 15 0 1
3 3133 16 0 1
13 3135 17 22 1 errors
2 3136 17 0 0 pow_uv__uv_extreme_roots_to_minus_ten
0 3167 0 23 0 pow_uv__uv_extreme_big_powers2
90 0 0 0 0 ( )
23 3179 8 46 1 ind < 20
20 3183 11 47 2 test_compare_double ( res , pow_uv__uv_extreme_big_powers2_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1
3 3188 13 0 2
40 3188 13 0 2
3 3190 14 0 2
3 3191 14 0 1
78 0 0 69 0 2
79 0 0 69 0 0,1
70 3193 14 0 1 errors == 0 && passes == 20
75 3193 14 71 1 T && T
76 3193 14 70 1 T && F
76 3193 14 69 1 F && _
80 0 0 69 0 1,2
81 0 0 69 0 0
77 3193 14 0 1 errors == 0
80 0 0 69 0 2
81 0 0 69 0 1
77 3193 14 0 1 passes == 20
3 3195 15 0 1
40 3195 15 0 1
3 3197 16 0 1
13 3199 17 23 1 errors
2 3200 17 0 0 pow_uv__uv_extreme_big_powers2
0 3229 0 24 0 pow_uv__uv_extreme_coverage_dw
90 0 0 0 0 ( )
23 3241 8 48 1 ind < 18
20 3245 11 49 2 test_compare_double ( res , pow_uv__uv_extreme_coverage_dw_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_extreme , & max_dif_above_pow_uv__uv_extreme ) != 1
3 3250 13 0 2
40 3250 13 0 2
3 3252 14 0 2
3 3253 14 0 1
78 0 0 72 0 2
79 0 0 72 0 0,1
70 3255 14 0 1 errors == 0 && passes == 18
75 3255 14 74 1 T && T
76 3255 14 73 1 T && F
76 3255 14 72 1 F && _
80 0 0 72 0 1,2
81 0 0 72 0 0
77 3255 14 0 1 errors == 0
80 0 0 72 0 2
81 0 0 72 0 1
77 3255 14 0 1 passes == 18
3 3257 15 0 1
40 3257 15 0 1
3 3259 16 0 1
13 3261 17 24 1 errors
2 3262 17 0 0 pow_uv__uv_extreme_coverage_dw
0 3267 0 25 0 pow_uv__uv_extreme_main_test
90 0 0 0 0 ( )
20 3296 27 50 1 errors == 0
3 3298 28 0 1
40 3298 28 0 1
3 3300 29 0 1
13 3354 31 25 1 errors
2 3355 31 0 0 pow_uv__uv_extreme_main_test
%3355,26,26,51,75,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\pow_uv__uv_normal.c
7 1561811952 0 0
0 179 0 0 0 pow_uv__uv_normal_normal_values
90 0 0 0 0 ( )
23 191 8 0 1 ind < 3
20 195 11 1 2 test_compare_double ( res , pow_uv__uv_normal_normal_values_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_normal , & max_dif_above_pow_uv__uv_normal ) != 1
3 200 13 0 2
40 200 13 0 2
3 202 14 0 2
3 203 14 0 1
78 0 0 0 0 2
79 0 0 0 0 0,1
70 205 14 0 1 errors == 0 && passes == 3
75 205 14 2 1 T && T
76 205 14 1 1 T && F
76 205 14 0 1 F && _
80 0 0 0 0 1,2
81 0 0 0 0 0
77 205 14 0 1 errors == 0
80 0 0 0 0 2
81 0 0 0 0 1
77 205 14 0 1 passes == 3
3 207 15 0 1
40 207 15 0 1
3 209 16 0 1
13 211 17 0 1 errors
2 212 17 0 0 pow_uv__uv_normal_normal_values
0 272 0 1 0 pow_uv__uv_normal_pow_normal_range
90 0 0 0 0 ( )
23 284 8 2 1 ind < 49
20 288 11 3 2 test_compare_double ( res , pow_uv__uv_normal_pow_normal_range_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_normal , & max_dif_above_pow_uv__uv_normal ) != 1
3 293 13 0 2
40 293 13 0 2
3 295 14 0 2
3 296 14 0 1
78 0 0 3 0 2
79 0 0 3 0 0,1
70 298 14 0 1 errors == 0 && passes == 49
75 298 14 5 1 T && T
76 298 14 4 1 T && F
76 298 14 3 1 F && _
80 0 0 3 0 1,2
81 0 0 3 0 0
77 298 14 0 1 errors == 0
80 0 0 3 0 2
81 0 0 3 0 1
77 298 14 0 1 passes == 49
3 300 15 0 1
40 300 15 0 1
3 302 16 0 1
13 304 17 1 1 errors
2 305 17 0 0 pow_uv__uv_normal_pow_normal_range
0 366 0 2 0 pow_uv__uv_normal_pow_normal_range_rnd
90 0 0 0 0 ( )
23 378 8 4 1 ind < 50
20 382 11 5 2 test_compare_double ( res , pow_uv__uv_normal_pow_normal_range_rnd_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_normal , & max_dif_above_pow_uv__uv_normal ) != 1
3 387 13 0 2
40 387 13 0 2
3 389 14 0 2
3 390 14 0 1
78 0 0 6 0 2
79 0 0 6 0 0,1
70 392 14 0 1 errors == 0 && passes == 50
75 392 14 8 1 T && T
76 392 14 7 1 T && F
76 392 14 6 1 F && _
80 0 0 6 0 1,2
81 0 0 6 0 0
77 392 14 0 1 errors == 0
80 0 0 6 0 2
81 0 0 6 0 1
77 392 14 0 1 passes == 50
3 394 15 0 1
40 394 15 0 1
3 396 16 0 1
13 398 17 2 1 errors
2 399 17 0 0 pow_uv__uv_normal_pow_normal_range_rnd
0 460 0 3 0 pow_uv__uv_normal_random_squares
90 0 0 0 0 ( )
23 472 8 6 1 ind < 50
20 476 11 7 2 test_compare_double ( res , pow_uv__uv_normal_random_squares_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_normal , & max_dif_above_pow_uv__uv_normal ) != 1
3 481 13 0 2
40 481 13 0 2
3 483 14 0 2
3 484 14 0 1
78 0 0 9 0 2
79 0 0 9 0 0,1
70 486 14 0 1 errors == 0 && passes == 50
75 486 14 11 1 T && T
76 486 14 10 1 T && F
76 486 14 9 1 F && _
80 0 0 9 0 1,2
81 0 0 9 0 0
77 486 14 0 1 errors == 0
80 0 0 9 0 2
81 0 0 9 0 1
77 486 14 0 1 passes == 50
3 488 15 0 1
40 488 15 0 1
3 490 16 0 1
13 492 17 3 1 errors
2 493 17 0 0 pow_uv__uv_normal_random_squares
0 554 0 4 0 pow_uv__uv_normal_negative_squares
90 0 0 0 0 ( )
23 566 8 8 1 ind < 50
20 570 11 9 2 test_compare_double ( res , pow_uv__uv_normal_negative_squares_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_normal , & max_dif_above_pow_uv__uv_normal ) != 1
3 575 13 0 2
40 575 13 0 2
3 577 14 0 2
3 578 14 0 1
78 0 0 12 0 2
79 0 0 12 0 0,1
70 580 14 0 1 errors == 0 && passes == 50
75 580 14 14 1 T && T
76 580 14 13 1 T && F
76 580 14 12 1 F && _
80 0 0 12 0 1,2
81 0 0 12 0 0
77 580 14 0 1 errors == 0
80 0 0 12 0 2
81 0 0 12 0 1
77 580 14 0 1 passes == 50
3 582 15 0 1
40 582 15 0 1
3 584 16 0 1
13 586 17 4 1 errors
2 587 17 0 0 pow_uv__uv_normal_negative_squares
0 662 0 5 0 pow_uv__uv_normal_negative_pow
90 0 0 0 0 ( )
23 674 8 10 1 ind < 64
20 678 11 11 2 test_compare_double ( res , pow_uv__uv_normal_negative_pow_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_normal , & max_dif_above_pow_uv__uv_normal ) != 1
3 683 13 0 2
40 683 13 0 2
3 685 14 0 2
3 686 14 0 1
78 0 0 15 0 2
79 0 0 15 0 0,1
70 688 14 0 1 errors == 0 && passes == 64
75 688 14 17 1 T && T
76 688 14 16 1 T && F
76 688 14 15 1 F && _
80 0 0 15 0 1,2
81 0 0 15 0 0
77 688 14 0 1 errors == 0
80 0 0 15 0 2
81 0 0 15 0 1
77 688 14 0 1 passes == 64
3 690 15 0 1
40 690 15 0 1
3 692 16 0 1
13 694 17 5 1 errors
2 695 17 0 0 pow_uv__uv_normal_negative_pow
0 756 0 6 0 pow_uv__uv_normal_random_squareroots
90 0 0 0 0 ( )
23 768 8 12 1 ind < 50
20 772 11 13 2 test_compare_double ( res , pow_uv__uv_normal_random_squareroots_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_normal , & max_dif_above_pow_uv__uv_normal ) != 1
3 777 13 0 2
40 777 13 0 2
3 779 14 0 2
3 780 14 0 1
78 0 0 18 0 2
79 0 0 18 0 0,1
70 782 14 0 1 errors == 0 && passes == 50
75 782 14 20 1 T && T
76 782 14 19 1 T && F
76 782 14 18 1 F && _
80 0 0 18 0 1,2
81 0 0 18 0 0
77 782 14 0 1 errors == 0
80 0 0 18 0 2
81 0 0 18 0 1
77 782 14 0 1 passes == 50
3 784 15 0 1
40 784 15 0 1
3 786 16 0 1
13 788 17 6 1 errors
2 789 17 0 0 pow_uv__uv_normal_random_squareroots
0 850 0 7 0 pow_uv__uv_normal_random_exponent
90 0 0 0 0 ( )
23 862 8 14 1 ind < 50
20 866 11 15 2 test_compare_double ( res , pow_uv__uv_normal_random_exponent_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_normal , & max_dif_above_pow_uv__uv_normal ) != 1
3 871 13 0 2
40 871 13 0 2
3 873 14 0 2
3 874 14 0 1
78 0 0 21 0 2
79 0 0 21 0 0,1
70 876 14 0 1 errors == 0 && passes == 50
75 876 14 23 1 T && T
76 876 14 22 1 T && F
76 876 14 21 1 F && _
80 0 0 21 0 1,2
81 0 0 21 0 0
77 876 14 0 1 errors == 0
80 0 0 21 0 2
81 0 0 21 0 1
77 876 14 0 1 passes == 50
3 878 15 0 1
40 878 15 0 1
3 880 16 0 1
13 882 17 7 1 errors
2 883 17 0 0 pow_uv__uv_normal_random_exponent
0 944 0 8 0 pow_uv__uv_normal_random_numbers
90 0 0 0 0 ( )
23 956 8 16 1 ind < 50
20 960 11 17 2 test_compare_double ( res , pow_uv__uv_normal_random_numbers_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_normal , & max_dif_above_pow_uv__uv_normal ) != 1
3 965 13 0 2
40 965 13 0 2
3 967 14 0 2
3 968 14 0 1
78 0 0 24 0 2
79 0 0 24 0 0,1
70 970 14 0 1 errors == 0 && passes == 50
75 970 14 26 1 T && T
76 970 14 25 1 T && F
76 970 14 24 1 F && _
80 0 0 24 0 1,2
81 0 0 24 0 0
77 970 14 0 1 errors == 0
80 0 0 24 0 2
81 0 0 24 0 1
77 970 14 0 1 passes == 50
3 972 15 0 1
40 972 15 0 1
3 974 16 0 1
13 976 17 8 1 errors
2 977 17 0 0 pow_uv__uv_normal_random_numbers
0 1002 0 9 0 pow_uv__uv_normal_linear_squares
90 0 0 0 0 ( )
23 1014 8 18 1 ind < 14
20 1018 11 19 2 test_compare_double ( res , pow_uv__uv_normal_linear_squares_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_normal , & max_dif_above_pow_uv__uv_normal ) != 1
3 1023 13 0 2
40 1023 13 0 2
3 1025 14 0 2
3 1026 14 0 1
78 0 0 27 0 2
79 0 0 27 0 0,1
70 1028 14 0 1 errors == 0 && passes == 14
75 1028 14 29 1 T && T
76 1028 14 28 1 T && F
76 1028 14 27 1 F && _
80 0 0 27 0 1,2
81 0 0 27 0 0
77 1028 14 0 1 errors == 0
80 0 0 27 0 2
81 0 0 27 0 1
77 1028 14 0 1 passes == 14
3 1030 15 0 1
40 1030 15 0 1
3 1032 16 0 1
13 1034 17 9 1 errors
2 1035 17 0 0 pow_uv__uv_normal_linear_squares
0 1095 0 10 0 pow_uv__uv_normal_linear_powers
90 0 0 0 0 ( )
23 1107 8 20 1 ind < 49
20 1111 11 21 2 test_compare_double ( res , pow_uv__uv_normal_linear_powers_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_normal , & max_dif_above_pow_uv__uv_normal ) != 1
3 1116 13 0 2
40 1116 13 0 2
3 1118 14 0 2
3 1119 14 0 1
78 0 0 30 0 2
79 0 0 30 0 0,1
70 1121 14 0 1 errors == 0 && passes == 49
75 1121 14 32 1 T && T
76 1121 14 31 1 T && F
76 1121 14 30 1 F && _
80 0 0 30 0 1,2
81 0 0 30 0 0
77 1121 14 0 1 errors == 0
80 0 0 30 0 2
81 0 0 30 0 1
77 1121 14 0 1 passes == 49
3 1123 15 0 1
40 1123 15 0 1
3 1125 16 0 1
13 1127 17 10 1 errors
2 1128 17 0 0 pow_uv__uv_normal_linear_powers
0 1193 0 11 0 pow_uv__uv_normal_roots_of_two
90 0 0 0 0 ( )
23 1205 8 22 1 ind < 54
20 1209 11 23 2 test_compare_double ( res , pow_uv__uv_normal_roots_of_two_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_normal , & max_dif_above_pow_uv__uv_normal ) != 1
3 1214 13 0 2
40 1214 13 0 2
3 1216 14 0 2
3 1217 14 0 1
78 0 0 33 0 2
79 0 0 33 0 0,1
70 1219 14 0 1 errors == 0 && passes == 54
75 1219 14 35 1 T && T
76 1219 14 34 1 T && F
76 1219 14 33 1 F && _
80 0 0 33 0 1,2
81 0 0 33 0 0
77 1219 14 0 1 errors == 0
80 0 0 33 0 2
81 0 0 33 0 1
77 1219 14 0 1 passes == 54
3 1221 15 0 1
40 1221 15 0 1
3 1223 16 0 1
13 1225 17 11 1 errors
2 1226 17 0 0 pow_uv__uv_normal_roots_of_two
0 1290 0 12 0 pow_uv__uv_normal_roots_to_ten
90 0 0 0 0 ( )
23 1302 8 24 1 ind < 53
20 1306 11 25 2 test_compare_double ( res , pow_uv__uv_normal_roots_to_ten_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_normal , & max_dif_above_pow_uv__uv_normal ) != 1
3 1311 13 0 2
40 1311 13 0 2
3 1313 14 0 2
3 1314 14 0 1
78 0 0 36 0 2
79 0 0 36 0 0,1
70 1316 14 0 1 errors == 0 && passes == 53
75 1316 14 38 1 T && T
76 1316 14 37 1 T && F
76 1316 14 36 1 F && _
80 0 0 36 0 1,2
81 0 0 36 0 0
77 1316 14 0 1 errors == 0
80 0 0 36 0 2
81 0 0 36 0 1
77 1316 14 0 1 passes == 53
3 1318 15 0 1
40 1318 15 0 1
3 1320 16 0 1
13 1322 17 12 1 errors
2 1323 17 0 0 pow_uv__uv_normal_roots_to_ten
0 1355 0 13 0 pow_uv__uv_normal_two_powers
90 0 0 0 0 ( )
23 1367 8 26 1 ind < 21
20 1371 11 27 2 test_compare_double ( res , pow_uv__uv_normal_two_powers_io_table [ ind ] . pow_out , 128 , 1.0E-12 , 1.0E-12 , 10.0 , & max_dif_below_pow_uv__uv_normal , & max_dif_above_pow_uv__uv_normal ) != 1
3 1376 13 0 2
40 1376 13 0 2
3 1378 14 0 2
3 1379 14 0 1
78 0 0 39 0 2
79 0 0 39 0 0,1
70 1381 14 0 1 errors == 0 && passes == 21
75 1381 14 41 1 T && T
76 1381 14 40 1 T && F
76 1381 14 39 1 F && _
80 0 0 39 0 1,2
81 0 0 39 0 0
77 1381 14 0 1 errors == 0
80 0 0 39 0 2
81 0 0 39 0 1
77 1381 14 0 1 passes == 21
3 1383 15 0 1
40 1383 15 0 1
3 1385 16 0 1
13 1387 17 13 1 errors
2 1388 17 0 0 pow_uv__uv_normal_two_powers
0 1393 0 14 0 pow_uv__uv_normal_main_test
90 0 0 0 0 ( )
20 1411 16 28 1 errors == 0
3 1413 17 0 1
40 1413 17 0 1
3 1415 18 0 1
13 1469 20 14 1 errors
2 1470 20 0 0 pow_uv__uv_normal_main_test
%1470,15,15,29,42,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\pow_uv__uv_terms.c
7 1561811953 0 0
0 138 0 0 0 pow_uv__uv_terms_pow_deterministic
90 0 0 0 0 ( )
23 152 10 0 1 ind < 49
20 156 13 1 2 res != pow_uv__uv_terms_pow_deterministic_io_table [ ind ] . pow_out
78 0 0 0 0 2
79 0 0 0 0 0,1
70 158 13 0 3 ( pow ( x , y ) == pow ( x , y ) ) >= - 2147483648.0 && ( pow ( x , y ) == pow ( x , y ) ) <= 2147483647.0
75 158 13 2 3 T && T
76 158 13 1 3 T && F
76 158 13 0 3 F && _
80 0 0 0 0 1,2
81 0 0 0 0 0
77 158 13 0 3 ( pow ( x , y ) == pow ( x , y ) ) >= - 2147483648.0
80 0 0 0 0 2
81 0 0 0 0 1
77 158 13 0 3 ( pow ( x , y ) == pow ( x , y ) ) <= 2147483647.0
78 0 0 3 0 2
79 0 0 3 0 0,1
70 163 15 0 4 ( res1 != pow_uv__uv_terms_pow_deterministic_io_table [ ind ] . pow_out ) && ( res2 != pow_uv__uv_terms_pow_deterministic_io_table [ ind ] . pow_out )
75 163 15 5 4 (T) && (T)
76 163 15 4 4 (T) && (F)
76 163 15 3 4 (F) && (_)
80 0 0 3 0 1,2
81 0 0 3 0 0
77 163 15 0 4 res1 != pow_uv__uv_terms_pow_deterministic_io_table [ ind ] . pow_out
80 0 0 3 0 2
81 0 0 3 0 1
77 163 15 0 4 res2 != pow_uv__uv_terms_pow_deterministic_io_table [ ind ] . pow_out
3 168 17 0 4
40 168 17 0 4
3 170 18 0 4
3 171 18 0 3
40 171 18 0 3
3 173 19 0 3
3 174 19 0 2
40 174 19 0 2
3 176 20 0 2
3 177 20 0 1
78 0 0 6 0 2
79 0 0 6 0 0,1
70 179 20 0 1 errors == 0 && passes == 49
75 179 20 8 1 T && T
76 179 20 7 1 T && F
76 179 20 6 1 F && _
80 0 0 6 0 1,2
81 0 0 6 0 0
77 179 20 0 1 errors == 0
80 0 0 6 0 2
81 0 0 6 0 1
77 179 20 0 1 passes == 49
3 181 21 0 1
40 181 21 0 1
3 183 22 0 1
13 185 23 0 1 errors
2 186 23 0 0 pow_uv__uv_terms_pow_deterministic
0 247 0 1 0 pow_uv__uv_terms_pow_combine
90 0 0 0 0 ( )
23 259 8 2 1 ind < 49
20 263 11 3 2 test_compare_double ( res , pow_uv__uv_terms_pow_combine_io_table [ ind ] . pow_out , 128 , 1.0E-11 , 1.0E-11 , 10.0 , & max_dif_below_pow_uv__uv_terms , & max_dif_above_pow_uv__uv_terms ) != 1
3 268 13 0 2
40 268 13 0 2
3 270 14 0 2
3 271 14 0 1
78 0 0 9 0 2
79 0 0 9 0 0,1
70 273 14 0 1 errors == 0 && passes == 49
75 273 14 11 1 T && T
76 273 14 10 1 T && F
76 273 14 9 1 F && _
80 0 0 9 0 1,2
81 0 0 9 0 0
77 273 14 0 1 errors == 0
80 0 0 9 0 2
81 0 0 9 0 1
77 273 14 0 1 passes == 49
3 275 15 0 1
40 275 15 0 1
3 277 16 0 1
13 279 17 1 1 errors
2 280 17 0 0 pow_uv__uv_terms_pow_combine
0 302 0 2 0 pow_uv__uv_terms_sqrt_pow
90 0 0 0 0 ( )
23 313 7 4 1 ind < 10
20 316 9 5 2 test_compare_double ( res , pow_uv__uv_terms_sqrt_pow_io_table [ ind ] . pow_out , 128 , 1.0E-11 , 1.0E-11 , 10.0 , & max_dif_below_pow_uv__uv_terms , & max_dif_above_pow_uv__uv_terms ) != 1
3 321 11 0 2
40 321 11 0 2
3 323 12 0 2
3 324 12 0 1
78 0 0 12 0 2
79 0 0 12 0 0,1
70 326 12 0 1 errors == 0 && passes == 10
75 326 12 14 1 T && T
76 326 12 13 1 T && F
76 326 12 12 1 F && _
80 0 0 12 0 1,2
81 0 0 12 0 0
77 326 12 0 1 errors == 0
80 0 0 12 0 2
81 0 0 12 0 1
77 326 12 0 1 passes == 10
3 328 13 0 1
40 328 13 0 1
3 330 14 0 1
13 332 15 2 1 errors
2 333 15 0 0 pow_uv__uv_terms_sqrt_pow
0 355 0 3 0 pow_uv__uv_terms_pow_sqrt
90 0 0 0 0 ( )
23 366 7 6 1 ind < 10
20 369 9 7 2 test_compare_double ( res , pow_uv__uv_terms_pow_sqrt_io_table [ ind ] . pow_out , 128 , 1.0E-11 , 1.0E-11 , 10.0 , & max_dif_below_pow_uv__uv_terms , & max_dif_above_pow_uv__uv_terms ) != 1
3 374 11 0 2
40 374 11 0 2
3 376 12 0 2
3 377 12 0 1
78 0 0 15 0 2
79 0 0 15 0 0,1
70 379 12 0 1 errors == 0 && passes == 10
75 379 12 17 1 T && T
76 379 12 16 1 T && F
76 379 12 15 1 F && _
80 0 0 15 0 1,2
81 0 0 15 0 0
77 379 12 0 1 errors == 0
80 0 0 15 0 2
81 0 0 15 0 1
77 379 12 0 1 passes == 10
3 381 13 0 1
40 381 13 0 1
3 383 14 0 1
13 385 15 3 1 errors
2 386 15 0 0 pow_uv__uv_terms_pow_sqrt
0 391 0 4 0 pow_uv__uv_terms_main_test
90 0 0 0 0 ( )
20 399 6 8 1 errors == 0
3 401 7 0 1
40 401 7 0 1
3 403 8 0 1
13 457 10 4 1 errors
2 458 10 0 0 pow_uv__uv_terms_main_test
%458,5,5,9,18,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\pow_uv__uv_trivial.c
7 1561811954 0 0
0 116 0 0 0 pow_uv__uv_trivial_zero_one
90 0 0 0 0 ( )
23 128 8 0 1 ind < 2
20 132 11 1 2 test_compare_double ( res , pow_uv__uv_trivial_zero_one_io_table [ ind ] . pow_out , 128 , 1.0E-13 , 1.0E-13 , 10.0 , & max_dif_below_pow_uv__uv_trivial , & max_dif_above_pow_uv__uv_trivial ) != 1
3 137 13 0 2
40 137 13 0 2
3 139 14 0 2
3 140 14 0 1
78 0 0 0 0 2
79 0 0 0 0 0,1
70 142 14 0 1 errors == 0 && passes == 2
75 142 14 2 1 T && T
76 142 14 1 1 T && F
76 142 14 0 1 F && _
80 0 0 0 0 1,2
81 0 0 0 0 0
77 142 14 0 1 errors == 0
80 0 0 0 0 2
81 0 0 0 0 1
77 142 14 0 1 passes == 2
3 144 15 0 1
40 144 15 0 1
3 146 16 0 1
13 148 17 0 1 errors
2 149 17 0 0 pow_uv__uv_trivial_zero_one
0 181 0 1 0 pow_uv__uv_trivial_zero
90 0 0 0 0 ( )
23 193 8 2 1 ind < 20
20 197 11 3 2 test_compare_double ( res , pow_uv__uv_trivial_zero_io_table [ ind ] . pow_out , 128 , 1.0E-13 , 1.0E-13 , 10.0 , & max_dif_below_pow_uv__uv_trivial , & max_dif_above_pow_uv__uv_trivial ) != 1
3 202 13 0 2
40 202 13 0 2
3 204 14 0 2
3 205 14 0 1
78 0 0 3 0 2
79 0 0 3 0 0,1
70 207 14 0 1 errors == 0 && passes == 20
75 207 14 5 1 T && T
76 207 14 4 1 T && F
76 207 14 3 1 F && _
80 0 0 3 0 1,2
81 0 0 3 0 0
77 207 14 0 1 errors == 0
80 0 0 3 0 2
81 0 0 3 0 1
77 207 14 0 1 passes == 20
3 209 15 0 1
40 209 15 0 1
3 211 16 0 1
13 213 17 1 1 errors
2 214 17 0 0 pow_uv__uv_trivial_zero
0 227 0 2 0 pow_uv__uv_trivial_negative_zero
90 0 0 0 0 ( )
23 239 8 4 1 ind < 2
20 243 11 5 2 test_compare_double ( res , pow_uv__uv_trivial_negative_zero_io_table [ ind ] . pow_out , 128 , 1.0E-13 , 1.0E-13 , 10.0 , & max_dif_below_pow_uv__uv_trivial , & max_dif_above_pow_uv__uv_trivial ) != 1
3 248 13 0 2
40 248 13 0 2
3 250 14 0 2
3 251 14 0 1
78 0 0 6 0 2
79 0 0 6 0 0,1
70 253 14 0 1 errors == 0 && passes == 2
75 253 14 8 1 T && T
76 253 14 7 1 T && F
76 253 14 6 1 F && _
80 0 0 6 0 1,2
81 0 0 6 0 0
77 253 14 0 1 errors == 0
80 0 0 6 0 2
81 0 0 6 0 1
77 253 14 0 1 passes == 2
3 255 15 0 1
40 255 15 0 1
3 257 16 0 1
13 259 17 2 1 errors
2 260 17 0 0 pow_uv__uv_trivial_negative_zero
0 275 0 3 0 pow_uv__uv_trivial_four
90 0 0 0 0 ( )
23 287 8 6 1 ind < 4
20 291 11 7 2 test_compare_double ( res , pow_uv__uv_trivial_four_io_table [ ind ] . pow_out , 128 , 1.0E-13 , 1.0E-13 , 10.0 , & max_dif_below_pow_uv__uv_trivial , & max_dif_above_pow_uv__uv_trivial ) != 1
3 296 13 0 2
40 296 13 0 2
3 298 14 0 2
3 299 14 0 1
78 0 0 9 0 2
79 0 0 9 0 0,1
70 301 14 0 1 errors == 0 && passes == 4
75 301 14 11 1 T && T
76 301 14 10 1 T && F
76 301 14 9 1 F && _
80 0 0 9 0 1,2
81 0 0 9 0 0
77 301 14 0 1 errors == 0
80 0 0 9 0 2
81 0 0 9 0 1
77 301 14 0 1 passes == 4
3 303 15 0 1
40 303 15 0 1
3 305 16 0 1
13 307 17 3 1 errors
2 308 17 0 0 pow_uv__uv_trivial_four
0 322 0 4 0 pow_uv__uv_trivial_nine
90 0 0 0 0 ( )
23 334 8 8 1 ind < 3
20 338 11 9 2 test_compare_double ( res , pow_uv__uv_trivial_nine_io_table [ ind ] . pow_out , 128 , 1.0E-13 , 1.0E-13 , 10.0 , & max_dif_below_pow_uv__uv_trivial , & max_dif_above_pow_uv__uv_trivial ) != 1
3 343 13 0 2
40 343 13 0 2
3 345 14 0 2
3 346 14 0 1
78 0 0 12 0 2
79 0 0 12 0 0,1
70 348 14 0 1 errors == 0 && passes == 3
75 348 14 14 1 T && T
76 348 14 13 1 T && F
76 348 14 12 1 F && _
80 0 0 12 0 1,2
81 0 0 12 0 0
77 348 14 0 1 errors == 0
80 0 0 12 0 2
81 0 0 12 0 1
77 348 14 0 1 passes == 3
3 350 15 0 1
40 350 15 0 1
3 352 16 0 1
13 354 17 4 1 errors
2 355 17 0 0 pow_uv__uv_trivial_nine
0 367 0 5 0 pow_uv__uv_trivial_hundred
90 0 0 0 0 ( )
23 379 8 10 1 ind < 1
20 383 11 11 2 test_compare_double ( res , pow_uv__uv_trivial_hundred_io_table [ ind ] . pow_out , 128 , 1.0E-13 , 1.0E-13 , 10.0 , & max_dif_below_pow_uv__uv_trivial , & max_dif_above_pow_uv__uv_trivial ) != 1
3 388 13 0 2
40 388 13 0 2
3 390 14 0 2
3 391 14 0 1
78 0 0 15 0 2
79 0 0 15 0 0,1
70 393 14 0 1 errors == 0 && passes == 1
75 393 14 17 1 T && T
76 393 14 16 1 T && F
76 393 14 15 1 F && _
80 0 0 15 0 1,2
81 0 0 15 0 0
77 393 14 0 1 errors == 0
80 0 0 15 0 2
81 0 0 15 0 1
77 393 14 0 1 passes == 1
3 395 15 0 1
40 395 15 0 1
3 397 16 0 1
13 399 17 5 1 errors
2 400 17 0 0 pow_uv__uv_trivial_hundred
0 414 0 6 0 pow_uv__uv_trivial_special_values
90 0 0 0 0 ( )
23 426 8 12 1 ind < 3
20 430 11 13 2 test_compare_double ( res , pow_uv__uv_trivial_special_values_io_table [ ind ] . pow_out , 128 , 1.0E-13 , 1.0E-13 , 10.0 , & max_dif_below_pow_uv__uv_trivial , & max_dif_above_pow_uv__uv_trivial ) != 1
3 435 13 0 2
40 435 13 0 2
3 437 14 0 2
3 438 14 0 1
78 0 0 18 0 2
79 0 0 18 0 0,1
70 440 14 0 1 errors == 0 && passes == 3
75 440 14 20 1 T && T
76 440 14 19 1 T && F
76 440 14 18 1 F && _
80 0 0 18 0 1,2
81 0 0 18 0 0
77 440 14 0 1 errors == 0
80 0 0 18 0 2
81 0 0 18 0 1
77 440 14 0 1 passes == 3
3 442 15 0 1
40 442 15 0 1
3 444 16 0 1
13 446 17 6 1 errors
2 447 17 0 0 pow_uv__uv_trivial_special_values
0 452 0 7 0 pow_uv__uv_trivial_main_test
90 0 0 0 0 ( )
20 463 9 14 1 errors == 0
3 465 10 0 1
40 465 10 0 1
3 467 11 0 1
13 521 13 7 1 errors
2 522 13 0 0 pow_uv__uv_trivial_main_test
%522,8,8,15,21,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\powf.c
7 1561811955 0 0
0 12 0 0 0 _FPow
90 0 0 0 0 ( float x , float y , short * pex )
20 14 0 0 1 pex != 0
3 15 1 0 1
40 16 1 0 1
3 17 2 0 1
20 26 8 1 1 y == 1.0F
13 27 9 0 2 ( x )
3 27 9 0 1
20 43 15 2 1 pex != 0
3 44 16 0 1
78 0 0 0 0 4,5,10,11,12
79 0 0 0 0 0,1,2,3,6,7,8,9
70 47 16 0 1 ( erry == 0 && y == 0.0F ) || ( errx < 0 && xexp == 1 && ( x == 0.5F || ( erry == 1 && x == - 0.5F ) ) )
75 47 16 12 1 (T && T) || (_ && _ && (_ || (_ && _)))
75 47 16 11 1 (T && F) || (T && T && (T || (_ && _)))
75 47 16 10 1 (T && F) || (T && T && (F || (T && T)))
75 47 16 5 1 (F && _) || (T && T && (T || (_ && _)))
75 47 16 4 1 (F && _) || (T && T && (F || (T && T)))
76 47 16 9 1 (T && F) || (T && T && (F || (T && F)))
76 47 16 8 1 (T && F) || (T && T && (F || (F && _)))
76 47 16 7 1 (T && F) || (T && F && (_ || (_ && _)))
76 47 16 6 1 (T && F) || (F && _ && (_ || (_ && _)))
76 47 16 3 1 (F && _) || (T && T && (F || (T && F)))
76 47 16 2 1 (F && _) || (T && T && (F || (F && _)))
76 47 16 1 1 (F && _) || (T && F && (_ || (_ && _)))
76 47 16 0 1 (F && _) || (F && _ && (_ || (_ && _)))
80 0 0 0 0 6,7,8,9,10,11,12
81 0 0 0 0 0,1,2,3,4,5
77 47 16 0 1 erry == 0
80 0 0 0 0 12
81 0 0 0 0 6,7,8,9,10,11
77 47 16 0 1 y == 0.0F
80 0 0 0 0 1,2,3,7,8,9,4,5,10,11
81 0 0 0 0 0,6
77 47 16 0 1 errx < 0
80 0 0 0 0 2,3,8,9,4,5,10,11
81 0 0 0 0 1,7
77 47 16 0 1 xexp == 1
80 0 0 0 0 5,11
81 0 0 0 0 2,3,8,9,4,10
77 47 16 0 1 x == 0.5F
80 0 0 0 0 3,9,4,10
81 0 0 0 0 2,8
77 47 16 0 1 erry == 1
80 0 0 0 0 4,10
81 0 0 0 0 3,9
77 47 16 0 1 x == - 0.5F
13 48 17 1 2 ( 1.0F )
3 48 17 0 1
78 0 0 13 0 1,2
79 0 0 13 0 0
71 49 17 0 1 0 <= errx || 0 < erry
75 49 17 15 1 T || _
75 49 17 14 1 F || T
76 49 17 13 1 F || F
80 0 0 13 0 2
81 0 0 13 0 0,1
77 49 17 0 1 0 <= errx
80 0 0 13 0 1
81 0 0 13 0 0
77 49 17 0 1 0 < erry
20 51 17 3 2 errx == 2
13 52 18 2 3 ( x )
3 52 18 0 2
21 53 18 4 2 erry == 2
13 54 19 3 3 ( y )
3 54 19 0 2
21 55 19 5 2 errx == 1
20 56 19 6 3 ! ( ( * _FPmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) )
25 57 19 7 4 ( ( * _FPmsw ( & ( y ) ) ) & ( ( unsigned short ) 0x8000 ) )
13 57 20 4 4 ( ( ( * _FPmsw ( & ( y ) ) ) & ( ( unsigned short ) 0x8000 ) ) ? 0.0F : _FInf . _Float )
3 57 20 0 3
21 58 20 8 3 ! ( ( * _FPmsw ( & ( y ) ) ) & ( ( unsigned short ) 0x8000 ) )
25 60 20 9 4 erry == 0 && _FDint ( & yi , - 1 ) < 0
13 61 21 5 4 ( erry == 0 && _FDint ( & yi , - 1 ) < 0 ? - _FInf . _Float : _FInf . _Float )
3 61 21 0 3
40 62 21 0 3
25 64 21 10 4 erry == 0 && _FDint ( & yi , - 1 ) < 0
13 64 22 6 4 ( erry == 0 && _FDint ( & yi , - 1 ) < 0 ? - _FZero : 0.0F )
3 64 22 0 3
3 64 22 0 2
21 65 22 11 2 erry == 1
20 66 22 12 3 ! ( ( * _FPmsw ( & ( y ) ) ) & ( ( unsigned short ) 0x8000 ) )
25 67 22 13 4 xexp <= 0
13 67 23 7 4 ( xexp <= 0 ? 0.0F : _FInf . _Float )
3 67 23 0 3
40 68 23 0 3
25 69 23 14 4 xexp <= 0
13 69 24 8 4 ( xexp <= 0 ? _FInf . _Float : 0.0F )
3 69 24 0 3
3 69 24 0 2
21 71 24 15 2 ! ( ( * _FPmsw ( & ( y ) ) ) & ( ( unsigned short ) 0x8000 ) )
25 73 24 16 3 erry == 0 && _FDint ( & yi , - 1 ) < 0 && ( ( * _FPmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) )
13 73 25 9 3 ( erry == 0 && _FDint ( & yi , - 1 ) < 0 && ( ( * _FPmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) ) ? - _FZero : 0.0F )
3 73 25 0 2
40 74 25 0 2
25 78 26 17 3 erry == 0 && _FDint ( & yi , - 1 ) < 0 && ( ( * _FPmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) )
13 78 27 10 3 ( erry == 0 && _FDint ( & yi , - 1 ) < 0 && ( ( * _FPmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) ) ? - _FInf . _Float : _FInf . _Float )
3 79 27 0 2
3 80 27 0 1
78 0 0 16 0 2
79 0 0 16 0 0,1
71 81 27 0 1 ( ( * _FPmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) ) && erry < 0
75 81 27 18 1 (T) && T
76 81 27 17 1 (T) && F
76 81 27 16 1 (F) && _
80 0 0 16 0 1,2
81 0 0 16 0 0
77 81 27 0 1 ( * _FPmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 )
80 0 0 16 0 2
81 0 0 16 0 1
77 81 27 0 1 erry < 0
13 84 29 11 2 ( _FNan . _Float )
3 85 29 0 1
20 87 29 18 1 0.0F < x
3 88 30 0 1
40 89 30 0 1
3 93 32 0 1
20 99 33 19 1 x < rthalf
3 103 35 0 1
20 119 45 20 1 z < - maxexp
3 120 46 0 1
78 0 0 19 0 4
79 0 0 19 0 0,1,2,3
71 122 46 0 1 - 12.0F <= z && z <= 12.0F && - 40.0F < y && y < 40.0F
75 122 46 23 1 T && T && T && T
76 122 46 22 1 T && T && T && F
76 122 46 21 1 T && T && F && _
76 122 46 20 1 T && F && _ && _
76 122 46 19 1 F && _ && _ && _
80 0 0 19 0 1,2,3,4
81 0 0 19 0 0
77 122 46 0 1 - 12.0F <= z
80 0 0 19 0 2,3,4
81 0 0 19 0 1
77 122 46 0 1 z <= 12.0F
80 0 0 19 0 3,4
81 0 0 19 0 2
77 122 46 0 1 - 40.0F < y
80 0 0 19 0 4
81 0 0 19 0 3
77 122 46 0 1 y < 40.0F
25 124 47 21 2 z < 0.0F
3 137 51 0 1
21 138 51 22 1 maxexp < z
3 139 52 0 1
40 140 52 0 1
20 151 58 23 2 xpx [ 0 ] == 0.0F
3 152 59 0 2
40 153 59 0 2
78 0 0 24 0 2
79 0 0 24 0 0,1
73 157 63 0 3 i < 4 && xpx [ i ] != 0.0F
75 157 63 26 3 T && T
76 157 63 25 3 T && F
76 157 63 24 3 F && _
80 0 0 24 0 1,2
81 0 0 24 0 0
77 157 63 0 3 i < 4
80 0 0 24 0 2
81 0 0 24 0 1
77 157 63 0 3 xpx [ i ] != 0.0F
3 164 67 0 3
3 165 67 0 2
20 172 71 24 2 xpx [ 1 ] != 0.0F
3 179 75 0 2
78 0 0 27 0 2
79 0 0 27 0 0,1
70 182 76 0 2 xpz [ 0 ] != 0.0F && xpz [ 1 ] != 0.0F
75 182 76 29 2 T && T
76 182 76 28 2 T && F
76 182 76 27 2 F && _
80 0 0 27 0 1,2
81 0 0 27 0 0
77 182 76 0 2 xpz [ 0 ] != 0.0F
80 0 0 27 0 2
81 0 0 27 0 1
77 182 76 0 2 xpz [ 1 ] != 0.0F
3 183 77 0 2
3 191 84 0 1
20 193 85 25 1 errx < 0
20 195 85 26 2 pex != 0
3 199 87 0 2
3 201 88 0 1
42 202 88 0 1 errx
14 204 88 12 1 0
12 207 91 13 2
14 209 91 14 1 1
20 210 91 27 2 z < 0.0F
3 214 93 0 2
40 215 93 0 2
3 219 95 0 2
3 220 95 0 1
20 222 95 28 1 neg
3 223 96 0 1
13 224 97 15 1 ( z )
2 225 97 0 0 _FPow
0 227 0 1 0 powf
90 0 0 0 0 ( float x , float y )
13 229 1 16 1 ( _FPow ( x , y , 0 ) )
2 230 1 0 0 powf
%230,2,17,29,30,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\powf_uv__uv_extreme.c
7 1561811956 0 0
0 291 0 0 0 powf_uv__uv_extreme_nan
90 0 0 0 0 ( )
23 303 8 0 1 ind < 5
20 307 11 1 2 test_compare_float ( res , powf_uv__uv_extreme_nan_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1
3 312 13 0 2
40 312 13 0 2
3 314 14 0 2
3 315 14 0 1
78 0 0 0 0 2
79 0 0 0 0 0,1
70 317 14 0 1 errors == 0 && passes == 5
75 317 14 2 1 T && T
76 317 14 1 1 T && F
76 317 14 0 1 F && _
80 0 0 0 0 1,2
81 0 0 0 0 0
77 317 14 0 1 errors == 0
80 0 0 0 0 2
81 0 0 0 0 1
77 317 14 0 1 passes == 5
3 319 15 0 1
40 319 15 0 1
3 321 16 0 1
13 323 17 0 1 errors
2 324 17 0 0 powf_uv__uv_extreme_nan
0 340 0 1 0 powf_uv__uv_extreme_pos_infinity
90 0 0 0 0 ( )
23 352 8 2 1 ind < 5
20 356 11 3 2 test_compare_float ( res , powf_uv__uv_extreme_pos_infinity_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1
3 361 13 0 2
40 361 13 0 2
3 363 14 0 2
3 364 14 0 1
78 0 0 3 0 2
79 0 0 3 0 0,1
70 366 14 0 1 errors == 0 && passes == 5
75 366 14 5 1 T && T
76 366 14 4 1 T && F
76 366 14 3 1 F && _
80 0 0 3 0 1,2
81 0 0 3 0 0
77 366 14 0 1 errors == 0
80 0 0 3 0 2
81 0 0 3 0 1
77 366 14 0 1 passes == 5
3 368 15 0 1
40 368 15 0 1
3 370 16 0 1
13 372 17 1 1 errors
2 373 17 0 0 powf_uv__uv_extreme_pos_infinity
0 389 0 2 0 powf_uv__uv_extreme_neg_infinity
90 0 0 0 0 ( )
23 401 8 4 1 ind < 5
20 405 11 5 2 test_compare_float ( res , powf_uv__uv_extreme_neg_infinity_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1
3 410 13 0 2
40 410 13 0 2
3 412 14 0 2
3 413 14 0 1
78 0 0 6 0 2
79 0 0 6 0 0,1
70 415 14 0 1 errors == 0 && passes == 5
75 415 14 8 1 T && T
76 415 14 7 1 T && F
76 415 14 6 1 F && _
80 0 0 6 0 1,2
81 0 0 6 0 0
77 415 14 0 1 errors == 0
80 0 0 6 0 2
81 0 0 6 0 1
77 415 14 0 1 passes == 5
3 417 15 0 1
40 417 15 0 1
3 419 16 0 1
13 421 17 2 1 errors
2 422 17 0 0 powf_uv__uv_extreme_neg_infinity
0 439 0 3 0 powf_uv__uv_extreme_infinity
90 0 0 0 0 ( )
23 451 8 6 1 ind < 6
20 455 11 7 2 test_compare_float ( res , powf_uv__uv_extreme_infinity_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1
3 460 13 0 2
40 460 13 0 2
3 462 14 0 2
3 463 14 0 1
78 0 0 9 0 2
79 0 0 9 0 0,1
70 465 14 0 1 errors == 0 && passes == 6
75 465 14 11 1 T && T
76 465 14 10 1 T && F
76 465 14 9 1 F && _
80 0 0 9 0 1,2
81 0 0 9 0 0
77 465 14 0 1 errors == 0
80 0 0 9 0 2
81 0 0 9 0 1
77 465 14 0 1 passes == 6
3 467 15 0 1
40 467 15 0 1
3 469 16 0 1
13 471 17 3 1 errors
2 472 17 0 0 powf_uv__uv_extreme_infinity
0 492 0 4 0 powf_uv__uv_extreme_extreme_values
90 0 0 0 0 ( )
23 504 8 8 1 ind < 9
20 508 11 9 2 test_compare_float ( res , powf_uv__uv_extreme_extreme_values_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1
3 513 13 0 2
40 513 13 0 2
3 515 14 0 2
3 516 14 0 1
78 0 0 12 0 2
79 0 0 12 0 0,1
70 518 14 0 1 errors == 0 && passes == 9
75 518 14 14 1 T && T
76 518 14 13 1 T && F
76 518 14 12 1 F && _
80 0 0 12 0 1,2
81 0 0 12 0 0
77 518 14 0 1 errors == 0
80 0 0 12 0 2
81 0 0 12 0 1
77 518 14 0 1 passes == 9
3 520 15 0 1
40 520 15 0 1
3 522 16 0 1
13 524 17 4 1 errors
2 525 17 0 0 powf_uv__uv_extreme_extreme_values
0 636 0 5 0 powf_uv__uv_extreme_powf_denom_pos_pos
90 0 0 0 0 ( )
23 648 8 10 1 ind < 100
20 652 11 11 2 test_compare_float ( res , powf_uv__uv_extreme_powf_denom_pos_pos_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1
3 657 13 0 2
40 657 13 0 2
3 659 14 0 2
3 660 14 0 1
78 0 0 15 0 2
79 0 0 15 0 0,1
70 662 14 0 1 errors == 0 && passes == 100
75 662 14 17 1 T && T
76 662 14 16 1 T && F
76 662 14 15 1 F && _
80 0 0 15 0 1,2
81 0 0 15 0 0
77 662 14 0 1 errors == 0
80 0 0 15 0 2
81 0 0 15 0 1
77 662 14 0 1 passes == 100
3 664 15 0 1
40 664 15 0 1
3 666 16 0 1
13 668 17 5 1 errors
2 669 17 0 0 powf_uv__uv_extreme_powf_denom_pos_pos
0 790 0 6 0 powf_uv__uv_extreme_powf_denom_pos_neg
90 0 0 0 0 ( )
23 802 8 12 1 ind < 110
20 806 11 13 2 test_compare_float ( res , powf_uv__uv_extreme_powf_denom_pos_neg_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1
3 811 13 0 2
40 811 13 0 2
3 813 14 0 2
3 814 14 0 1
78 0 0 18 0 2
79 0 0 18 0 0,1
70 816 14 0 1 errors == 0 && passes == 110
75 816 14 20 1 T && T
76 816 14 19 1 T && F
76 816 14 18 1 F && _
80 0 0 18 0 1,2
81 0 0 18 0 0
77 816 14 0 1 errors == 0
80 0 0 18 0 2
81 0 0 18 0 1
77 816 14 0 1 passes == 110
3 818 15 0 1
40 818 15 0 1
3 820 16 0 1
13 822 17 6 1 errors
2 823 17 0 0 powf_uv__uv_extreme_powf_denom_pos_neg
0 944 0 7 0 powf_uv__uv_extreme_powf_denom_neg_pos
90 0 0 0 0 ( )
23 956 8 14 1 ind < 110
20 960 11 15 2 test_compare_float ( res , powf_uv__uv_extreme_powf_denom_neg_pos_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1
3 965 13 0 2
40 965 13 0 2
3 967 14 0 2
3 968 14 0 1
78 0 0 21 0 2
79 0 0 21 0 0,1
70 970 14 0 1 errors == 0 && passes == 110
75 970 14 23 1 T && T
76 970 14 22 1 T && F
76 970 14 21 1 F && _
80 0 0 21 0 1,2
81 0 0 21 0 0
77 970 14 0 1 errors == 0
80 0 0 21 0 2
81 0 0 21 0 1
77 970 14 0 1 passes == 110
3 972 15 0 1
40 972 15 0 1
3 974 16 0 1
13 976 17 7 1 errors
2 977 17 0 0 powf_uv__uv_extreme_powf_denom_neg_pos
0 1109 0 8 0 powf_uv__uv_extreme_powf_denom_neg_neg
90 0 0 0 0 ( )
23 1121 8 16 1 ind < 121
20 1125 11 17 2 test_compare_float ( res , powf_uv__uv_extreme_powf_denom_neg_neg_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1
3 1130 13 0 2
40 1130 13 0 2
3 1132 14 0 2
3 1133 14 0 1
78 0 0 24 0 2
79 0 0 24 0 0,1
70 1135 14 0 1 errors == 0 && passes == 121
75 1135 14 26 1 T && T
76 1135 14 25 1 T && F
76 1135 14 24 1 F && _
80 0 0 24 0 1,2
81 0 0 24 0 0
77 1135 14 0 1 errors == 0
80 0 0 24 0 2
81 0 0 24 0 1
77 1135 14 0 1 passes == 121
3 1137 15 0 1
40 1137 15 0 1
3 1139 16 0 1
13 1141 17 8 1 errors
2 1142 17 0 0 powf_uv__uv_extreme_powf_denom_neg_neg
0 1154 0 9 0 powf_uv__uv_extreme_zero
90 0 0 0 0 ( )
23 1166 8 18 1 ind < 1
20 1170 11 19 2 test_compare_float ( res , powf_uv__uv_extreme_zero_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1
3 1175 13 0 2
40 1175 13 0 2
3 1177 14 0 2
3 1178 14 0 1
78 0 0 27 0 2
79 0 0 27 0 0,1
70 1180 14 0 1 errors == 0 && passes == 1
75 1180 14 29 1 T && T
76 1180 14 28 1 T && F
76 1180 14 27 1 F && _
80 0 0 27 0 1,2
81 0 0 27 0 0
77 1180 14 0 1 errors == 0
80 0 0 27 0 2
81 0 0 27 0 1
77 1180 14 0 1 passes == 1
3 1182 15 0 1
40 1182 15 0 1
3 1184 16 0 1
13 1186 17 9 1 errors
2 1187 17 0 0 powf_uv__uv_extreme_zero
0 1248 0 10 0 powf_uv__uv_extreme_random_small_squares
90 0 0 0 0 ( )
23 1260 8 20 1 ind < 50
20 1264 11 21 2 test_compare_float ( res , powf_uv__uv_extreme_random_small_squares_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1
3 1269 13 0 2
40 1269 13 0 2
3 1271 14 0 2
3 1272 14 0 1
78 0 0 30 0 2
79 0 0 30 0 0,1
70 1274 14 0 1 errors == 0 && passes == 50
75 1274 14 32 1 T && T
76 1274 14 31 1 T && F
76 1274 14 30 1 F && _
80 0 0 30 0 1,2
81 0 0 30 0 0
77 1274 14 0 1 errors == 0
80 0 0 30 0 2
81 0 0 30 0 1
77 1274 14 0 1 passes == 50
3 1276 15 0 1
40 1276 15 0 1
3 1278 16 0 1
13 1280 17 10 1 errors
2 1281 17 0 0 powf_uv__uv_extreme_random_small_squares
0 1342 0 11 0 powf_uv__uv_extreme_random_small_neg_sqr
90 0 0 0 0 ( )
23 1354 8 22 1 ind < 50
20 1358 11 23 2 test_compare_float ( res , powf_uv__uv_extreme_random_small_neg_sqr_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1
3 1363 13 0 2
40 1363 13 0 2
3 1365 14 0 2
3 1366 14 0 1
78 0 0 33 0 2
79 0 0 33 0 0,1
70 1368 14 0 1 errors == 0 && passes == 50
75 1368 14 35 1 T && T
76 1368 14 34 1 T && F
76 1368 14 33 1 F && _
80 0 0 33 0 1,2
81 0 0 33 0 0
77 1368 14 0 1 errors == 0
80 0 0 33 0 2
81 0 0 33 0 1
77 1368 14 0 1 passes == 50
3 1370 15 0 1
40 1370 15 0 1
3 1372 16 0 1
13 1374 17 11 1 errors
2 1375 17 0 0 powf_uv__uv_extreme_random_small_neg_sqr
0 1436 0 12 0 powf_uv__uv_extreme_random_negative
90 0 0 0 0 ( )
23 1448 8 24 1 ind < 50
20 1452 11 25 2 test_compare_float ( res , powf_uv__uv_extreme_random_negative_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1
3 1457 13 0 2
40 1457 13 0 2
3 1459 14 0 2
3 1460 14 0 1
78 0 0 36 0 2
79 0 0 36 0 0,1
70 1462 14 0 1 errors == 0 && passes == 50
75 1462 14 38 1 T && T
76 1462 14 37 1 T && F
76 1462 14 36 1 F && _
80 0 0 36 0 1,2
81 0 0 36 0 0
77 1462 14 0 1 errors == 0
80 0 0 36 0 2
81 0 0 36 0 1
77 1462 14 0 1 passes == 50
3 1464 15 0 1
40 1464 15 0 1
3 1466 16 0 1
13 1468 17 12 1 errors
2 1469 17 0 0 powf_uv__uv_extreme_random_negative
0 1529 0 13 0 powf_uv__uv_extreme_big_powers
90 0 0 0 0 ( )
23 1541 8 26 1 ind < 49
20 1545 11 27 2 test_compare_float ( res , powf_uv__uv_extreme_big_powers_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1
3 1550 13 0 2
40 1550 13 0 2
3 1552 14 0 2
3 1553 14 0 1
78 0 0 39 0 2
79 0 0 39 0 0,1
70 1555 14 0 1 errors == 0 && passes == 49
75 1555 14 41 1 T && T
76 1555 14 40 1 T && F
76 1555 14 39 1 F && _
80 0 0 39 0 1,2
81 0 0 39 0 0
77 1555 14 0 1 errors == 0
80 0 0 39 0 2
81 0 0 39 0 1
77 1555 14 0 1 passes == 49
3 1557 15 0 1
40 1557 15 0 1
3 1559 16 0 1
13 1561 17 13 1 errors
2 1562 17 0 0 powf_uv__uv_extreme_big_powers
0 1622 0 14 0 powf_uv__uv_extreme_overflowing_powers
90 0 0 0 0 ( )
23 1634 8 28 1 ind < 49
20 1638 11 29 2 test_compare_float ( res , powf_uv__uv_extreme_overflowing_powers_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1
3 1643 13 0 2
40 1643 13 0 2
3 1645 14 0 2
3 1646 14 0 1
78 0 0 42 0 2
79 0 0 42 0 0,1
70 1648 14 0 1 errors == 0 && passes == 49
75 1648 14 44 1 T && T
76 1648 14 43 1 T && F
76 1648 14 42 1 F && _
80 0 0 42 0 1,2
81 0 0 42 0 0
77 1648 14 0 1 errors == 0
80 0 0 42 0 2
81 0 0 42 0 1
77 1648 14 0 1 passes == 49
3 1650 15 0 1
40 1650 15 0 1
3 1652 16 0 1
13 1654 17 14 1 errors
2 1655 17 0 0 powf_uv__uv_extreme_overflowing_powers
0 1730 0 15 0 powf_uv__uv_extreme_overflowing_powers_pos
90 0 0 0 0 ( )
23 1742 8 30 1 ind < 64
20 1746 11 31 2 test_compare_float ( res , powf_uv__uv_extreme_overflowing_powers_pos_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1
3 1751 13 0 2
40 1751 13 0 2
3 1753 14 0 2
3 1754 14 0 1
78 0 0 45 0 2
79 0 0 45 0 0,1
70 1756 14 0 1 errors == 0 && passes == 64
75 1756 14 47 1 T && T
76 1756 14 46 1 T && F
76 1756 14 45 1 F && _
80 0 0 45 0 1,2
81 0 0 45 0 0
77 1756 14 0 1 errors == 0
80 0 0 45 0 2
81 0 0 45 0 1
77 1756 14 0 1 passes == 64
3 1758 15 0 1
40 1758 15 0 1
3 1760 16 0 1
13 1762 17 15 1 errors
2 1763 17 0 0 powf_uv__uv_extreme_overflowing_powers_pos
0 1838 0 16 0 powf_uv__uv_extreme_overflowing_powers_neg
90 0 0 0 0 ( )
23 1850 8 32 1 ind < 64
20 1854 11 33 2 test_compare_float ( res , powf_uv__uv_extreme_overflowing_powers_neg_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1
3 1859 13 0 2
40 1859 13 0 2
3 1861 14 0 2
3 1862 14 0 1
78 0 0 48 0 2
79 0 0 48 0 0,1
70 1864 14 0 1 errors == 0 && passes == 64
75 1864 14 50 1 T && T
76 1864 14 49 1 T && F
76 1864 14 48 1 F && _
80 0 0 48 0 1,2
81 0 0 48 0 0
77 1864 14 0 1 errors == 0
80 0 0 48 0 2
81 0 0 48 0 1
77 1864 14 0 1 passes == 64
3 1866 15 0 1
40 1866 15 0 1
3 1868 16 0 1
13 1870 17 16 1 errors
2 1871 17 0 0 powf_uv__uv_extreme_overflowing_powers_neg
0 1946 0 17 0 powf_uv__uv_extreme_undeflowing_powers
90 0 0 0 0 ( )
23 1958 8 34 1 ind < 64
20 1962 11 35 2 test_compare_float ( res , powf_uv__uv_extreme_undeflowing_powers_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1
3 1967 13 0 2
40 1967 13 0 2
3 1969 14 0 2
3 1970 14 0 1
78 0 0 51 0 2
79 0 0 51 0 0,1
70 1972 14 0 1 errors == 0 && passes == 64
75 1972 14 53 1 T && T
76 1972 14 52 1 T && F
76 1972 14 51 1 F && _
80 0 0 51 0 1,2
81 0 0 51 0 0
77 1972 14 0 1 errors == 0
80 0 0 51 0 2
81 0 0 51 0 1
77 1972 14 0 1 passes == 64
3 1974 15 0 1
40 1974 15 0 1
3 1976 16 0 1
13 1978 17 17 1 errors
2 1979 17 0 0 powf_uv__uv_extreme_undeflowing_powers
0 2054 0 18 0 powf_uv__uv_extreme_undeflowing_powers2
90 0 0 0 0 ( )
23 2066 8 36 1 ind < 64
20 2070 11 37 2 test_compare_float ( res , powf_uv__uv_extreme_undeflowing_powers2_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1
3 2075 13 0 2
40 2075 13 0 2
3 2077 14 0 2
3 2078 14 0 1
78 0 0 54 0 2
79 0 0 54 0 0,1
70 2080 14 0 1 errors == 0 && passes == 64
75 2080 14 56 1 T && T
76 2080 14 55 1 T && F
76 2080 14 54 1 F && _
80 0 0 54 0 1,2
81 0 0 54 0 0
77 2080 14 0 1 errors == 0
80 0 0 54 0 2
81 0 0 54 0 1
77 2080 14 0 1 passes == 64
3 2082 15 0 1
40 2082 15 0 1
3 2084 16 0 1
13 2086 17 18 1 errors
2 2087 17 0 0 powf_uv__uv_extreme_undeflowing_powers2
0 2162 0 19 0 powf_uv__uv_extreme_undeflowing_powers3
90 0 0 0 0 ( )
23 2174 8 38 1 ind < 64
20 2178 11 39 2 test_compare_float ( res , powf_uv__uv_extreme_undeflowing_powers3_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1
3 2183 13 0 2
40 2183 13 0 2
3 2185 14 0 2
3 2186 14 0 1
78 0 0 57 0 2
79 0 0 57 0 0,1
70 2188 14 0 1 errors == 0 && passes == 64
75 2188 14 59 1 T && T
76 2188 14 58 1 T && F
76 2188 14 57 1 F && _
80 0 0 57 0 1,2
81 0 0 57 0 0
77 2188 14 0 1 errors == 0
80 0 0 57 0 2
81 0 0 57 0 1
77 2188 14 0 1 passes == 64
3 2190 15 0 1
40 2190 15 0 1
3 2192 16 0 1
13 2194 17 19 1 errors
2 2195 17 0 0 powf_uv__uv_extreme_undeflowing_powers3
0 2270 0 20 0 powf_uv__uv_extreme_undeflowing_powers4
90 0 0 0 0 ( )
23 2282 8 40 1 ind < 64
20 2286 11 41 2 test_compare_float ( res , powf_uv__uv_extreme_undeflowing_powers4_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1
3 2291 13 0 2
40 2291 13 0 2
3 2293 14 0 2
3 2294 14 0 1
78 0 0 60 0 2
79 0 0 60 0 0,1
70 2296 14 0 1 errors == 0 && passes == 64
75 2296 14 62 1 T && T
76 2296 14 61 1 T && F
76 2296 14 60 1 F && _
80 0 0 60 0 1,2
81 0 0 60 0 0
77 2296 14 0 1 errors == 0
80 0 0 60 0 2
81 0 0 60 0 1
77 2296 14 0 1 passes == 64
3 2298 15 0 1
40 2298 15 0 1
3 2300 16 0 1
13 2302 17 20 1 errors
2 2303 17 0 0 powf_uv__uv_extreme_undeflowing_powers4
0 2339 0 21 0 powf_uv__uv_extreme_roots_of_minus_two
90 0 0 0 0 ( )
23 2351 8 42 1 ind < 25
20 2355 11 43 2 test_compare_float ( res , powf_uv__uv_extreme_roots_of_minus_two_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1
3 2360 13 0 2
40 2360 13 0 2
3 2362 14 0 2
3 2363 14 0 1
78 0 0 63 0 2
79 0 0 63 0 0,1
70 2365 14 0 1 errors == 0 && passes == 25
75 2365 14 65 1 T && T
76 2365 14 64 1 T && F
76 2365 14 63 1 F && _
80 0 0 63 0 1,2
81 0 0 63 0 0
77 2365 14 0 1 errors == 0
80 0 0 63 0 2
81 0 0 63 0 1
77 2365 14 0 1 passes == 25
3 2367 15 0 1
40 2367 15 0 1
3 2369 16 0 1
13 2371 17 21 1 errors
2 2372 17 0 0 powf_uv__uv_extreme_roots_of_minus_two
0 2408 0 22 0 powf_uv__uv_extreme_roots_to_minus_ten
90 0 0 0 0 ( )
23 2420 8 44 1 ind < 25
20 2424 11 45 2 test_compare_float ( res , powf_uv__uv_extreme_roots_to_minus_ten_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1
3 2429 13 0 2
40 2429 13 0 2
3 2431 14 0 2
3 2432 14 0 1
78 0 0 66 0 2
79 0 0 66 0 0,1
70 2434 14 0 1 errors == 0 && passes == 25
75 2434 14 68 1 T && T
76 2434 14 67 1 T && F
76 2434 14 66 1 F && _
80 0 0 66 0 1,2
81 0 0 66 0 0
77 2434 14 0 1 errors == 0
80 0 0 66 0 2
81 0 0 66 0 1
77 2434 14 0 1 passes == 25
3 2436 15 0 1
40 2436 15 0 1
3 2438 16 0 1
13 2440 17 22 1 errors
2 2441 17 0 0 powf_uv__uv_extreme_roots_to_minus_ten
0 2472 0 23 0 powf_uv__uv_extreme_big_powers2
90 0 0 0 0 ( )
23 2484 8 46 1 ind < 20
20 2488 11 47 2 test_compare_float ( res , powf_uv__uv_extreme_big_powers2_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1
3 2493 13 0 2
40 2493 13 0 2
3 2495 14 0 2
3 2496 14 0 1
78 0 0 69 0 2
79 0 0 69 0 0,1
70 2498 14 0 1 errors == 0 && passes == 20
75 2498 14 71 1 T && T
76 2498 14 70 1 T && F
76 2498 14 69 1 F && _
80 0 0 69 0 1,2
81 0 0 69 0 0
77 2498 14 0 1 errors == 0
80 0 0 69 0 2
81 0 0 69 0 1
77 2498 14 0 1 passes == 20
3 2500 15 0 1
40 2500 15 0 1
3 2502 16 0 1
13 2504 17 23 1 errors
2 2505 17 0 0 powf_uv__uv_extreme_big_powers2
0 2534 0 24 0 powf_uv__uv_extreme_coverage_dw
90 0 0 0 0 ( )
23 2546 8 48 1 ind < 18
20 2550 11 49 2 test_compare_float ( res , powf_uv__uv_extreme_coverage_dw_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1
3 2555 13 0 2
40 2555 13 0 2
3 2557 14 0 2
3 2558 14 0 1
78 0 0 72 0 2
79 0 0 72 0 0,1
70 2560 14 0 1 errors == 0 && passes == 18
75 2560 14 74 1 T && T
76 2560 14 73 1 T && F
76 2560 14 72 1 F && _
80 0 0 72 0 1,2
81 0 0 72 0 0
77 2560 14 0 1 errors == 0
80 0 0 72 0 2
81 0 0 72 0 1
77 2560 14 0 1 passes == 18
3 2562 15 0 1
40 2562 15 0 1
3 2564 16 0 1
13 2566 17 24 1 errors
2 2567 17 0 0 powf_uv__uv_extreme_coverage_dw
0 2593 0 25 0 powf_uv__uv_extreme_coverage_values
90 0 0 0 0 ( )
23 2605 8 50 1 ind < 15
20 2609 11 51 2 test_compare_float ( res , powf_uv__uv_extreme_coverage_values_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1
3 2614 13 0 2
40 2614 13 0 2
3 2616 14 0 2
3 2617 14 0 1
78 0 0 75 0 2
79 0 0 75 0 0,1
70 2619 14 0 1 errors == 0 && passes == 15
75 2619 14 77 1 T && T
76 2619 14 76 1 T && F
76 2619 14 75 1 F && _
80 0 0 75 0 1,2
81 0 0 75 0 0
77 2619 14 0 1 errors == 0
80 0 0 75 0 2
81 0 0 75 0 1
77 2619 14 0 1 passes == 15
3 2621 15 0 1
40 2621 15 0 1
3 2623 16 0 1
13 2625 17 25 1 errors
2 2626 17 0 0 powf_uv__uv_extreme_coverage_values
0 2645 0 26 0 powf_uv__uv_extreme_coverage_dw8
90 0 0 0 0 ( )
23 2657 8 52 1 ind < 8
20 2661 11 53 2 test_compare_float ( res , powf_uv__uv_extreme_coverage_dw_io_table8 [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_extreme , & max_dif_above_powf_uv__uv_extreme ) != 1
3 2666 13 0 2
40 2666 13 0 2
3 2668 14 0 2
3 2669 14 0 1
78 0 0 78 0 2
79 0 0 78 0 0,1
70 2671 14 0 1 errors == 0 && passes == 8
75 2671 14 80 1 T && T
76 2671 14 79 1 T && F
76 2671 14 78 1 F && _
80 0 0 78 0 1,2
81 0 0 78 0 0
77 2671 14 0 1 errors == 0
80 0 0 78 0 2
81 0 0 78 0 1
77 2671 14 0 1 passes == 8
3 2673 15 0 1
40 2673 15 0 1
3 2675 16 0 1
13 2677 17 26 1 errors
2 2678 17 0 0 powf_uv__uv_extreme_coverage_dw8
0 2683 0 27 0 powf_uv__uv_extreme_main_test
90 0 0 0 0 ( )
20 2714 29 54 1 errors == 0
3 2716 30 0 1
40 2716 30 0 1
3 2718 31 0 1
13 2772 33 27 1 errors
2 2773 33 0 0 powf_uv__uv_extreme_main_test
%2773,28,28,55,81,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\powf_uv__uv_normal.c
7 1561811957 0 0
0 178 0 0 0 powf_uv__uv_normal_normal_values
90 0 0 0 0 ( )
23 190 8 0 1 ind < 3
20 194 11 1 2 test_compare_float ( res , powf_uv__uv_normal_normal_values_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_normal , & max_dif_above_powf_uv__uv_normal ) != 1
3 199 13 0 2
40 199 13 0 2
3 201 14 0 2
3 202 14 0 1
78 0 0 0 0 2
79 0 0 0 0 0,1
70 204 14 0 1 errors == 0 && passes == 3
75 204 14 2 1 T && T
76 204 14 1 1 T && F
76 204 14 0 1 F && _
80 0 0 0 0 1,2
81 0 0 0 0 0
77 204 14 0 1 errors == 0
80 0 0 0 0 2
81 0 0 0 0 1
77 204 14 0 1 passes == 3
3 206 15 0 1
40 206 15 0 1
3 208 16 0 1
13 210 17 0 1 errors
2 211 17 0 0 powf_uv__uv_normal_normal_values
0 271 0 1 0 powf_uv__uv_normal_powf_normal_range
90 0 0 0 0 ( )
23 283 8 2 1 ind < 49
20 287 11 3 2 test_compare_float ( res , powf_uv__uv_normal_powf_normal_range_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_normal , & max_dif_above_powf_uv__uv_normal ) != 1
3 292 13 0 2
40 292 13 0 2
3 294 14 0 2
3 295 14 0 1
78 0 0 3 0 2
79 0 0 3 0 0,1
70 297 14 0 1 errors == 0 && passes == 49
75 297 14 5 1 T && T
76 297 14 4 1 T && F
76 297 14 3 1 F && _
80 0 0 3 0 1,2
81 0 0 3 0 0
77 297 14 0 1 errors == 0
80 0 0 3 0 2
81 0 0 3 0 1
77 297 14 0 1 passes == 49
3 299 15 0 1
40 299 15 0 1
3 301 16 0 1
13 303 17 1 1 errors
2 304 17 0 0 powf_uv__uv_normal_powf_normal_range
0 365 0 2 0 powf_uv__uv_normal_powf_normal_range_rnd
90 0 0 0 0 ( )
23 377 8 4 1 ind < 50
20 381 11 5 2 test_compare_float ( res , powf_uv__uv_normal_powf_normal_range_rnd_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_normal , & max_dif_above_powf_uv__uv_normal ) != 1
3 386 13 0 2
40 386 13 0 2
3 388 14 0 2
3 389 14 0 1
78 0 0 6 0 2
79 0 0 6 0 0,1
70 391 14 0 1 errors == 0 && passes == 50
75 391 14 8 1 T && T
76 391 14 7 1 T && F
76 391 14 6 1 F && _
80 0 0 6 0 1,2
81 0 0 6 0 0
77 391 14 0 1 errors == 0
80 0 0 6 0 2
81 0 0 6 0 1
77 391 14 0 1 passes == 50
3 393 15 0 1
40 393 15 0 1
3 395 16 0 1
13 397 17 2 1 errors
2 398 17 0 0 powf_uv__uv_normal_powf_normal_range_rnd
0 459 0 3 0 powf_uv__uv_normal_random_squares
90 0 0 0 0 ( )
23 471 8 6 1 ind < 50
20 475 11 7 2 test_compare_float ( res , powf_uv__uv_normal_random_squares_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_normal , & max_dif_above_powf_uv__uv_normal ) != 1
3 480 13 0 2
40 480 13 0 2
3 482 14 0 2
3 483 14 0 1
78 0 0 9 0 2
79 0 0 9 0 0,1
70 485 14 0 1 errors == 0 && passes == 50
75 485 14 11 1 T && T
76 485 14 10 1 T && F
76 485 14 9 1 F && _
80 0 0 9 0 1,2
81 0 0 9 0 0
77 485 14 0 1 errors == 0
80 0 0 9 0 2
81 0 0 9 0 1
77 485 14 0 1 passes == 50
3 487 15 0 1
40 487 15 0 1
3 489 16 0 1
13 491 17 3 1 errors
2 492 17 0 0 powf_uv__uv_normal_random_squares
0 553 0 4 0 powf_uv__uv_normal_negative_squares
90 0 0 0 0 ( )
23 565 8 8 1 ind < 50
20 569 11 9 2 test_compare_float ( res , powf_uv__uv_normal_negative_squares_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_normal , & max_dif_above_powf_uv__uv_normal ) != 1
3 574 13 0 2
40 574 13 0 2
3 576 14 0 2
3 577 14 0 1
78 0 0 12 0 2
79 0 0 12 0 0,1
70 579 14 0 1 errors == 0 && passes == 50
75 579 14 14 1 T && T
76 579 14 13 1 T && F
76 579 14 12 1 F && _
80 0 0 12 0 1,2
81 0 0 12 0 0
77 579 14 0 1 errors == 0
80 0 0 12 0 2
81 0 0 12 0 1
77 579 14 0 1 passes == 50
3 581 15 0 1
40 581 15 0 1
3 583 16 0 1
13 585 17 4 1 errors
2 586 17 0 0 powf_uv__uv_normal_negative_squares
0 661 0 5 0 powf_uv__uv_normal_negative_pow
90 0 0 0 0 ( )
23 673 8 10 1 ind < 64
20 677 11 11 2 test_compare_float ( res , powf_uv__uv_normal_negative_pow_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_normal , & max_dif_above_powf_uv__uv_normal ) != 1
3 682 13 0 2
40 682 13 0 2
3 684 14 0 2
3 685 14 0 1
78 0 0 15 0 2
79 0 0 15 0 0,1
70 687 14 0 1 errors == 0 && passes == 64
75 687 14 17 1 T && T
76 687 14 16 1 T && F
76 687 14 15 1 F && _
80 0 0 15 0 1,2
81 0 0 15 0 0
77 687 14 0 1 errors == 0
80 0 0 15 0 2
81 0 0 15 0 1
77 687 14 0 1 passes == 64
3 689 15 0 1
40 689 15 0 1
3 691 16 0 1
13 693 17 5 1 errors
2 694 17 0 0 powf_uv__uv_normal_negative_pow
0 755 0 6 0 powf_uv__uv_normal_random_squareroots
90 0 0 0 0 ( )
23 767 8 12 1 ind < 50
20 771 11 13 2 test_compare_float ( res , powf_uv__uv_normal_random_squareroots_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_normal , & max_dif_above_powf_uv__uv_normal ) != 1
3 776 13 0 2
40 776 13 0 2
3 778 14 0 2
3 779 14 0 1
78 0 0 18 0 2
79 0 0 18 0 0,1
70 781 14 0 1 errors == 0 && passes == 50
75 781 14 20 1 T && T
76 781 14 19 1 T && F
76 781 14 18 1 F && _
80 0 0 18 0 1,2
81 0 0 18 0 0
77 781 14 0 1 errors == 0
80 0 0 18 0 2
81 0 0 18 0 1
77 781 14 0 1 passes == 50
3 783 15 0 1
40 783 15 0 1
3 785 16 0 1
13 787 17 6 1 errors
2 788 17 0 0 powf_uv__uv_normal_random_squareroots
0 849 0 7 0 powf_uv__uv_normal_random_exponent
90 0 0 0 0 ( )
23 861 8 14 1 ind < 50
20 865 11 15 2 test_compare_float ( res , powf_uv__uv_normal_random_exponent_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_normal , & max_dif_above_powf_uv__uv_normal ) != 1
3 870 13 0 2
40 870 13 0 2
3 872 14 0 2
3 873 14 0 1
78 0 0 21 0 2
79 0 0 21 0 0,1
70 875 14 0 1 errors == 0 && passes == 50
75 875 14 23 1 T && T
76 875 14 22 1 T && F
76 875 14 21 1 F && _
80 0 0 21 0 1,2
81 0 0 21 0 0
77 875 14 0 1 errors == 0
80 0 0 21 0 2
81 0 0 21 0 1
77 875 14 0 1 passes == 50
3 877 15 0 1
40 877 15 0 1
3 879 16 0 1
13 881 17 7 1 errors
2 882 17 0 0 powf_uv__uv_normal_random_exponent
0 943 0 8 0 powf_uv__uv_normal_random_numbers
90 0 0 0 0 ( )
23 955 8 16 1 ind < 50
20 959 11 17 2 test_compare_float ( res , powf_uv__uv_normal_random_numbers_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_normal , & max_dif_above_powf_uv__uv_normal ) != 1
3 964 13 0 2
40 964 13 0 2
3 966 14 0 2
3 967 14 0 1
78 0 0 24 0 2
79 0 0 24 0 0,1
70 969 14 0 1 errors == 0 && passes == 50
75 969 14 26 1 T && T
76 969 14 25 1 T && F
76 969 14 24 1 F && _
80 0 0 24 0 1,2
81 0 0 24 0 0
77 969 14 0 1 errors == 0
80 0 0 24 0 2
81 0 0 24 0 1
77 969 14 0 1 passes == 50
3 971 15 0 1
40 971 15 0 1
3 973 16 0 1
13 975 17 8 1 errors
2 976 17 0 0 powf_uv__uv_normal_random_numbers
0 994 0 9 0 powf_uv__uv_normal_linear_squares
90 0 0 0 0 ( )
23 1006 8 18 1 ind < 7
20 1010 11 19 2 test_compare_float ( res , powf_uv__uv_normal_linear_squares_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_normal , & max_dif_above_powf_uv__uv_normal ) != 1
3 1015 13 0 2
40 1015 13 0 2
3 1017 14 0 2
3 1018 14 0 1
78 0 0 27 0 2
79 0 0 27 0 0,1
70 1020 14 0 1 errors == 0 && passes == 7
75 1020 14 29 1 T && T
76 1020 14 28 1 T && F
76 1020 14 27 1 F && _
80 0 0 27 0 1,2
81 0 0 27 0 0
77 1020 14 0 1 errors == 0
80 0 0 27 0 2
81 0 0 27 0 1
77 1020 14 0 1 passes == 7
3 1022 15 0 1
40 1022 15 0 1
3 1024 16 0 1
13 1026 17 9 1 errors
2 1027 17 0 0 powf_uv__uv_normal_linear_squares
0 1087 0 10 0 powf_uv__uv_normal_linear_powers
90 0 0 0 0 ( )
23 1099 8 20 1 ind < 49
20 1103 11 21 2 test_compare_float ( res , powf_uv__uv_normal_linear_powers_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_normal , & max_dif_above_powf_uv__uv_normal ) != 1
3 1108 13 0 2
40 1108 13 0 2
3 1110 14 0 2
3 1111 14 0 1
78 0 0 30 0 2
79 0 0 30 0 0,1
70 1113 14 0 1 errors == 0 && passes == 49
75 1113 14 32 1 T && T
76 1113 14 31 1 T && F
76 1113 14 30 1 F && _
80 0 0 30 0 1,2
81 0 0 30 0 0
77 1113 14 0 1 errors == 0
80 0 0 30 0 2
81 0 0 30 0 1
77 1113 14 0 1 passes == 49
3 1115 15 0 1
40 1115 15 0 1
3 1117 16 0 1
13 1119 17 10 1 errors
2 1120 17 0 0 powf_uv__uv_normal_linear_powers
0 1156 0 11 0 powf_uv__uv_normal_roots_of_two
90 0 0 0 0 ( )
23 1168 8 22 1 ind < 25
20 1172 11 23 2 test_compare_float ( res , powf_uv__uv_normal_roots_of_two_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_normal , & max_dif_above_powf_uv__uv_normal ) != 1
3 1177 13 0 2
40 1177 13 0 2
3 1179 14 0 2
3 1180 14 0 1
78 0 0 33 0 2
79 0 0 33 0 0,1
70 1182 14 0 1 errors == 0 && passes == 25
75 1182 14 35 1 T && T
76 1182 14 34 1 T && F
76 1182 14 33 1 F && _
80 0 0 33 0 1,2
81 0 0 33 0 0
77 1182 14 0 1 errors == 0
80 0 0 33 0 2
81 0 0 33 0 1
77 1182 14 0 1 passes == 25
3 1184 15 0 1
40 1184 15 0 1
3 1186 16 0 1
13 1188 17 11 1 errors
2 1189 17 0 0 powf_uv__uv_normal_roots_of_two
0 1224 0 12 0 powf_uv__uv_normal_roots_to_ten
90 0 0 0 0 ( )
23 1236 8 24 1 ind < 24
20 1240 11 25 2 test_compare_float ( res , powf_uv__uv_normal_roots_to_ten_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_normal , & max_dif_above_powf_uv__uv_normal ) != 1
3 1245 13 0 2
40 1245 13 0 2
3 1247 14 0 2
3 1248 14 0 1
78 0 0 36 0 2
79 0 0 36 0 0,1
70 1250 14 0 1 errors == 0 && passes == 24
75 1250 14 38 1 T && T
76 1250 14 37 1 T && F
76 1250 14 36 1 F && _
80 0 0 36 0 1,2
81 0 0 36 0 0
77 1250 14 0 1 errors == 0
80 0 0 36 0 2
81 0 0 36 0 1
77 1250 14 0 1 passes == 24
3 1252 15 0 1
40 1252 15 0 1
3 1254 16 0 1
13 1256 17 12 1 errors
2 1257 17 0 0 powf_uv__uv_normal_roots_to_ten
0 1289 0 13 0 powf_uv__uv_normal_two_powers
90 0 0 0 0 ( )
23 1301 8 26 1 ind < 21
20 1305 11 27 2 test_compare_float ( res , powf_uv__uv_normal_two_powers_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_normal , & max_dif_above_powf_uv__uv_normal ) != 1
3 1310 13 0 2
40 1310 13 0 2
3 1312 14 0 2
3 1313 14 0 1
78 0 0 39 0 2
79 0 0 39 0 0,1
70 1315 14 0 1 errors == 0 && passes == 21
75 1315 14 41 1 T && T
76 1315 14 40 1 T && F
76 1315 14 39 1 F && _
80 0 0 39 0 1,2
81 0 0 39 0 0
77 1315 14 0 1 errors == 0
80 0 0 39 0 2
81 0 0 39 0 1
77 1315 14 0 1 passes == 21
3 1317 15 0 1
40 1317 15 0 1
3 1319 16 0 1
13 1321 17 13 1 errors
2 1322 17 0 0 powf_uv__uv_normal_two_powers
0 1327 0 14 0 powf_uv__uv_normal_main_test
90 0 0 0 0 ( )
20 1345 16 28 1 errors == 0
3 1347 17 0 1
40 1347 17 0 1
3 1349 18 0 1
13 1403 20 14 1 errors
2 1404 20 0 0 powf_uv__uv_normal_main_test
%1404,15,15,29,42,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\powf_uv__uv_terms.c
7 1561811957 0 0
0 137 0 0 0 powf_uv__uv_terms_powf_deterministic
90 0 0 0 0 ( )
23 151 10 0 1 ind < 49
20 155 13 1 2 res != powf_uv__uv_terms_powf_deterministic_io_table [ ind ] . powf_out
78 0 0 0 0 2
79 0 0 0 0 0,1
70 157 13 0 3 ( powf ( x , y ) == powf ( x , y ) ) >= - 2147483648.0 && ( powf ( x , y ) == powf ( x , y ) ) <= 2147483647.0
75 157 13 2 3 T && T
76 157 13 1 3 T && F
76 157 13 0 3 F && _
80 0 0 0 0 1,2
81 0 0 0 0 0
77 157 13 0 3 ( powf ( x , y ) == powf ( x , y ) ) >= - 2147483648.0
80 0 0 0 0 2
81 0 0 0 0 1
77 157 13 0 3 ( powf ( x , y ) == powf ( x , y ) ) <= 2147483647.0
78 0 0 3 0 2
79 0 0 3 0 0,1
70 162 15 0 4 ( res1 != powf_uv__uv_terms_powf_deterministic_io_table [ ind ] . powf_out ) && ( res2 != powf_uv__uv_terms_powf_deterministic_io_table [ ind ] . powf_out )
75 162 15 5 4 (T) && (T)
76 162 15 4 4 (T) && (F)
76 162 15 3 4 (F) && (_)
80 0 0 3 0 1,2
81 0 0 3 0 0
77 162 15 0 4 res1 != powf_uv__uv_terms_powf_deterministic_io_table [ ind ] . powf_out
80 0 0 3 0 2
81 0 0 3 0 1
77 162 15 0 4 res2 != powf_uv__uv_terms_powf_deterministic_io_table [ ind ] . powf_out
3 167 17 0 4
40 167 17 0 4
3 169 18 0 4
3 170 18 0 3
40 170 18 0 3
3 172 19 0 3
3 173 19 0 2
40 173 19 0 2
3 175 20 0 2
3 176 20 0 1
78 0 0 6 0 2
79 0 0 6 0 0,1
70 178 20 0 1 errors == 0 && passes == 49
75 178 20 8 1 T && T
76 178 20 7 1 T && F
76 178 20 6 1 F && _
80 0 0 6 0 1,2
81 0 0 6 0 0
77 178 20 0 1 errors == 0
80 0 0 6 0 2
81 0 0 6 0 1
77 178 20 0 1 passes == 49
3 180 21 0 1
40 180 21 0 1
3 182 22 0 1
13 184 23 0 1 errors
2 185 23 0 0 powf_uv__uv_terms_powf_deterministic
0 246 0 1 0 powf_uv__uv_terms_powf_combine
90 0 0 0 0 ( )
23 258 8 2 1 ind < 49
20 262 11 3 2 test_compare_float ( res , powf_uv__uv_terms_powf_combine_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_terms , & max_dif_above_powf_uv__uv_terms ) != 1
3 267 13 0 2
40 267 13 0 2
3 269 14 0 2
3 270 14 0 1
78 0 0 9 0 2
79 0 0 9 0 0,1
70 272 14 0 1 errors == 0 && passes == 49
75 272 14 11 1 T && T
76 272 14 10 1 T && F
76 272 14 9 1 F && _
80 0 0 9 0 1,2
81 0 0 9 0 0
77 272 14 0 1 errors == 0
80 0 0 9 0 2
81 0 0 9 0 1
77 272 14 0 1 passes == 49
3 274 15 0 1
40 274 15 0 1
3 276 16 0 1
13 278 17 1 1 errors
2 279 17 0 0 powf_uv__uv_terms_powf_combine
0 301 0 2 0 powf_uv__uv_terms_sqrt_pow
90 0 0 0 0 ( )
23 312 7 4 1 ind < 10
20 315 9 5 2 test_compare_float ( res , powf_uv__uv_terms_sqrt_pow_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_terms , & max_dif_above_powf_uv__uv_terms ) != 1
3 320 11 0 2
40 320 11 0 2
3 322 12 0 2
3 323 12 0 1
78 0 0 12 0 2
79 0 0 12 0 0,1
70 325 12 0 1 errors == 0 && passes == 10
75 325 12 14 1 T && T
76 325 12 13 1 T && F
76 325 12 12 1 F && _
80 0 0 12 0 1,2
81 0 0 12 0 0
77 325 12 0 1 errors == 0
80 0 0 12 0 2
81 0 0 12 0 1
77 325 12 0 1 passes == 10
3 327 13 0 1
40 327 13 0 1
3 329 14 0 1
13 331 15 2 1 errors
2 332 15 0 0 powf_uv__uv_terms_sqrt_pow
0 354 0 3 0 powf_uv__uv_terms_pow_sqrt
90 0 0 0 0 ( )
23 365 7 6 1 ind < 10
20 368 9 7 2 test_compare_float ( res , powf_uv__uv_terms_pow_sqrt_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_terms , & max_dif_above_powf_uv__uv_terms ) != 1
3 373 11 0 2
40 373 11 0 2
3 375 12 0 2
3 376 12 0 1
78 0 0 15 0 2
79 0 0 15 0 0,1
70 378 12 0 1 errors == 0 && passes == 10
75 378 12 17 1 T && T
76 378 12 16 1 T && F
76 378 12 15 1 F && _
80 0 0 15 0 1,2
81 0 0 15 0 0
77 378 12 0 1 errors == 0
80 0 0 15 0 2
81 0 0 15 0 1
77 378 12 0 1 passes == 10
3 380 13 0 1
40 380 13 0 1
3 382 14 0 1
13 384 15 3 1 errors
2 385 15 0 0 powf_uv__uv_terms_pow_sqrt
0 390 0 4 0 powf_uv__uv_terms_main_test
90 0 0 0 0 ( )
20 398 6 8 1 errors == 0
3 400 7 0 1
40 400 7 0 1
3 402 8 0 1
13 456 10 4 1 errors
2 457 10 0 0 powf_uv__uv_terms_main_test
%457,5,5,9,18,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\powf_uv__uv_trivial.c
7 1561811958 0 0
0 115 0 0 0 powf_uv__uv_trivial_zero_one
90 0 0 0 0 ( )
23 127 8 0 1 ind < 2
20 131 11 1 2 test_compare_float ( res , powf_uv__uv_trivial_zero_one_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_trivial , & max_dif_above_powf_uv__uv_trivial ) != 1
3 136 13 0 2
40 136 13 0 2
3 138 14 0 2
3 139 14 0 1
78 0 0 0 0 2
79 0 0 0 0 0,1
70 141 14 0 1 errors == 0 && passes == 2
75 141 14 2 1 T && T
76 141 14 1 1 T && F
76 141 14 0 1 F && _
80 0 0 0 0 1,2
81 0 0 0 0 0
77 141 14 0 1 errors == 0
80 0 0 0 0 2
81 0 0 0 0 1
77 141 14 0 1 passes == 2
3 143 15 0 1
40 143 15 0 1
3 145 16 0 1
13 147 17 0 1 errors
2 148 17 0 0 powf_uv__uv_trivial_zero_one
0 180 0 1 0 powf_uv__uv_trivial_zero
90 0 0 0 0 ( )
23 192 8 2 1 ind < 20
20 196 11 3 2 test_compare_float ( res , powf_uv__uv_trivial_zero_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_trivial , & max_dif_above_powf_uv__uv_trivial ) != 1
3 201 13 0 2
40 201 13 0 2
3 203 14 0 2
3 204 14 0 1
78 0 0 3 0 2
79 0 0 3 0 0,1
70 206 14 0 1 errors == 0 && passes == 20
75 206 14 5 1 T && T
76 206 14 4 1 T && F
76 206 14 3 1 F && _
80 0 0 3 0 1,2
81 0 0 3 0 0
77 206 14 0 1 errors == 0
80 0 0 3 0 2
81 0 0 3 0 1
77 206 14 0 1 passes == 20
3 208 15 0 1
40 208 15 0 1
3 210 16 0 1
13 212 17 1 1 errors
2 213 17 0 0 powf_uv__uv_trivial_zero
0 226 0 2 0 powf_uv__uv_trivial_negative_zero
90 0 0 0 0 ( )
23 238 8 4 1 ind < 2
20 242 11 5 2 test_compare_float ( res , powf_uv__uv_trivial_negative_zero_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_trivial , & max_dif_above_powf_uv__uv_trivial ) != 1
3 247 13 0 2
40 247 13 0 2
3 249 14 0 2
3 250 14 0 1
78 0 0 6 0 2
79 0 0 6 0 0,1
70 252 14 0 1 errors == 0 && passes == 2
75 252 14 8 1 T && T
76 252 14 7 1 T && F
76 252 14 6 1 F && _
80 0 0 6 0 1,2
81 0 0 6 0 0
77 252 14 0 1 errors == 0
80 0 0 6 0 2
81 0 0 6 0 1
77 252 14 0 1 passes == 2
3 254 15 0 1
40 254 15 0 1
3 256 16 0 1
13 258 17 2 1 errors
2 259 17 0 0 powf_uv__uv_trivial_negative_zero
0 274 0 3 0 powf_uv__uv_trivial_four
90 0 0 0 0 ( )
23 286 8 6 1 ind < 4
20 290 11 7 2 test_compare_float ( res , powf_uv__uv_trivial_four_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_trivial , & max_dif_above_powf_uv__uv_trivial ) != 1
3 295 13 0 2
40 295 13 0 2
3 297 14 0 2
3 298 14 0 1
78 0 0 9 0 2
79 0 0 9 0 0,1
70 300 14 0 1 errors == 0 && passes == 4
75 300 14 11 1 T && T
76 300 14 10 1 T && F
76 300 14 9 1 F && _
80 0 0 9 0 1,2
81 0 0 9 0 0
77 300 14 0 1 errors == 0
80 0 0 9 0 2
81 0 0 9 0 1
77 300 14 0 1 passes == 4
3 302 15 0 1
40 302 15 0 1
3 304 16 0 1
13 306 17 3 1 errors
2 307 17 0 0 powf_uv__uv_trivial_four
0 321 0 4 0 powf_uv__uv_trivial_nine
90 0 0 0 0 ( )
23 333 8 8 1 ind < 3
20 337 11 9 2 test_compare_float ( res , powf_uv__uv_trivial_nine_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_trivial , & max_dif_above_powf_uv__uv_trivial ) != 1
3 342 13 0 2
40 342 13 0 2
3 344 14 0 2
3 345 14 0 1
78 0 0 12 0 2
79 0 0 12 0 0,1
70 347 14 0 1 errors == 0 && passes == 3
75 347 14 14 1 T && T
76 347 14 13 1 T && F
76 347 14 12 1 F && _
80 0 0 12 0 1,2
81 0 0 12 0 0
77 347 14 0 1 errors == 0
80 0 0 12 0 2
81 0 0 12 0 1
77 347 14 0 1 passes == 3
3 349 15 0 1
40 349 15 0 1
3 351 16 0 1
13 353 17 4 1 errors
2 354 17 0 0 powf_uv__uv_trivial_nine
0 366 0 5 0 powf_uv__uv_trivial_hundred
90 0 0 0 0 ( )
23 378 8 10 1 ind < 1
20 382 11 11 2 test_compare_float ( res , powf_uv__uv_trivial_hundred_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_trivial , & max_dif_above_powf_uv__uv_trivial ) != 1
3 387 13 0 2
40 387 13 0 2
3 389 14 0 2
3 390 14 0 1
78 0 0 15 0 2
79 0 0 15 0 0,1
70 392 14 0 1 errors == 0 && passes == 1
75 392 14 17 1 T && T
76 392 14 16 1 T && F
76 392 14 15 1 F && _
80 0 0 15 0 1,2
81 0 0 15 0 0
77 392 14 0 1 errors == 0
80 0 0 15 0 2
81 0 0 15 0 1
77 392 14 0 1 passes == 1
3 394 15 0 1
40 394 15 0 1
3 396 16 0 1
13 398 17 5 1 errors
2 399 17 0 0 powf_uv__uv_trivial_hundred
0 413 0 6 0 powf_uv__uv_trivial_special_values
90 0 0 0 0 ( )
23 425 8 12 1 ind < 3
20 429 11 13 2 test_compare_float ( res , powf_uv__uv_trivial_special_values_io_table [ ind ] . powf_out , 128 , 1.0E-5 , 1.0E-5 , 10.0 , & max_dif_below_powf_uv__uv_trivial , & max_dif_above_powf_uv__uv_trivial ) != 1
3 434 13 0 2
40 434 13 0 2
3 436 14 0 2
3 437 14 0 1
78 0 0 18 0 2
79 0 0 18 0 0,1
70 439 14 0 1 errors == 0 && passes == 3
75 439 14 20 1 T && T
76 439 14 19 1 T && F
76 439 14 18 1 F && _
80 0 0 18 0 1,2
81 0 0 18 0 0
77 439 14 0 1 errors == 0
80 0 0 18 0 2
81 0 0 18 0 1
77 439 14 0 1 passes == 3
3 441 15 0 1
40 441 15 0 1
3 443 16 0 1
13 445 17 6 1 errors
2 446 17 0 0 powf_uv__uv_trivial_special_values
0 451 0 7 0 powf_uv__uv_trivial_main_test
90 0 0 0 0 ( )
20 462 9 14 1 errors == 0
3 464 10 0 1
40 464 10 0 1
3 466 11 0 1
13 520 13 7 1 errors
2 521 13 0 0 powf_uv__uv_trivial_main_test
%521,8,8,15,21,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\sin.c
7 1561811959 0 0
0 2 0 0 0 sin
90 0 0 0 0 ( double x )
13 4 1 0 1 ( _Sinx ( x , 0 , 0 ) )
2 5 1 0 0 sin
%5,1,1,0,0,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\sqrt.c
7 1561811959 0 0
0 2 0 0 0 sqrt
90 0 0 0 0 ( double x )
42 6 2 0 1 _Dunscale ( & xexp , & x )
14 8 2 0 1 2
14 9 2 1 1 0
13 10 3 2 2 ( x )
14 11 3 3 1 1
20 12 3 0 2 ! ( ( * _Pmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) )
13 13 4 4 3 ( x )
3 13 4 0 2
15 14 4 5 1
20 15 4 1 2 ( ( * _Pmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) )
13 18 6 6 3 ( _Nan . _Double )
3 19 6 0 2
20 20 6 2 2 ( unsigned int ) xexp & 1
3 21 7 0 2
13 28 13 7 2 ( y )
3 29 13 0 1
2 30 13 0 0 sqrt
%30,1,8,3,0,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xdint.c
7 1561811960 0 0
0 60 0 0 0 _Dint
90 0 0 0 0 ( double * , short )
20 65 3 0 1 xchar == ( ( unsigned short ) ( ( 1 << ( 15 - 4 ) ) - 1 ) )
25 68 3 1 2 ( ps -> _Sh [ 3 ] & ( ( unsigned short ) ( ( 1 << 4 ) - 1 ) ) ) == 0 && ps -> _Sh [ 2 ] == 0 && ps -> _Sh [ 1 ] == 0 && ps -> _Sh [ 0 ] == 0
13 68 4 0 2 ( ( ps -> _Sh [ 3 ] & ( ( unsigned short ) ( ( 1 << 4 ) - 1 ) ) ) == 0 && ps -> _Sh [ 2 ] == 0 && ps -> _Sh [ 1 ] == 0 && ps -> _Sh [ 0 ] == 0 ? 1 : 2 )
3 68 4 0 1
78 0 0 0 0 4
79 0 0 0 0 0,1,2,3
71 70 4 0 1 ( ps -> _Sh [ 3 ] & ~ ( ( unsigned short ) 0x8000 ) ) == 0 && ps -> _Sh [ 2 ] == 0 && ps -> _Sh [ 1 ] == 0 && ps -> _Sh [ 0 ] == 0
75 70 4 4 1 T && T && T && T
76 70 4 3 1 T && T && T && F
76 70 4 2 1 T && T && F && _
76 70 4 1 1 T && F && _ && _
76 70 4 0 1 F && _ && _ && _
80 0 0 0 0 1,2,3,4
81 0 0 0 0 0
77 70 4 0 1 ( ps -> _Sh [ 3 ] & ~ ( ( unsigned short ) 0x8000 ) ) == 0
80 0 0 0 0 2,3,4
81 0 0 0 0 1
77 70 4 0 1 ps -> _Sh [ 2 ] == 0
80 0 0 0 0 3,4
81 0 0 0 0 2
77 70 4 0 1 ps -> _Sh [ 1 ] == 0
80 0 0 0 0 4
81 0 0 0 0 3
77 70 4 0 1 ps -> _Sh [ 0 ] == 0
13 71 5 1 2 ( 0 )
3 71 5 0 1
20 73 6 2 1 xchar <= 0
13 74 7 2 2 ( 0 )
3 74 7 0 1
21 75 7 3 1 ( 48 + 4 + 1 ) <= xchar
13 81 12 3 2 ( ( - 1 ) )
3 82 12 0 1
40 83 12 0 1
42 95 18 0 2 xchar
14 97 18 4 2 3
14 99 19 5 2 2
14 101 20 6 2 1
3 103 21 0 2
25 104 21 4 2 frac != 0
13 104 22 7 2 ( frac != 0 ? ( - 1 ) : 0 )
3 105 22 0 1
2 106 22 0 0 _Dint
%106,1,8,5,5,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xdnorm.c
7 1561811960 0 0
0 3 0 0 0 _Dnorm
90 0 0 0 0 ( _Dval * ps )
78 0 0 0 0 1,2,3,4
79 0 0 0 0 0
70 10 3 0 1 ( ps -> _Sh [ 3 ] &= ( ( unsigned short ) ( ( 1 << 4 ) - 1 ) ) ) != 0 || ps -> _Sh [ 2 ] || ps -> _Sh [ 1 ] || ps -> _Sh [ 0 ]
75 10 3 4 1 T || _ || _ || _
75 10 3 3 1 F || T || _ || _
75 10 3 2 1 F || F || T || _
75 10 3 1 1 F || F || F || T
76 10 3 0 1 F || F || F || F
80 0 0 0 0 4
81 0 0 0 0 0,1,2,3
77 10 3 0 1 ( ps -> _Sh [ 3 ] &= ( ( unsigned short ) ( ( 1 << 4 ) - 1 ) ) ) != 0
80 0 0 0 0 3
81 0 0 0 0 0,1,2
77 10 3 0 1 ps -> _Sh [ 2 ]
80 0 0 0 0 2
81 0 0 0 0 0,1
77 10 3 0 1 ps -> _Sh [ 1 ]
80 0 0 0 0 1
81 0 0 0 0 0
77 10 3 0 1 ps -> _Sh [ 0 ]
23 12 5 0 2 ps -> _Sh [ 3 ] == 0
3 16 7 0 2
23 17 9 1 2 ps -> _Sh [ 3 ] < 1 << 4
3 26 13 0 2
23 27 15 2 2 1 << ( 4 + 1 ) <= ps -> _Sh [ 3 ]
3 36 19 0 2
3 38 20 0 1
13 40 22 0 1 ( xchar )
2 41 22 0 0 _Dnorm
%41,1,1,3,5,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xdscale.c
7 1561811960 0 0
0 3 0 0 0 _Dscale
90 0 0 0 0 ( double * px , long lexp )
13 5 1 0 1 ( _Dscalex ( px , lexp , 4 ) )
2 6 1 0 0 _Dscale
0 8 0 1 0 _Dscalex
90 0 0 0 0 ( double * px , long lexp , int round_mode )
20 13 2 0 1 xchar == ( ( unsigned short ) ( ( 1 << ( 15 - 4 ) ) - 1 ) )
25 15 2 1 2 ( ps -> _Sh [ 3 ] & ( ( unsigned short ) ( ( 1 << 4 ) - 1 ) ) ) != 0 || ps -> _Sh [ 2 ] != 0 || ps -> _Sh [ 1 ] != 0 || ps -> _Sh [ 0 ] != 0
13 15 3 1 2 ( ( short ) ( ( ps -> _Sh [ 3 ] & ( ( unsigned short ) ( ( 1 << 4 ) - 1 ) ) ) != 0 || ps -> _Sh [ 2 ] != 0 || ps -> _Sh [ 1 ] != 0 || ps -> _Sh [ 0 ] != 0 ? 2 : 1 ) )
3 15 3 0 1
78 0 0 0 0 2
79 0 0 0 0 0,1
71 16 3 0 1 xchar == 0 && 0 < ( xchar = _Dnorm ( ps ) )
75 16 3 2 1 T && T
76 16 3 1 1 T && F
76 16 3 0 1 F && _
80 0 0 0 0 1,2
81 0 0 0 0 0
77 16 3 0 1 xchar == 0
80 0 0 0 0 2
81 0 0 0 0 1
77 16 3 0 1 0 < ( xchar = _Dnorm ( ps ) )
13 17 4 2 2 ( 0 )
3 17 4 0 1
78 0 0 3 0 2
79 0 0 3 0 0,1
70 19 4 0 1 0 < lexp && ( ( unsigned short ) ( ( 1 << ( 15 - 4 ) ) - 1 ) ) - xchar <= lexp
75 19 4 5 1 T && T
76 19 4 4 1 T && F
76 19 4 3 1 F && _
80 0 0 3 0 1,2
81 0 0 3 0 0
77 19 4 0 1 0 < lexp
80 0 0 3 0 2
81 0 0 3 0 1
77 19 4 0 1 ( ( unsigned short ) ( ( 1 << ( 15 - 4 ) ) - 1 ) ) - xchar <= lexp
25 21 4 2 2 ps -> _Sh [ 3 ] & ( ( unsigned short ) 0x8000 )
13 22 6 3 2 ( 1 )
3 23 6 0 1
21 24 6 3 1 - xchar < lexp
13 28 8 4 2 ( ( - 1 ) )
3 29 8 0 1
40 30 8 0 1
78 0 0 6 0 1,2
79 0 0 6 0 0
70 36 11 0 2 lexp < - ( 48 + 1 + 4 ) || 0 <= lexp
75 36 11 8 2 T || _
75 36 11 7 2 F || T
76 36 11 6 2 F || F
80 0 0 6 0 2
81 0 0 6 0 0,1
77 36 11 0 2 lexp < - ( 48 + 1 + 4 )
80 0 0 6 0 1
81 0 0 6 0 0
77 36 11 0 2 0 <= lexp
13 42 16 5 3 ( 0 )
3 43 16 0 2
40 44 16 0 2
23 49 20 4 3 xexp <= - 16
25 51 20 5 4 psx != 0
3 56 25 0 3
20 57 25 6 3 ( xexp = ( short ) - xexp ) != 0
25 59 25 7 4 psx != 0
3 67 30 0 3
20 70 31 8 3 psx != 0
20 74 32 9 4 round_mode == 4
3 75 33 0 4
42 77 33 0 4 round_mode
14 79 33 6 4 0
12 80 34 7 5
14 82 34 8 4 2
20 83 34 10 5 ! sign
3 84 35 0 5
12 85 36 9 5
14 87 36 10 4 3
20 88 36 11 5 sign
3 89 37 0 5
12 90 38 11 5
15 92 38 12 4
78 0 0 9 0 2,3
79 0 0 9 0 0,1
70 94 38 0 5 ( 0x8000 < psx || ( 0x8000 == psx && ( ps -> _Sh [ 0 ] & 0x0001 ) != 0 ) )
75 94 38 12 5 (T || (_ && _))
75 94 38 11 5 (F || (T && T))
76 94 38 10 5 (F || (T && F))
76 94 38 9 5 (F || (F && _))
80 0 0 9 0 3
81 0 0 9 0 0,1,2
77 94 38 0 5 0x8000 < psx
80 0 0 9 0 1,2
81 0 0 9 0 0
77 94 38 0 5 0x8000 == psx
80 0 0 9 0 2
81 0 0 9 0 1
77 94 38 0 5 ( ps -> _Sh [ 0 ] & 0x0001 ) != 0
3 95 39 0 5
12 96 40 13 5
3 97 40 0 4
78 0 0 13 0 4
79 0 0 13 0 0,1,2,3
70 102 40 0 4 roundup && ( ++ ps -> _Sh [ 0 ] & 0xffff ) == 0 && ( ++ ps -> _Sh [ 1 ] & 0xffff ) == 0 && ( ++ ps -> _Sh [ 2 ] & 0xffff ) == 0
75 102 40 17 4 T && T && T && T
76 102 40 16 4 T && T && T && F
76 102 40 15 4 T && T && F && _
76 102 40 14 4 T && F && _ && _
76 102 40 13 4 F && _ && _ && _
80 0 0 13 0 1,2,3,4
81 0 0 13 0 0
77 102 40 0 4 roundup
80 0 0 13 0 2,3,4
81 0 0 13 0 1
77 102 40 0 4 ( ++ ps -> _Sh [ 0 ] & 0xffff ) == 0
80 0 0 13 0 3,4
81 0 0 13 0 2
77 102 40 0 4 ( ++ ps -> _Sh [ 1 ] & 0xffff ) == 0
80 0 0 13 0 4
81 0 0 13 0 3
77 102 40 0 4 ( ++ ps -> _Sh [ 2 ] & 0xffff ) == 0
3 103 41 0 4
3 104 41 0 3
78 0 0 18 0 4
79 0 0 18 0 0,1,2,3
70 109 41 0 3 ps -> _Sh [ 3 ] == sign && ps -> _Sh [ 2 ] == 0 && ps -> _Sh [ 1 ] == 0 && ps -> _Sh [ 0 ] == 0
75 109 41 22 3 T && T && T && T
76 109 41 21 3 T && T && T && F
76 109 41 20 3 T && T && F && _
76 109 41 19 3 T && F && _ && _
76 109 41 18 3 F && _ && _ && _
80 0 0 18 0 1,2,3,4
81 0 0 18 0 0
77 109 41 0 3 ps -> _Sh [ 3 ] == sign
80 0 0 18 0 2,3,4
81 0 0 18 0 1
77 109 41 0 3 ps -> _Sh [ 2 ] == 0
80 0 0 18 0 3,4
81 0 0 18 0 2
77 109 41 0 3 ps -> _Sh [ 1 ] == 0
80 0 0 18 0 4
81 0 0 18 0 3
77 109 41 0 3 ps -> _Sh [ 0 ] == 0
13 110 42 14 4 ( 0 )
3 110 42 0 3
40 111 42 0 3
13 112 43 15 4 ( ( - 1 ) )
3 112 43 0 3
3 113 43 0 2
3 114 43 0 1
2 115 43 0 0 _Dscalex
%115,2,16,12,23,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xdtest.c
7 1561811961 0 0
0 4 0 0 0 _Dtest
90 0 0 0 0 ( double * px )
20 8 1 0 1 ( ps -> _Sh [ 3 ] & ( ( unsigned short ) ( 0x7fff & ~ ( ( unsigned short ) ( ( 1 << 4 ) - 1 ) ) ) ) ) == ( ( unsigned short ) ( ( 1 << ( 15 - 4 ) ) - 1 ) ) << 4
25 10 1 1 2 ( ps -> _Sh [ 3 ] & ( ( unsigned short ) ( ( 1 << 4 ) - 1 ) ) ) != 0 || ps -> _Sh [ 2 ] != 0 || ps -> _Sh [ 1 ] != 0 || ps -> _Sh [ 0 ] != 0
13 10 2 0 2 ( ( short ) ( ( ps -> _Sh [ 3 ] & ( ( unsigned short ) ( ( 1 << 4 ) - 1 ) ) ) != 0 || ps -> _Sh [ 2 ] != 0 || ps -> _Sh [ 1 ] != 0 || ps -> _Sh [ 0 ] != 0 ? 2 : 1 ) )
3 10 2 0 1
78 0 0 0 0 1,2,3,4
79 0 0 0 0 0
71 12 2 0 1 ( ps -> _Sh [ 3 ] & ~ ( ( unsigned short ) 0x8000 ) ) != 0 || ps -> _Sh [ 2 ] != 0 || ps -> _Sh [ 1 ] != 0 || ps -> _Sh [ 0 ] != 0
75 12 2 4 1 T || _ || _ || _
75 12 2 3 1 F || T || _ || _
75 12 2 2 1 F || F || T || _
75 12 2 1 1 F || F || F || T
76 12 2 0 1 F || F || F || F
80 0 0 0 0 4
81 0 0 0 0 0,1,2,3
77 12 2 0 1 ( ps -> _Sh [ 3 ] & ~ ( ( unsigned short ) 0x8000 ) ) != 0
80 0 0 0 0 3
81 0 0 0 0 0,1,2
77 12 2 0 1 ps -> _Sh [ 2 ] != 0
80 0 0 0 0 2
81 0 0 0 0 0,1
77 12 2 0 1 ps -> _Sh [ 1 ] != 0
80 0 0 0 0 1
81 0 0 0 0 0
77 12 2 0 1 ps -> _Sh [ 0 ] != 0
25 13 2 2 2 ( ps -> _Sh [ 3 ] & ( ( unsigned short ) ( 0x7fff & ~ ( ( unsigned short ) ( ( 1 << 4 ) - 1 ) ) ) ) ) == 0
13 13 3 1 2 ( ( ps -> _Sh [ 3 ] & ( ( unsigned short ) ( 0x7fff & ~ ( ( unsigned short ) ( ( 1 << 4 ) - 1 ) ) ) ) ) == 0 ? ( - 2 ) : ( - 1 ) )
3 13 3 0 1
40 14 3 0 1
13 15 4 2 2 ( 0 )
3 15 4 0 1
2 16 4 0 0 _Dtest
0 18 0 1 0 _Plsw
90 0 0 0 0 ( double * px )
13 20 1 3 1 ( & ( ( _Dval * ) ( char * ) px ) -> _Sh [ 0 ] )
2 21 1 0 0 _Plsw
0 23 0 2 0 _Pmsw
90 0 0 0 0 ( double * px )
13 25 1 4 1 ( & ( ( _Dval * ) ( char * ) px ) -> _Sh [ 3 ] )
2 26 1 0 0 _Pmsw
%26,3,5,3,5,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xdunscal.c
7 1561811961 0 0
0 3 0 0 0 _Dunscale
90 0 0 0 0 ( short * pex , double * px )
20 8 2 0 1 xchar == ( ( unsigned short ) ( ( 1 << ( 15 - 4 ) ) - 1 ) )
25 12 3 1 2 ( ps -> _Sh [ 3 ] & ( ( unsigned short ) ( ( 1 << 4 ) - 1 ) ) ) != 0 || ps -> _Sh [ 2 ] != 0 || ps -> _Sh [ 1 ] != 0 || ps -> _Sh [ 0 ] != 0
13 12 4 0 2 ( ( ps -> _Sh [ 3 ] & ( ( unsigned short ) ( ( 1 << 4 ) - 1 ) ) ) != 0 || ps -> _Sh [ 2 ] != 0 || ps -> _Sh [ 1 ] != 0 || ps -> _Sh [ 0 ] != 0 ? 2 : 1 )
3 13 4 0 1
78 0 0 0 0 1,2
79 0 0 0 0 0
71 14 4 0 1 0 < xchar || ( xchar = _Dnorm ( ps ) ) <= 0
75 14 4 2 1 T || _
75 14 4 1 1 F || T
76 14 4 0 1 F || F
80 0 0 0 0 2
81 0 0 0 0 0,1
77 14 4 0 1 0 < xchar
80 0 0 0 0 1
81 0 0 0 0 0
77 14 4 0 1 ( xchar = _Dnorm ( ps ) ) <= 0
13 18 7 1 2 ( ( - 1 ) )
3 19 7 0 1
40 20 7 0 1
13 23 9 2 2 ( 0 )
3 24 9 0 1
2 25 9 0 0 _Dunscale
%25,1,3,2,3,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xfdnorm.c
7 1561811961 0 0
0 3 0 0 0 _FDnorm
90 0 0 0 0 ( _Fval * ps )
78 0 0 0 0 1,2
79 0 0 0 0 0
70 9 3 0 1 ( ps -> _Sh [ 1 ] &= ( ( unsigned short ) ( ( 1 << 7 ) - 1 ) ) ) != 0 || ps -> _Sh [ 0 ]
75 9 3 2 1 T || _
75 9 3 1 1 F || T
76 9 3 0 1 F || F
80 0 0 0 0 2
81 0 0 0 0 0,1
77 9 3 0 1 ( ps -> _Sh [ 1 ] &= ( ( unsigned short ) ( ( 1 << 7 ) - 1 ) ) ) != 0
80 0 0 0 0 1
81 0 0 0 0 0
77 9 3 0 1 ps -> _Sh [ 0 ]
20 11 3 0 2 ps -> _Sh [ 1 ] == 0
3 12 4 0 2
23 13 6 1 2 ps -> _Sh [ 1 ] < 1 << 7
3 18 8 0 2
23 19 10 2 2 1 << ( 7 + 1 ) <= ps -> _Sh [ 1 ]
3 24 12 0 2
3 26 13 0 1
13 28 15 0 1 ( xchar )
2 29 15 0 0 _FDnorm
%29,1,1,3,3,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xfdscale.c
7 1561811962 0 0
0 5 0 0 0 _FDscale
90 0 0 0 0 ( float * px , long lexp )
13 7 1 0 1 ( _FDscalex ( px , lexp , 4 ) )
2 8 1 0 0 _FDscale
0 10 0 1 0 _FDscalex
90 0 0 0 0 ( float * px , long lexp , int round_mode )
20 15 2 0 1 xchar == ( ( unsigned short ) ( ( 1 << ( 15 - 7 ) ) - 1 ) )
25 17 2 1 2 ( ps -> _Sh [ 1 ] & ( ( unsigned short ) ( ( 1 << 7 ) - 1 ) ) ) != 0 || ps -> _Sh [ 0 ] != 0
13 17 3 1 2 ( ( short ) ( ( ps -> _Sh [ 1 ] & ( ( unsigned short ) ( ( 1 << 7 ) - 1 ) ) ) != 0 || ps -> _Sh [ 0 ] != 0 ? 2 : 1 ) )
3 17 3 0 1
78 0 0 0 0 2
79 0 0 0 0 0,1
71 18 3 0 1 xchar == 0 && 0 < ( xchar = _FDnorm ( ps ) )
75 18 3 2 1 T && T
76 18 3 1 1 T && F
76 18 3 0 1 F && _
80 0 0 0 0 1,2
81 0 0 0 0 0
77 18 3 0 1 xchar == 0
80 0 0 0 0 2
81 0 0 0 0 1
77 18 3 0 1 0 < ( xchar = _FDnorm ( ps ) )
13 19 4 2 2 ( 0 )
3 19 4 0 1
78 0 0 3 0 2
79 0 0 3 0 0,1
70 21 4 0 1 0 < lexp && ( ( unsigned short ) ( ( 1 << ( 15 - 7 ) ) - 1 ) ) - xchar <= lexp
75 21 4 5 1 T && T
76 21 4 4 1 T && F
76 21 4 3 1 F && _
80 0 0 3 0 1,2
81 0 0 3 0 0
77 21 4 0 1 0 < lexp
80 0 0 3 0 2
81 0 0 3 0 1
77 21 4 0 1 ( ( unsigned short ) ( ( 1 << ( 15 - 7 ) ) - 1 ) ) - xchar <= lexp
25 23 4 2 2 ps -> _Sh [ 1 ] & ( ( unsigned short ) 0x8000 )
13 24 6 3 2 ( 1 )
3 25 6 0 1
21 26 6 3 1 - xchar < lexp
13 30 8 4 2 ( ( - 1 ) )
3 31 8 0 1
40 32 8 0 1
78 0 0 6 0 1,2
79 0 0 6 0 0
70 38 11 0 2 lexp < - ( 16 + 1 + 7 ) || 0 <= lexp
75 38 11 8 2 T || _
75 38 11 7 2 F || T
76 38 11 6 2 F || F
80 0 0 6 0 2
81 0 0 6 0 0,1
77 38 11 0 2 lexp < - ( 16 + 1 + 7 )
80 0 0 6 0 1
81 0 0 6 0 0
77 38 11 0 2 0 <= lexp
13 42 14 5 3 ( 0 )
3 43 14 0 2
40 44 14 0 2
20 49 16 4 3 xexp <= - 16
25 51 16 5 4 psx != 0
3 55 20 0 3
20 56 20 6 3 ( xexp = ( short ) - xexp ) != 0
25 58 20 7 4 psx != 0
3 62 23 0 3
20 65 24 8 3 psx != 0
20 69 25 9 4 round_mode == 4
3 70 26 0 4
42 71 26 0 4 round_mode
14 73 26 6 4 0
12 74 27 7 5
14 76 27 8 4 2
20 77 27 10 5 ! sign
3 78 28 0 5
12 79 29 9 5
14 81 29 10 4 3
20 82 29 11 5 sign
3 83 30 0 5
12 84 31 11 5
15 86 31 12 4
78 0 0 9 0 2,3
79 0 0 9 0 0,1
70 88 31 0 5 ( 0x8000 < psx || ( 0x8000 == psx && ( ps -> _Sh [ 0 ] & 0x0001 ) != 0 ) )
75 88 31 12 5 (T || (_ && _))
75 88 31 11 5 (F || (T && T))
76 88 31 10 5 (F || (T && F))
76 88 31 9 5 (F || (F && _))
80 0 0 9 0 3
81 0 0 9 0 0,1,2
77 88 31 0 5 0x8000 < psx
80 0 0 9 0 1,2
81 0 0 9 0 0
77 88 31 0 5 0x8000 == psx
80 0 0 9 0 2
81 0 0 9 0 1
77 88 31 0 5 ( ps -> _Sh [ 0 ] & 0x0001 ) != 0
3 89 32 0 5
12 90 33 13 5
3 91 33 0 4
78 0 0 13 0 2
79 0 0 13 0 0,1
70 94 33 0 4 roundup && ( ++ ps -> _Sh [ 0 ] & 0xffff ) == 0
75 94 33 15 4 T && T
76 94 33 14 4 T && F
76 94 33 13 4 F && _
80 0 0 13 0 1,2
81 0 0 13 0 0
77 94 33 0 4 roundup
80 0 0 13 0 2
81 0 0 13 0 1
77 94 33 0 4 ( ++ ps -> _Sh [ 0 ] & 0xffff ) == 0
3 95 34 0 4
3 96 34 0 3
78 0 0 16 0 2
79 0 0 16 0 0,1
70 99 34 0 3 ps -> _Sh [ 1 ] == sign && ps -> _Sh [ 0 ] == 0
75 99 34 18 3 T && T
76 99 34 17 3 T && F
76 99 34 16 3 F && _
80 0 0 16 0 1,2
81 0 0 16 0 0
77 99 34 0 3 ps -> _Sh [ 1 ] == sign
80 0 0 16 0 2
81 0 0 16 0 1
77 99 34 0 3 ps -> _Sh [ 0 ] == 0
13 100 35 14 4 ( 0 )
3 100 35 0 3
40 101 35 0 3
13 102 36 15 4 ( ( - 1 ) )
3 102 36 0 3
3 103 36 0 2
3 104 36 0 1
2 105 36 0 0 _FDscalex
%105,2,16,12,19,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xfdtest.c
7 1561811962 0 0
0 4 0 0 0 _FDtest
90 0 0 0 0 ( float * px )
20 28 6 0 1 ( ps -> _Sh [ 1 ] & ( ( unsigned short ) ( 0x7fff & ~ ( ( unsigned short ) ( ( 1 << 7 ) - 1 ) ) ) ) ) == ( ( unsigned short ) ( ( 1 << ( 15 - 7 ) ) - 1 ) ) << 7
25 30 6 1 2 ( ps -> _Sh [ 1 ] & ( ( unsigned short ) ( ( 1 << 7 ) - 1 ) ) ) != 0 || ps -> _Sh [ 0 ] != 0
13 30 7 0 2 ( ( short ) ( ( ps -> _Sh [ 1 ] & ( ( unsigned short ) ( ( 1 << 7 ) - 1 ) ) ) != 0 || ps -> _Sh [ 0 ] != 0 ? 2 : 1 ) )
3 30 7 0 1
78 0 0 0 0 1,2
79 0 0 0 0 0
71 31 7 0 1 ( ps -> _Sh [ 1 ] & ~ ( ( unsigned short ) 0x8000 ) ) != 0 || ps -> _Sh [ 0 ] != 0
75 31 7 2 1 T || _
75 31 7 1 1 F || T
76 31 7 0 1 F || F
80 0 0 0 0 2
81 0 0 0 0 0,1
77 31 7 0 1 ( ps -> _Sh [ 1 ] & ~ ( ( unsigned short ) 0x8000 ) ) != 0
80 0 0 0 0 1
81 0 0 0 0 0
77 31 7 0 1 ps -> _Sh [ 0 ] != 0
25 32 7 2 2 ( ps -> _Sh [ 1 ] & ( ( unsigned short ) ( 0x7fff & ~ ( ( unsigned short ) ( ( 1 << 7 ) - 1 ) ) ) ) ) == 0
13 32 8 1 2 ( ( ps -> _Sh [ 1 ] & ( ( unsigned short ) ( 0x7fff & ~ ( ( unsigned short ) ( ( 1 << 7 ) - 1 ) ) ) ) ) == 0 ? ( - 2 ) : ( - 1 ) )
3 32 8 0 1
40 33 8 0 1
13 36 10 2 2 ( 0 )
3 37 10 0 1
2 38 10 0 0 _FDtest
0 40 0 1 0 _FPlsw
90 0 0 0 0 ( float * px )
13 42 1 3 1 ( & ( ( _Fval * ) ( char * ) px ) -> _Sh [ 0 ] )
2 43 1 0 0 _FPlsw
0 45 0 2 0 _FPmsw
90 0 0 0 0 ( float * px )
13 47 1 4 1 ( & ( ( _Fval * ) ( char * ) px ) -> _Sh [ 1 ] )
2 48 1 0 0 _FPmsw
%48,3,5,3,3,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xfenv0.c
7 1561811962 0 0
%2,0,0,0,0,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xferaise.c
7 1561811963 0 0
0 2 0 0 0 _Feraise
90 0 0 0 0 ( int except )
20 7 1 0 1 ( errh & 2 ) != 0
20 9 1 1 2 ( except & ( 0x04 | 0x08 ) ) != 0
3 10 2 0 2
3 12 3 0 1
20 14 3 2 1 ( errh & 1 ) == 0
3 15 4 0 1
21 16 4 3 1 ( except & 0x01 ) != 0
3 17 5 0 1
21 18 5 4 1 ( except & ( 0x02 | 0x08 | 0x04 ) ) != 0
3 19 6 0 1
1 27 6 0 0 _Feraise
%27,1,1,5,0,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xfexp.c
7 1561811963 0 0
0 18 0 0 0 expf
90 0 0 0 0 ( float x )
42 21 1 0 1 _FDtest ( & x )
14 23 1 0 1 2
13 24 2 1 2 ( x )
14 26 2 2 1 1
25 27 2 0 2 ( ( * _FPmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) )
13 27 3 3 2 ( ( ( * _FPmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) ) ? 0.0F : x )
14 29 3 4 1 0
13 30 4 5 2 ( 1.0F )
15 32 4 6 1
13 34 6 7 2 ( x )
3 35 6 0 1
2 36 6 0 0 expf
0 38 0 1 0 _FExp
90 0 0 0 0 ( float * px , float y , long eoff )
78 0 0 0 0 1,2
79 0 0 0 0 0
70 45 4 0 1 0 <= errx || 0 <= erry
75 45 4 2 1 T || _
75 45 4 1 1 F || T
76 45 4 0 1 F || F
80 0 0 0 0 2
81 0 0 0 0 0,1
77 45 4 0 1 0 <= errx
80 0 0 0 0 1
81 0 0 0 0 0
77 45 4 0 1 0 <= erry
20 48 5 1 2 errx == 2
13 49 6 8 3 ( 2 )
3 49 6 0 2
21 50 6 2 2 erry == 2
13 53 8 9 3 ( 2 )
3 54 8 0 2
21 55 8 3 2 erry == 0
20 56 8 4 3 * px != _FInf . _Float
13 59 10 10 4 ( 0 )
3 60 10 0 3
40 61 10 0 3
13 65 13 11 4 ( 2 )
3 66 13 0 3
3 66 13 0 2
21 67 13 5 2 erry == 1
20 68 13 6 3 * px != - _FInf . _Float
13 71 15 12 4 ( 1 )
3 72 15 0 3
40 73 15 0 3
13 77 18 13 4 ( 2 )
3 78 18 0 3
3 78 18 0 2
21 79 18 7 2 errx == 0
42 82 19 0 3 errx = _FDscale ( px , eoff )
14 84 19 14 3 0
12 86 21 15 4
14 88 21 16 3 1
3 90 22 0 3
13 91 23 17 3 ( errx )
3 92 23 0 2
21 93 23 8 2 * px == _FInf . _Float
13 96 25 18 3 ( 1 )
3 97 25 0 2
40 98 25 0 2
13 101 27 19 3 ( 0 )
3 102 27 0 2
3 103 27 0 1
21 104 27 9 1 * px < - hugexp
13 107 29 20 2 ( 0 )
3 108 29 0 1
21 109 29 10 1 hugexp < * px
13 113 32 21 2 ( 1 )
3 114 32 0 1
40 115 32 0 1
25 118 34 11 2 g < 0.0F
78 0 0 3 0 2
79 0 0 3 0 0,1
70 122 36 0 2 - _FEps . _Float < g && g < _FEps . _Float
75 122 36 5 2 T && T
76 122 36 4 2 T && F
76 122 36 3 2 F && _
80 0 0 3 0 1,2
81 0 0 3 0 0
77 122 36 0 2 - _FEps . _Float < g
80 0 0 3 0 2
81 0 0 3 0 1
77 122 36 0 2 g < _FEps . _Float
3 123 37 0 2
40 124 37 0 2
3 132 42 0 2
42 134 42 0 2 errx = _FDscale ( px , ( long ) xexp + eoff )
14 136 42 22 2 0
12 138 44 23 3
14 140 44 24 2 1
3 142 45 0 2
13 143 46 25 2 ( errx )
3 144 46 0 1
2 145 46 0 0 _FExp
%145,2,26,12,6,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xflog.c
7 1561811963 0 0
0 25 0 0 0 _FLog
90 0 0 0 0 ( float x , int baseflag )
42 29 1 0 1 _FDunscale ( & xexp , & x )
14 31 1 0 1 2
13 32 2 1 2 ( x )
14 34 2 2 1 0
13 36 4 3 2 ( - _FInf . _Float )
14 38 4 4 1 1
20 39 4 0 2 ! ( ( * _FPmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) )
13 40 5 5 3 ( x )
3 40 5 0 2
15 42 5 6 1
20 43 5 1 2 ( ( * _FPmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) )
13 46 7 7 3 ( _FNan . _Float )
3 47 7 0 2
40 48 7 0 2
20 52 8 2 3 x < rthalf
3 56 10 0 3
20 63 15 3 3 baseflag == 0
3 65 16 0 3
21 66 16 4 3 0 < baseflag
3 69 17 0 3
40 70 17 0 3
3 73 18 0 3
13 74 19 8 3 ( z )
3 75 19 0 2
3 76 19 0 1
2 77 19 0 0 _FLog
0 79 0 1 0 _FLogpoly
90 0 0 0 0 ( float w )
13 81 1 9 1 ( ( ( p [ 0 ] * w + p [ 1 ] ) * w + p [ 2 ] ) )
2 82 1 0 0 _FLogpoly
%82,2,10,5,0,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xfprec.c
7 1561811964 0 0
0 3 0 0 0 _FXp_getw
90 0 0 0 0 ( const float * , int )
20 5 0 0 1 n == 0
13 6 1 0 2 ( 0.0F )
3 6 1 0 1
78 0 0 0 0 1,2,3
79 0 0 0 0 0
71 7 1 0 1 n == 1 || p [ 0 ] == 0.0F || p [ 1 ] == 0.0F
75 7 1 3 1 T || _ || _
75 7 1 2 1 F || T || _
75 7 1 1 1 F || F || T
76 7 1 0 1 F || F || F
80 0 0 0 0 3
81 0 0 0 0 0,1,2
77 7 1 0 1 n == 1
80 0 0 0 0 2
81 0 0 0 0 0,1
77 7 1 0 1 p [ 0 ] == 0.0F
80 0 0 0 0 1
81 0 0 0 0 0
77 7 1 0 1 p [ 1 ] == 0.0F
13 8 2 1 2 ( p [ 0 ] )
3 8 2 0 1
78 0 0 4 0 1,2
79 0 0 4 0 0
71 9 2 0 1 n == 2 || p [ 2 ] == 0.0F
75 9 2 6 1 T || _
75 9 2 5 1 F || T
76 9 2 4 1 F || F
80 0 0 4 0 2
81 0 0 4 0 0,1
77 9 2 0 1 n == 2
80 0 0 4 0 1
81 0 0 4 0 0
77 9 2 0 1 p [ 2 ] == 0.0F
13 10 3 2 2 ( p [ 0 ] + p [ 1 ] )
3 10 3 0 1
40 11 3 0 1
20 16 5 1 2 4 <= n
3 17 6 0 2
20 18 6 2 2 p01 - p [ 0 ] == p [ 1 ]
13 19 7 3 3 ( p01 + p2 )
3 19 7 0 2
40 20 7 0 2
13 21 8 4 3 ( p [ 0 ] + ( p [ 1 ] + p2 ) )
3 21 8 0 2
3 22 8 0 1
2 23 8 0 0 _FXp_getw
0 25 0 1 0 _FXp_setw
90 0 0 0 0 ( float * , int , float )
20 30 2 3 1 n <= 0
3 31 3 0 1
78 0 0 7 0 1,2
79 0 0 7 0 0
71 32 3 0 1 n == 1 || ( errx = _FDunscale ( & xexp , & x0 ) ) == 0
75 32 3 9 1 T || _
75 32 3 8 1 F || T
76 32 3 7 1 F || F
80 0 0 7 0 2
81 0 0 7 0 0,1
77 32 3 0 1 n == 1
80 0 0 7 0 1
81 0 0 7 0 0
77 32 3 0 1 ( errx = _FDunscale ( & xexp , & x0 ) ) == 0
3 33 4 0 1
21 34 4 4 1 0 < errx
3 38 6 0 1
40 39 6 0 1
78 0 0 10 0 3
79 0 0 10 0 0,1,2
70 46 10 0 2 ( 24 & 1 ) != 0 && 2 < n && p [ 1 ] != 0.0F
75 46 10 13 2 T && T && T
76 46 10 12 2 T && T && F
76 46 10 11 2 T && F && _
76 46 10 10 2 F && _ && _
80 0 0 10 0 1,2,3
81 0 0 10 0 0
77 46 10 0 2 ( 24 & 1 ) != 0
80 0 0 10 0 2,3
81 0 0 10 0 1
77 46 10 0 2 2 < n
80 0 0 10 0 3
81 0 0 10 0 2
77 46 10 0 2 p [ 1 ] != 0.0F
78 0 0 14 0 2
79 0 0 14 0 0,1
70 53 15 0 3 3 < n && p [ 2 ] != 0.0F
75 53 15 16 3 T && T
76 53 15 15 3 T && F
76 53 15 14 3 F && _
80 0 0 14 0 1,2
81 0 0 14 0 0
77 53 15 0 3 3 < n
80 0 0 14 0 2
81 0 0 14 0 1
77 53 15 0 3 p [ 2 ] != 0.0F
3 54 16 0 3
3 55 16 0 2
21 56 16 5 2 2 < n
3 57 17 0 2
3 58 17 0 1
13 59 18 5 1 ( p )
2 60 18 0 0 _FXp_setw
0 62 0 2 0 _FXp_addh
90 0 0 0 0 ( float * , int , float )
20 67 2 6 1 n == 0
3 68 3 0 1
21 69 3 7 1 0 < ( errx = _FDunscale ( & xexp , & xscaled ) )
78 0 0 17 0 1,2
79 0 0 17 0 0
70 70 3 0 2 errx == 2 || ( errx = _FDtest ( & p [ 0 ] ) ) <= 0
75 70 3 19 2 T || _
75 70 3 18 2 F || T
76 70 3 17 2 F || F
80 0 0 17 0 2
81 0 0 17 0 0,1
77 70 3 0 2 errx == 2
80 0 0 17 0 1
81 0 0 17 0 0
77 70 3 0 2 ( errx = _FDtest ( & p [ 0 ] ) ) <= 0
3 71 4 0 2
78 0 0 20 0 1,2
79 0 0 20 0 0
71 72 4 0 2 errx == 2 || ( ( * _FPmsw ( & ( x0 ) ) ) & ( ( unsigned short ) 0x8000 ) ) == ( ( * _FPmsw ( & ( p [ 0 ] ) ) ) & ( ( unsigned short ) 0x8000 ) )
75 72 4 22 2 T || _
75 72 4 21 2 F || T
76 72 4 20 2 F || F
80 0 0 20 0 2
81 0 0 20 0 0,1
77 72 4 0 2 errx == 2
80 0 0 20 0 1
81 0 0 20 0 0
77 72 4 0 2 ( ( * _FPmsw ( & ( x0 ) ) ) & ( ( unsigned short ) 0x8000 ) ) == ( ( * _FPmsw ( & ( p [ 0 ] ) ) ) & ( ( unsigned short ) 0x8000 ) )
3 73 5 0 2
40 74 5 0 2
20 78 7 8 3 1 < n
3 79 8 0 3
3 80 8 0 2
3 80 8 0 1
21 81 8 9 1 errx < 0
23 86 12 10 2 k < n
20 93 16 11 3 0 < ( errx = _FDunscale ( & yexp , & yscaled ) )
12 94 17 6 4
3 94 17 0 3
21 95 17 12 3 errx == 0
20 98 18 13 4 k + 1 < n
3 99 19 0 4
12 100 20 7 4
3 101 20 0 3
78 0 0 23 0 2
79 0 0 23 0 0,1
71 103 20 0 3 ( diff = ( long ) yexp - xexp ) <= - mybits && x0 != 0.0F
75 103 20 25 3 T && T
76 103 20 24 3 T && F
76 103 20 23 3 F && _
80 0 0 23 0 1,2
81 0 0 23 0 0
77 103 20 0 3 ( diff = ( long ) yexp - xexp ) <= - mybits
80 0 0 23 0 2
81 0 0 23 0 1
77 103 20 0 3 x0 != 0.0F
78 0 0 26 0 2
79 0 0 26 0 0,1
73 107 23 0 4 ++ j < n && p [ j ] != 0.0F
75 107 23 28 4 T && T
76 107 23 27 4 T && F
76 107 23 26 4 F && _
80 0 0 26 0 1,2
81 0 0 26 0 0
77 107 23 0 4 ++ j < n
80 0 0 26 0 2
81 0 0 26 0 1
77 107 23 0 4 p [ j ] != 0.0F
3 108 24 0 4
20 109 24 14 4 j < n - 1
3 110 25 0 4
21 111 25 15 4 j == n
3 112 26 0 4
23 113 28 16 4 k < j
3 114 29 0 4
3 117 31 0 3
78 0 0 29 0 2
79 0 0 29 0 0,1
71 118 31 0 3 mybits <= diff && x0 != 0.0F
75 118 31 31 3 T && T
76 118 31 30 3 T && F
76 118 31 29 3 F && _
80 0 0 29 0 1,2
81 0 0 29 0 0
77 118 31 0 3 mybits <= diff
80 0 0 29 0 2
81 0 0 29 0 1
77 118 31 0 3 x0 != 0.0F
3 122 33 0 3
40 123 33 0 3
20 125 33 17 4 ( p [ k ] += x0 ) == 0.0F
78 0 0 32 0 2
79 0 0 32 0 0,1
73 127 36 0 5 ++ m < n && ( p [ m - 1 ] = p [ m ] ) != 0.0F
75 127 36 34 5 T && T
76 127 36 33 5 T && F
76 127 36 32 5 F && _
80 0 0 32 0 1,2
81 0 0 32 0 0
77 127 36 0 5 ++ m < n
80 0 0 32 0 2
81 0 0 32 0 1
77 127 36 0 5 ( p [ m - 1 ] = p [ m ] ) != 0.0F
3 127 37 0 5
20 128 38 18 5 p [ k ] == 0.0F
12 129 39 8 6
3 129 39 0 5
3 130 39 0 4
20 133 41 19 4 prevexp - mybits < xexp
20 137 43 20 5 ( p [ k ] -= x0 ) == 0.0F
78 0 0 35 0 2
79 0 0 35 0 0,1
73 139 46 0 6 ++ m < n && ( p [ m - 1 ] = p [ m ] ) != 0.0F
75 139 46 37 6 T && T
76 139 46 36 6 T && F
76 139 46 35 6 F && _
80 0 0 35 0 1,2
81 0 0 35 0 0
77 139 46 0 6 ++ m < n
80 0 0 35 0 2
81 0 0 35 0 1
77 139 46 0 6 ( p [ m - 1 ] = p [ m ] ) != 0.0F
3 139 47 0 6
3 140 48 0 5
20 141 48 21 5 -- k == 0
3 142 49 0 5
40 143 49 0 5
3 148 52 0 5
3 149 52 0 4
21 150 52 22 4 k + 1 == n
12 151 53 9 5
3 151 53 0 4
40 152 53 0 4
25 161 60 23 5 x0 != 0.0F
3 164 62 0 4
3 165 62 0 3
3 166 62 0 2
3 167 62 0 1
13 168 63 10 1 ( p )
2 169 63 0 0 _FXp_addh
0 171 0 3 0 _FXp_mulh
90 0 0 0 0 ( float * , int , float )
20 177 3 24 1 0 < n
20 180 4 25 2 0 <= ( errx = _FDtest ( & buf [ 0 ] ) )
20 182 4 26 3 errx == 2
3 183 5 0 3
78 0 0 38 0 2
79 0 0 38 0 0,1
70 185 6 0 3 0 < errx && 1 < n
75 185 6 40 3 T && T
76 185 6 39 3 T && F
76 185 6 38 3 F && _
80 0 0 38 0 1,2
81 0 0 38 0 0
77 185 6 0 3 0 < errx
80 0 0 38 0 2
81 0 0 38 0 1
77 185 6 0 3 1 < n
3 186 7 0 3
13 187 8 11 3 ( p )
3 188 8 0 2
3 190 9 0 1
23 192 11 27 1 k < n
23 194 13 28 2 j < 4
78 0 0 41 0 2
79 0 0 41 0 0,1
70 195 13 0 3 k + j < n && p [ k + j ] != 0.0F
75 195 13 43 3 T && T
76 195 13 42 3 T && F
76 195 13 41 3 F && _
80 0 0 41 0 1,2
81 0 0 41 0 0
77 195 13 0 3 k + j < n
80 0 0 41 0 2
81 0 0 41 0 1
77 195 13 0 3 p [ k + j ] != 0.0F
3 199 15 0 3
40 200 15 0 3
12 204 18 12 4
3 205 18 0 3
3 205 18 0 2
20 207 18 29 2 buf [ 0 ] == 0.0F
12 208 19 13 3
3 208 19 0 2
40 209 19 0 2
23 221 29 30 3 ++ i < j
20 222 29 31 4 ( buf [ i - 1 ] = buf [ i ] ) == 0.0F
12 223 30 14 5
3 223 30 0 4
3 223 30 0 3
3 224 30 0 2
3 225 30 0 1
13 226 31 15 1 ( p )
2 227 31 0 0 _FXp_mulh
0 229 0 4 0 _FXp_setn
90 0 0 0 0 ( float * , int , long )
13 240 4 16 1 ( p )
2 241 4 0 0 _FXp_setn
0 243 0 5 0 _FXp_movx
90 0 0 0 0 ( float * , int , const float * )
13 246 2 17 1 ( p )
2 247 2 0 0 _FXp_movx
0 249 0 6 0 _FXp_addx
90 0 0 0 0 ( float * , int , const float * , int )
78 0 0 44 0 2
79 0 0 44 0 0,1
73 254 3 0 1 k < m && q [ k ] != 0.0F
75 254 3 46 1 T && T
76 254 3 45 1 T && F
76 254 3 44 1 F && _
80 0 0 44 0 1,2
81 0 0 44 0 0
77 254 3 0 1 k < m
80 0 0 44 0 2
81 0 0 44 0 1
77 254 3 0 1 q [ k ] != 0.0F
3 255 4 0 1
13 256 5 18 1 ( p )
2 257 5 0 0 _FXp_addx
%455,7,19,32,47,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xfvalues.c
7 1561811964 0 0
%13,0,0,0,0,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xlog.c
7 1561811965 0 0
0 28 0 0 0 _Log
90 0 0 0 0 ( double x , int baseflag )
42 32 1 0 1 _Dunscale ( & xexp , & x )
14 34 1 0 1 2
13 35 2 1 2 ( x )
14 37 2 2 1 0
13 39 4 3 2 ( - _Inf . _Double )
14 41 4 4 1 1
20 42 4 0 2 ! ( ( * _Pmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) )
13 43 5 5 3 ( x )
3 43 5 0 2
15 45 5 6 1
20 46 5 1 2 ( ( * _Pmsw ( & ( x ) ) ) & ( ( unsigned short ) 0x8000 ) )
13 49 7 7 3 ( _Nan . _Double )
3 50 7 0 2
40 51 7 0 2
20 55 8 2 3 x < rthalf
3 59 10 0 3
20 66 15 3 3 baseflag == 0
3 68 16 0 3
21 69 16 4 3 0 < baseflag
3 72 17 0 3
40 73 17 0 3
3 76 18 0 3
13 77 19 8 3 ( z )
3 78 19 0 2
3 79 19 0 1
2 80 19 0 0 _Log
0 82 0 1 0 _Logpoly
90 0 0 0 0 ( double w )
13 84 1 9 1 ( ( ( ( ( ( ( p [ 0 ] * w + p [ 1 ] ) * w + p [ 2 ] ) * w + p [ 3 ] ) * w + p [ 4 ] ) * w + p [ 5 ] ) * w + p [ 6 ] ) )
2 85 1 0 0 _Logpoly
%85,2,10,5,0,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xprec.c
7 1561811965 0 0
0 4 0 0 0 _Xp_getw
90 0 0 0 0 ( const double * p , int n )
20 5 0 0 1 n == 0
13 6 1 0 2 ( 0.0 )
3 6 1 0 1
78 0 0 0 0 1,2,3
79 0 0 0 0 0
71 7 1 0 1 n == 1 || p [ 0 ] == 0.0 || p [ 1 ] == 0.0
75 7 1 3 1 T || _ || _
75 7 1 2 1 F || T || _
75 7 1 1 1 F || F || T
76 7 1 0 1 F || F || F
80 0 0 0 0 3
81 0 0 0 0 0,1,2
77 7 1 0 1 n == 1
80 0 0 0 0 2
81 0 0 0 0 0,1
77 7 1 0 1 p [ 0 ] == 0.0
80 0 0 0 0 1
81 0 0 0 0 0
77 7 1 0 1 p [ 1 ] == 0.0
13 8 2 1 2 ( p [ 0 ] )
3 8 2 0 1
78 0 0 4 0 1,2
79 0 0 4 0 0
71 9 2 0 1 n == 2 || p [ 2 ] == 0.0
75 9 2 6 1 T || _
75 9 2 5 1 F || T
76 9 2 4 1 F || F
80 0 0 4 0 2
81 0 0 4 0 0,1
77 9 2 0 1 n == 2
80 0 0 4 0 1
81 0 0 4 0 0
77 9 2 0 1 p [ 2 ] == 0.0
13 10 3 2 2 ( p [ 0 ] + p [ 1 ] )
3 10 3 0 1
40 11 3 0 1
20 15 5 1 2 4 <= n
3 16 6 0 2
20 17 6 2 2 p01 - p [ 0 ] == p [ 1 ]
13 18 7 3 3 ( p01 + p2 )
3 18 7 0 2
40 19 7 0 2
13 20 8 4 3 ( p [ 0 ] + ( p [ 1 ] + p2 ) )
3 20 8 0 2
3 21 8 0 1
2 22 8 0 0 _Xp_getw
0 23 0 1 0 _Xp_setw
90 0 0 0 0 ( double * p , int n , double x )
20 27 2 3 1 n <= 0
3 28 3 0 1
78 0 0 7 0 1,2
79 0 0 7 0 0
71 29 3 0 1 n == 1 || ( errx = _Dunscale ( & xexp , & x0 ) ) == 0
75 29 3 9 1 T || _
75 29 3 8 1 F || T
76 29 3 7 1 F || F
80 0 0 7 0 2
81 0 0 7 0 0,1
77 29 3 0 1 n == 1
80 0 0 7 0 1
81 0 0 7 0 0
77 29 3 0 1 ( errx = _Dunscale ( & xexp , & x0 ) ) == 0
3 30 4 0 1
21 31 4 4 1 0 < errx
3 35 6 0 1
40 36 6 0 1
78 0 0 10 0 3
79 0 0 10 0 0,1,2
70 42 10 0 2 ( 53 & 1 ) != 0 && 2 < n && p [ 1 ] != 0.0
75 42 10 13 2 T && T && T
76 42 10 12 2 T && T && F
76 42 10 11 2 T && F && _
76 42 10 10 2 F && _ && _
80 0 0 10 0 1,2,3
81 0 0 10 0 0
77 42 10 0 2 ( 53 & 1 ) != 0
80 0 0 10 0 2,3
81 0 0 10 0 1
77 42 10 0 2 2 < n
80 0 0 10 0 3
81 0 0 10 0 2
77 42 10 0 2 p [ 1 ] != 0.0
78 0 0 14 0 2
79 0 0 14 0 0,1
70 49 15 0 3 3 < n && p [ 2 ] != 0.0
75 49 15 16 3 T && T
76 49 15 15 3 T && F
76 49 15 14 3 F && _
80 0 0 14 0 1,2
81 0 0 14 0 0
77 49 15 0 3 3 < n
80 0 0 14 0 2
81 0 0 14 0 1
77 49 15 0 3 p [ 2 ] != 0.0
3 50 16 0 3
3 51 16 0 2
21 52 16 5 2 2 < n
3 53 17 0 2
3 54 17 0 1
13 55 18 5 1 ( p )
2 56 18 0 0 _Xp_setw
0 57 0 2 0 _Xp_addh
90 0 0 0 0 ( double * p , int n , double x0 )
20 61 2 6 1 n == 0
3 62 3 0 1
21 63 3 7 1 0 < ( errx = _Dunscale ( & xexp , & xscaled ) )
78 0 0 17 0 1,2
79 0 0 17 0 0
70 64 3 0 2 errx == 2 || ( errx = _Dtest ( & p [ 0 ] ) ) <= 0
75 64 3 19 2 T || _
75 64 3 18 2 F || T
76 64 3 17 2 F || F
80 0 0 17 0 2
81 0 0 17 0 0,1
77 64 3 0 2 errx == 2
80 0 0 17 0 1
81 0 0 17 0 0
77 64 3 0 2 ( errx = _Dtest ( & p [ 0 ] ) ) <= 0
3 65 4 0 2
78 0 0 20 0 1,2
79 0 0 20 0 0
71 66 4 0 2 errx == 2 || ( ( * _Pmsw ( & ( x0 ) ) ) & ( ( unsigned short ) 0x8000 ) ) == ( ( * _Pmsw ( & ( p [ 0 ] ) ) ) & ( ( unsigned short ) 0x8000 ) )
75 66 4 22 2 T || _
75 66 4 21 2 F || T
76 66 4 20 2 F || F
80 0 0 20 0 2
81 0 0 20 0 0,1
77 66 4 0 2 errx == 2
80 0 0 20 0 1
81 0 0 20 0 0
77 66 4 0 2 ( ( * _Pmsw ( & ( x0 ) ) ) & ( ( unsigned short ) 0x8000 ) ) == ( ( * _Pmsw ( & ( p [ 0 ] ) ) ) & ( ( unsigned short ) 0x8000 ) )
3 67 5 0 2
40 68 5 0 2
20 72 7 8 3 1 < n
3 73 8 0 3
3 74 8 0 2
3 74 8 0 1
21 75 8 9 1 errx < 0
23 79 12 10 2 k < n
20 85 16 11 3 0 < ( errx = _Dunscale ( & yexp , & yscaled ) )
12 86 17 6 4
3 86 17 0 3
21 87 17 12 3 errx == 0
20 90 18 13 4 k + 1 < n
3 91 19 0 4
12 92 20 7 4
3 93 20 0 3
78 0 0 23 0 2
79 0 0 23 0 0,1
71 95 20 0 3 ( diff = ( long ) yexp - xexp ) <= - mybits && x0 != 0.0
75 95 20 25 3 T && T
76 95 20 24 3 T && F
76 95 20 23 3 F && _
80 0 0 23 0 1,2
81 0 0 23 0 0
77 95 20 0 3 ( diff = ( long ) yexp - xexp ) <= - mybits
80 0 0 23 0 2
81 0 0 23 0 1
77 95 20 0 3 x0 != 0.0
78 0 0 26 0 2
79 0 0 26 0 0,1
73 98 23 0 4 ++ j < n && p [ j ] != 0.0
75 98 23 28 4 T && T
76 98 23 27 4 T && F
76 98 23 26 4 F && _
80 0 0 26 0 1,2
81 0 0 26 0 0
77 98 23 0 4 ++ j < n
80 0 0 26 0 2
81 0 0 26 0 1
77 98 23 0 4 p [ j ] != 0.0
3 99 24 0 4
20 100 24 14 4 j < n - 1
3 101 25 0 4
21 102 25 15 4 j == n
3 103 26 0 4
23 104 28 16 4 k < j
3 105 29 0 4
3 108 31 0 3
78 0 0 29 0 2
79 0 0 29 0 0,1
71 109 31 0 3 mybits <= diff && x0 != 0.0
75 109 31 31 3 T && T
76 109 31 30 3 T && F
76 109 31 29 3 F && _
80 0 0 29 0 1,2
81 0 0 29 0 0
77 109 31 0 3 mybits <= diff
80 0 0 29 0 2
81 0 0 29 0 1
77 109 31 0 3 x0 != 0.0
3 113 33 0 3
40 114 33 0 3
20 116 33 17 4 ( p [ k ] += x0 ) == 0.0
78 0 0 32 0 2
79 0 0 32 0 0,1
73 118 36 0 5 ++ m < n && ( p [ m - 1 ] = p [ m ] ) != 0.0
75 118 36 34 5 T && T
76 118 36 33 5 T && F
76 118 36 32 5 F && _
80 0 0 32 0 1,2
81 0 0 32 0 0
77 118 36 0 5 ++ m < n
80 0 0 32 0 2
81 0 0 32 0 1
77 118 36 0 5 ( p [ m - 1 ] = p [ m ] ) != 0.0
3 118 37 0 5
20 119 38 18 5 p [ k ] == 0.0
12 120 39 8 6
3 120 39 0 5
3 121 39 0 4
20 124 41 19 4 prevexp - mybits < xexp
20 128 43 20 5 ( p [ k ] -= x0 ) == 0.0
78 0 0 35 0 2
79 0 0 35 0 0,1
73 130 46 0 6 ++ m < n && ( p [ m - 1 ] = p [ m ] ) != 0.0
75 130 46 37 6 T && T
76 130 46 36 6 T && F
76 130 46 35 6 F && _
80 0 0 35 0 1,2
81 0 0 35 0 0
77 130 46 0 6 ++ m < n
80 0 0 35 0 2
81 0 0 35 0 1
77 130 46 0 6 ( p [ m - 1 ] = p [ m ] ) != 0.0
3 130 47 0 6
3 131 48 0 5
20 132 48 21 5 -- k == 0
3 133 49 0 5
40 134 49 0 5
3 139 52 0 5
3 140 52 0 4
21 141 52 22 4 k + 1 == n
12 142 53 9 5
3 142 53 0 4
40 143 53 0 4
25 151 60 23 5 x0 != 0.0
3 154 62 0 4
3 155 62 0 3
3 156 62 0 2
3 157 62 0 1
13 158 63 10 1 ( p )
2 159 63 0 0 _Xp_addh
0 160 0 3 0 _Xp_mulh
90 0 0 0 0 ( double * p , int n , double x0 )
20 166 3 24 1 0 < n
20 169 4 25 2 0 <= ( errx = _Dtest ( & buf [ 0 ] ) )
20 171 4 26 3 errx == 2
3 172 5 0 3
78 0 0 38 0 2
79 0 0 38 0 0,1
70 174 6 0 3 0 < errx && 1 < n
75 174 6 40 3 T && T
76 174 6 39 3 T && F
76 174 6 38 3 F && _
80 0 0 38 0 1,2
81 0 0 38 0 0
77 174 6 0 3 0 < errx
80 0 0 38 0 2
81 0 0 38 0 1
77 174 6 0 3 1 < n
3 175 7 0 3
13 176 8 11 3 ( p )
3 177 8 0 2
3 179 9 0 1
23 180 11 27 1 k < n
23 182 13 28 2 j < 4
78 0 0 41 0 2
79 0 0 41 0 0,1
70 183 13 0 3 k + j < n && p [ k + j ] != 0.0
75 183 13 43 3 T && T
76 183 13 42 3 T && F
76 183 13 41 3 F && _
80 0 0 41 0 1,2
81 0 0 41 0 0
77 183 13 0 3 k + j < n
80 0 0 41 0 2
81 0 0 41 0 1
77 183 13 0 3 p [ k + j ] != 0.0
3 187 15 0 3
40 188 15 0 3
12 192 18 12 4
3 193 18 0 3
3 193 18 0 2
20 194 18 29 2 buf [ 0 ] == 0.0
12 195 19 13 3
3 195 19 0 2
40 196 19 0 2
23 206 29 30 3 ++ i < j
20 207 29 31 4 ( buf [ i - 1 ] = buf [ i ] ) == 0.0
12 208 30 14 5
3 208 30 0 4
3 208 30 0 3
3 209 30 0 2
3 210 30 0 1
13 211 31 15 1 ( p )
2 212 31 0 0 _Xp_mulh
0 213 0 4 0 _Xp_setn
90 0 0 0 0 ( double * p , int n , long x )
13 216 2 16 1 ( p )
2 217 2 0 0 _Xp_setn
0 218 0 5 0 _Xp_movx
90 0 0 0 0 ( double * p , int n , const double * q )
13 221 2 17 1 ( p )
2 222 2 0 0 _Xp_movx
0 223 0 6 0 _Xp_addx
90 0 0 0 0 ( double * p , int n , const double * q , int m )
78 0 0 44 0 2
79 0 0 44 0 0,1
73 227 3 0 1 k < m && q [ k ] != 0.0
75 227 3 46 1 T && T
76 227 3 45 1 T && F
76 227 3 44 1 F && _
80 0 0 44 0 1,2
81 0 0 44 0 0
77 227 3 0 1 k < m
80 0 0 44 0 2
81 0 0 44 0 1
77 227 3 0 1 q [ k ] != 0.0
3 228 4 0 1
13 229 5 18 1 ( p )
2 230 5 0 0 _Xp_addx
0 231 0 7 0 _Xp_subx
90 0 0 0 0 ( double * p , int n , const double * q , int m )
78 0 0 47 0 2
79 0 0 47 0 0,1
73 235 3 0 1 k < m && q [ k ] != 0.0
75 235 3 49 1 T && T
76 235 3 48 1 T && F
76 235 3 47 1 F && _
80 0 0 47 0 1,2
81 0 0 47 0 0
77 235 3 0 1 k < m
80 0 0 47 0 2
81 0 0 47 0 1
77 235 3 0 1 q [ k ] != 0.0
3 236 4 0 1
13 237 5 19 1 ( p )
2 238 5 0 0 _Xp_subx
0 239 0 8 0 _Xp_ldexpx
90 0 0 0 0 ( double * p , int n , int m )
23 242 3 32 1 k < n
20 245 4 33 2 p [ k ] == 0.0
12 246 5 20 3
3 246 5 0 2
3 247 5 0 1
13 248 6 21 1 ( p )
2 249 6 0 0 _Xp_ldexpx
0 250 0 9 0 _Xp_mulx
90 0 0 0 0 ( double * p , int n , const double * q , int m , double * ptemp2 )
78 0 0 50 0 1,2
79 0 0 50 0 0
70 254 0 0 1 n == 0 || m == 0
75 254 0 52 1 T || _
75 254 0 51 1 F || T
76 254 0 50 1 F || F
80 0 0 50 0 2
81 0 0 50 0 0,1
77 254 0 0 1 n == 0
80 0 0 50 0 1
81 0 0 50 0 0
77 254 0 0 1 m == 0
3 255 1 0 1
78 0 0 53 0 1,2
79 0 0 53 0 0
71 256 1 0 1 q [ 0 ] == 0.0 || q [ 1 ] == 0.0
75 256 1 55 1 T || _
75 256 1 54 1 F || T
76 256 1 53 1 F || F
80 0 0 53 0 2
81 0 0 53 0 0,1
77 256 1 0 1 q [ 0 ] == 0.0
80 0 0 53 0 1
81 0 0 53 0 0
77 256 1 0 1 q [ 1 ] == 0.0
3 257 2 0 1
40 258 2 0 1
78 0 0 56 0 2
79 0 0 56 0 0,1
73 265 9 0 2 j < m && q [ j ] != 0.0
75 265 9 58 2 T && T
76 265 9 57 2 T && F
76 265 9 56 2 F && _
80 0 0 56 0 1,2
81 0 0 56 0 0
77 265 9 0 2 j < m
80 0 0 56 0 2
81 0 0 56 0 1
77 265 9 0 2 q [ j ] != 0.0
3 270 12 0 2
3 271 12 0 1
13 272 13 22 1 ( p )
2 273 13 0 0 _Xp_mulx
0 274 0 10 0 _Xp_invx
90 0 0 0 0 ( double * p , int n , double * ptemp4 )
20 277 1 34 1 n == 0
3 278 2 0 1
21 279 2 35 1 0 <= ( errx = _Dtest ( & p [ 0 ] ) )
20 281 2 36 2 errx == 1
3 282 3 0 2
21 283 3 37 2 errx == 0
3 284 4 0 2
3 285 4 0 1
40 286 4 0 1
20 295 11 38 2 1 < n
3 296 12 0 2
23 298 15 39 2 k < n
3 305 20 0 2
3 306 20 0 1
13 307 21 23 1 ( p )
2 308 21 0 0 _Xp_invx
0 309 0 11 0 _Xp_sqrtx
90 0 0 0 0 ( double * p , int n , double * ptemp4 )
20 311 0 40 1 n == 0
3 312 1 0 1
78 0 0 59 0 1,2
79 0 0 59 0 0
71 313 1 0 1 0 <= _Dtest ( & p [ 0 ] ) || p [ 0 ] < 0.0
75 313 1 61 1 T || _
75 313 1 60 1 F || T
76 313 1 59 1 F || F
80 0 0 59 0 2
81 0 0 59 0 0,1
77 313 1 0 1 0 <= _Dtest ( & p [ 0 ] )
80 0 0 59 0 1
81 0 0 59 0 0
77 313 1 0 1 p [ 0 ] < 0.0
20 315 1 41 2 p [ 0 ] < 0.0
3 319 3 0 2
3 320 3 0 1
40 321 3 0 1
20 328 8 42 2 1 < n
3 329 9 0 2
23 331 12 43 2 k < n
3 339 18 0 2
3 341 19 0 1
13 342 20 24 1 ( p )
2 343 20 0 0 _Xp_sqrtx
%343,12,25,44,62,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xquad.c
7 1561811965 0 0
0 245 0 0 0 _Quad_multiply
90 0 0 0 0 ( double x , double y )
20 248 1 0 1 ans == 0.0
3 255 6 0 1
13 256 7 0 1 ( ans )
2 257 7 0 0 _Quad_multiply
0 258 0 1 0 _Quad
90 0 0 0 0 ( double * px , int retcode )
20 262 2 1 1 retcode & 1
20 266 4 2 2 x == 0.0
3 267 5 0 2
40 268 5 0 2
3 272 7 0 2
20 275 9 3 2 * px != 0.0
3 276 10 0 2
20 277 10 4 2 0.25 < x
3 281 12 0 2
21 282 12 5 2 x < - 0.25
3 286 14 0 2
13 288 16 1 2 ( qoff )
3 289 16 0 1
78 0 0 0 0 2
79 0 0 0 0 0,1
70 290 16 0 1 - piby4 < x && x < piby4
75 290 16 2 1 T && T
76 290 16 1 1 T && F
76 290 16 0 1 F && _
80 0 0 0 0 1,2
81 0 0 0 0 0
77 290 16 0 1 - piby4 < x
80 0 0 0 0 2
81 0 0 0 0 1
77 290 16 0 1 x < piby4
13 293 18 2 2 ( 0 )
3 294 18 0 1
78 0 0 3 0 2
79 0 0 3 0 0,1
71 295 18 0 1 - huge_rad < x && x < huge_rad
75 295 18 5 1 T && T
76 295 18 4 1 T && F
76 295 18 3 1 F && _
80 0 0 3 0 1,2
81 0 0 3 0 0
77 295 18 0 1 - huge_rad < x
80 0 0 3 0 2
81 0 0 3 0 1
77 295 18 0 1 x < huge_rad
20 298 19 6 2 0.0 <= g
3 299 20 0 2
40 300 20 0 2
3 301 21 0 2
20 303 22 7 2 g != 0.0
3 311 28 0 2
3 313 29 0 1
40 314 29 0 1
20 320 33 8 2 xexp < 53 + 5 + ( 1 << 5 )
3 321 34 0 2
40 322 34 0 2
20 329 39 9 3 xpx [ 1 ] != 0.0
3 334 42 0 3
3 335 42 0 2
78 0 0 6 0 1,2
79 0 0 6 0 0
73 336 44 0 2 xpz [ 0 ] < - huge_rad || huge_rad < xpz [ 0 ]
75 336 44 8 2 T || _
75 336 44 7 2 F || T
76 336 44 6 2 F || F
80 0 0 6 0 2
81 0 0 6 0 0,1
77 336 44 0 2 xpz [ 0 ] < - huge_rad
80 0 0 6 0 1
81 0 0 6 0 0
77 336 44 0 2 huge_rad < xpz [ 0 ]
20 343 49 10 3 xpx [ 1 ] != 0.0
3 349 53 0 3
3 351 54 0 2
20 353 55 11 2 0.0 <= g
3 354 56 0 2
40 355 56 0 2
3 356 57 0 2
20 358 58 12 2 g != 0.0
3 364 62 0 2
3 366 63 0 1
78 0 0 9 0 1,2
79 0 0 9 0 0
70 368 63 0 1 g < - ( double ) 0x7fffffffL || ( double ) 0x7fffffffL < g
75 368 63 11 1 T || _
75 368 63 10 1 F || T
76 368 63 9 1 F || F
80 0 0 9 0 2
81 0 0 9 0 0,1
77 368 63 0 1 g < - ( double ) 0x7fffffffL
80 0 0 9 0 1
81 0 0 9 0 0
77 368 63 0 1 ( double ) 0x7fffffffL < g
3 369 64 0 1
13 370 65 3 1 ( ( unsigned int ) ( long ) g & 0x3 )
2 371 65 0 0 _Quad
0 372 0 2 0 _Quadph
90 0 0 0 0 ( double * px , double phase )
78 0 0 12 0 1,2
79 0 0 12 0 0
70 380 5 0 1 ph0 < - ( double ) ( 0x7fffffffL / 2 ) || ( double ) ( 0x7fffffffL / 2 ) < ph0
75 380 5 14 1 T || _
75 380 5 13 1 F || T
76 380 5 12 1 F || F
80 0 0 12 0 2
81 0 0 12 0 0,1
77 380 5 0 1 ph0 < - ( double ) ( 0x7fffffffL / 2 )
80 0 0 12 0 1
81 0 0 12 0 0
77 380 5 0 1 ( double ) ( 0x7fffffffL / 2 ) < ph0
3 381 6 0 1
20 384 8 13 1 piby4 <= ans
3 389 11 0 1
21 390 11 14 1 ans <= - piby4
3 395 14 0 1
40 396 14 0 1
3 397 15 0 1
13 398 16 4 1 ( qoff )
2 399 16 0 0 _Quadph
%399,3,5,15,15,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xsin.c
7 1561811966 0 0
0 19 0 0 0 _Sinx
90 0 0 0 0 ( double x , unsigned int qoff , int quads )
42 21 0 0 1 _Dtest ( & x )
14 23 0 0 1 2
13 24 1 1 2 ( x )
14 25 1 2 1 0
20 26 1 0 2 ( qoff & 0x1 ) != 0
3 27 2 0 2
25 28 2 1 2 ( qoff & 0x2 ) != 0
13 28 3 3 2 ( ( qoff & 0x2 ) != 0 ? - x : x )
14 29 3 4 1 1
13 31 5 5 2 ( _Nan . _Double )
15 32 5 6 1
78 0 0 0 0 2
79 0 0 0 0 0,1
70 34 6 0 2 - _Rteps . _Double < x && x < _Rteps . _Double
75 34 6 2 2 T && T
76 34 6 1 2 T && F
76 34 6 0 2 F && _
80 0 0 0 0 1,2
81 0 0 0 0 0
77 34 6 0 2 - _Rteps . _Double < x
80 0 0 0 0 2
81 0 0 0 0 1
77 34 6 0 2 x < _Rteps . _Double
20 36 6 2 3 ( qoff & 0x1 ) != 0
3 37 7 0 3
3 38 7 0 2
40 39 7 0 2
20 42 8 3 3 ( qoff & 0x1 ) != 0
3 43 9 0 3
40 44 9 0 3
3 45 10 0 3
3 46 10 0 2
20 47 10 4 2 qoff & 0x2
3 48 11 0 2
13 49 12 7 2 ( x )
3 50 12 0 1
2 51 12 0 0 _Sinx
%51,1,8,5,3,0
@E:\svn\qkithightecarm\trunk\Work\QKitExtension\Analysis\Coverage\_FExp\xvalues.c
7 1561811966 0 0
%9,0,0,0,0,0
END OF SYMBOLFILE
